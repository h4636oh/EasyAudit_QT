{
    "1.1.1.1": {
        "Title": "Ensure cramfs kernel module is not available",
        "Description": "The cramfs  filesystem type is a compressed read -only Linux filesystem embedded in \nsmall footprint systems. A cramfs  image can be used without having to first decompress \nthe image.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to disable the cramfs  module:  \n-IF- the module is available in the running kernel:  \n• Create a file ending in .conf  with install cramfs /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist cramfs  in the /etc/modprobe.d/  \ndirectory  \n• Unload cramfs  from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file ending in .conf  with blacklist cramfs  in the /etc/modprobe.d/  \ndirectory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.1.2": {
        "Title": "Ensure freevxfs kernel module is not available",
        "Description": "The freevxfs  filesystem type is a free version of the Veritas type filesystem. This is the \nprimary filesystem type for HP -UX operating systems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to disable the freevxfs  module:  \n-IF- the module is available in the running kernel:  \n• Create a file ending in .conf  with install freevxfs /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist freevxfs  in the /etc/modprobe.d/  \ndirectory  \n• Unload freevxfs  from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file ending in .conf  with blacklist freevxfs  in the /etc/modprobe.d/  \ndirectory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.1.3": {
        "Title": "Ensure hfs kernel module is not available",
        "Description": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS \nfilesystems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to disable the hfs module:  \n-IF- the module is available in the running kernel:  \n• Create a file ending in .conf  with install hfs /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist hfs  in the /etc/modprobe.d/  \ndirectory  \n• Unload hfs from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file ending in .conf  with blacklist hfs  in the /etc/modprobe.d/  \ndirectory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.1.4": {
        "Title": "Ensure hfsplus kernel module is not available",
        "Description": "The hfsplus  filesystem type is a hierarchical filesystem designed to replace hfs that \nallows you to mount Mac OS filesystems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to disable the hfsplus  module:  \n-IF- the module is available in the running kernel:  \n• Create a file ending in .conf  with install hfsplus /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist hfsplus  in the /etc/modprobe.d/  \ndirectory  \n• Unload hfsplus  from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file ending in .conf  with blacklist hfsplus  in the /etc/modprobe.d/  \ndirectory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.1.5": {
        "Title": "Ensure jffs2 kernel module is not available",
        "Description": "The jffs2  (journaling flash filesystem 2) filesystem type is a log -structured filesystem \nused in flash memory devices.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to disable the jffs2  module:  \n-IF- the module is available in the running kernel:  \n• Create a file ending in .conf  with install jffs2 /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist jffs2  in the /etc/modprobe.d/  \ndirectory  \n• Unload jffs2  from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file ending in .conf  with blacklist jffs2  in the /etc/modprobe.d/  \ndirectory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.1.6": {
        "Title": "Ensure squashfs kernel module is not available",
        "Description": "The squashfs  filesystem type is a compressed read -only Linux filesystem embedded in \nsmall footprint systems. A squashfs  image can be used without having to first \ndecompress the image.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.  \nImpact:  \nAs Snap packages utilize squashfs  as a compressed filesystem, disabling squashfs  will \ncause Snap packages to fail.  \nSnap application packages of software are self -contained and work across a range of \nLinux distributions. This is unlike traditional Linux package management approaches, \nlike APT or RPM, which require specifically adapted packages per Linux distribution on \nan application update and delay therefore application deployment from developers to \ntheir software's end -user. Snaps themselves have no dependency on any external store \n(\"App store\"), can be obtained from any source and can be therefore used for upstream \nsoftware deployment.",
        "Remediation": "Run the following script to disable the squashfs  module:  \n-IF- the module is available in the running kernel:  \n• Create a file ending in .conf  with install squashfs /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist squashfs  in the /etc/modprobe.d/  \ndirectory  \n• Unload squashfs  from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file ending in .conf  with blacklist squashfs  in the /etc/modprobe.d/  \ndirectory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.1.1.7": {
        "Title": "Ensure udf kernel module is not available",
        "Description": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 \nand ECMA -167 specifications. This is an open vendor filesystem type for data storage \non a broad range of media. This filesystem type is necessary to support writing DVDs \nand newe r optical disc formats.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.  \nImpact:  \nMicrosoft Azure requires the usage of udf. \nudf should not  be disabled on systems run on Microsoft Azure.",
        "Remediation": "Run the following script to disable the udf module:  \n-IF- the module is available in the running kernel:  \n• Create a file ending in .conf  with install udf /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist udf  in the /etc/modprobe.d/  \ndirectory  \n• Unload udf from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file ending in .conf  with blacklist udf  in the /etc/modprobe.d/  \ndirectory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.1.1.8": {
        "Title": "Ensure usb -storage kernel module is not available",
        "Description": "USB storage provides a means to transfer and store files ensuring persistence and \navailability of the files independent of network connection status. Its popularity and utility \nhas led to USB -based malware being a simple and common means for network \ninfiltration and a first step to establishing a persistent threat within a networked \nenvironment.",
        "Rationale": "Restricting USB access on the system will decrease the physical attack surface for a \ndevice and diminish the possible vectors to introduce malware.  \nImpact:  \nDisabling the usb-storage  module will disable any usage of USB storage devices.  \nIf requirements and local site policy allow the use of such devices, other solutions \nshould be configured accordingly instead. One example of a commonly used solution is \nUSBGuard .",
        "Remediation": "Run the following script to disable the usb-storage  module:  \n-IF- the module is available in the running kernel:  \n• Create a file ending in .conf  with install usb -storage /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist usb -storage  in the \n/etc/modprobe.d/  directory  \n• Unload usb-storage  from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file ending in .conf  with blacklist usb -storage  in the \n/etc/modprobe.d/  directory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.1.1": {
        "Title": "Ensure /tmp is a separate partition",
        "Description": "The /tmp directory is a world -writable directory used for temporary storage by all users \nand some applications.  \n- IF - an entry for /tmp exists in /etc/fstab  it will take precedence over entries in \nsystemd default unit file.  \nNote:  In an environment where the main system is diskless and connected to iSCSI, \nentries in /etc/fstab  may not take precedence.  \n/tmp can be configured to use tmpfs . \ntmpfs  puts everything into the kernel internal caches and grows and shrinks to \naccommodate the files it contains and is able to swap unneeded pages out to swap \nspace. It has maximum size limits which can be adjusted on the fly via mount -o \nremount . \nSince tmpfs  lives completely in the page cache and on swap, all tmpfs  pages will be \nshown as \"Shmem\" in /proc/meminfo  and \"Shared\" in free. Notice that these counters \nalso include shared memory. The most reliable way to get the count is using df and du. \ntmpfs  has three mount options for sizing:  \n• size: The limit of allocated bytes for this tmpfs  instance. The default is half of \nyour physical RAM without swap. If you oversize your tmpfs  instances the \nmachine will deadlock since the OOM handler will not be able to free that \nmemory.  \n• nr_blocks : The same as size, but in blocks of PAGE_SIZE.  \n• nr_inodes : The maximum number of inodes for this instance. The default is half \nof the number of your physical RAM pages, or (on a machine with highmem) the \nnumber of lowmem RAM pages, whichever is the lower.  \nThese parameters accept a suffix k, m or g and can be changed on remount. The size \nparameter also accepts a suffix % to limit this tmpfs  instance to that percentage of your \nphysical RAM. The default, when neither size nor nr_blocks  is specified, is size=50% .  \nInternal Only - General",
        "Rationale": "Making /tmp its own file system allows an administrator to set additional mount options \nsuch as the noexec  option on the mount, making /tmp useless for an attacker to install \nexecutable code. It would also prevent an attacker from establishing a hard link to a \nsystem setuid  program and wait for it to be updated. Once the program was updated, \nthe hard link would be broken, and the attacker would have his own copy of the \nprogram. If the program happened to have a security vulnerability, the attacker could \ncontinue to exploit the known flaw.  \nThis can be accomplished by either mounting tmpfs  to /tmp, or creating a separate \npartition for /tmp. \nImpact:  \nBy design files saved to /tmp should have no expectation of surviving a reboot of the \nsystem. tmpfs  is ram based and all files stored to tmpfs  will be lost when the system is \nrebooted.  \nIf files need to be persistent through a reboot, they should be saved to /var/tmp  not \n/tmp. \nSince the /tmp directory is intended to be world -writable, there is a risk of resource \nexhaustion if it is not bound to tmpfs  or a separate partition.  \nRunning out of /tmp space is a problem regardless of what kind of filesystem lies under \nit, but in a configuration where /tmp is not a separate file system it will essentially have \nthe whole disk available, as the default installation only creates a single / partition. On \nthe other hand, a RAM -based /tmp (as with tmpfs ) will almost certainly be much \nsmaller, which can lead to applications filling up the filesystem much more easily. \nAnother alternative is to create a dedicated partition for /tmp from a separate volume or \ndisk. One of the downsides of a disk -based dedicated partition is that it will be slower \nthan tmpfs  which is RAM -based.  \n   \nInternal Only - General",
        "Remediation": "First ensure that systemd is correctly configured to ensure that /tmp will be mounted at \nboot time.  \n# systemctl unmask tmp.mount  \nFor specific configuration requirements of the /tmp mount for your environment, modify \n/etc/fstab . \nExample of using tmpfs  with specific mount options:  \ntmpfs /tmp tmpfs     defaults,rw,nosuid,nodev,noexec,relatime,size=2G  0 \n0 \nNote:  the size=2G  is an example of setting a specific size for tmpfs . \nExample of using a volume or disk with specific mount options. The source location of \nthe volume or disk will vary depending on your environment:  \n<device> /tmp    <fstype>    defaults,nodev,nosuid,noexec   0 0#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.1.2": {
        "Title": "Ensure nodev option set on /tmp partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /tmp filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /tmp.",
        "Remediation": "- IF - a separate partition exists for /tmp. \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the /tmp \npartition.  \nExample:  \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /tmp with the configured options:  \n# mount -o remount /tmp#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.1.3": {
        "Title": "Ensure nosuid option set on /tmp partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to \nensure that users cannot create setuid  files in /tmp.",
        "Remediation": "- IF - a separate partition exists for /tmp. \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/tmp partition.  \nExample:  \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /tmp with the configured options:  \n# mount -o remount /tmp#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.1.4": {
        "Title": "Ensure noexec option set on /tmp partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to \nensure that users cannot run executable binaries from /tmp. \nImpact:  \nSetting the noexec  option on /tmp may prevent installation and/or updating of some 3rd \nparty software.",
        "Remediation": "- IF - a separate partition exists for /tmp. \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/tmp partition.  \nExample:  \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /tmp with the configured options:  \n# mount -o remount /tmp#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.2.1": {
        "Title": "Ensure /dev/shm is a separate partition",
        "Description": "The /dev/shm  directory is a world -writable directory that can function as shared memory \nthat facilitates inter process communication (IPC).",
        "Rationale": "Making /dev/shm  its own file system allows an administrator to set additional mount \noptions such as the noexec  option on the mount, making /dev/shm  useless for an \nattacker to install executable code. It would also prevent an attacker from establishing a \nhard link to a system setuid  program and wait for it to be updated. Once the program \nwas updated, the hard link would be broken and the attacker would have his own copy \nof the program. If the program happened to have a security vulnerability, the attacker \ncould continue to exploit the known flaw.  \nThis can be accomplished by mounting tmpfs  to /dev/shm . \nImpact:  \nSince the /dev/shm  directory is intended to be world -writable, there is a risk of resource \nexhaustion if it is not bound to a separate partition.  \n/dev/shm  utilizing tmpfs  can be resized using the size={size}  parameter in the relevant \nentry in /etc/fstab .",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.2.2": {
        "Title": "Ensure nodev option set on /dev/shm partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /dev/shm  filesystem is not intended to support devices, set this option to \nensure that users cannot attempt to create special devices in /dev/shm  partitions.",
        "Remediation": "For specific configuration requirements of the /dev/shm  mount for your environment, \nmodify /etc/fstab . \nExample:  \ntmpfs /dev/shm  tmpfs     \ndefaults,rw,nosuid,nodev,noexec,relatime,size=2G  0 0#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.2.3": {
        "Title": "Ensure nosuid option set on /dev/shm partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Setting this option on a file system prevents users from introducing privileged programs \nonto the system and allowing non -root users to execute them.",
        "Remediation": "- IF - a separate partition exists for /dev/shm . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/dev/shm  partition. See the fstab(5)  manual page for more information.  \nExample:  \ntmpfs /dev/shm    tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /dev/shm  with the configured options:  \n# mount -o remount /dev/shm  \nNote:  It is recommended to use tmpfs  as the device/filesystem type as /dev/shm  is used \nas shared memory space by applications.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.2.4": {
        "Title": "Ensure noexec option set on /dev/shm partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Setting this option on a file system prevents users from executing programs from shared \nmemory. This deters users from introducing potentially malicious software on the \nsystem.",
        "Remediation": "- IF - a separate partition exists for /dev/shm . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/dev/shm  partition.  \nExample:  \ntmpfs /dev/shm    tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /dev/shm  with the configured options:  \n# mount -o remount /dev/shm  \nNote:  It is recommended to use tmpfs  as the device/filesystem type as /dev/shm  is used \nas shared memory space by applications.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.3.1": {
        "Title": "Ensure separate partition exists for /home",
        "Description": "The /home  directory is used to support disk storage needs of local users.",
        "Rationale": "The default installation only creates a single / partition. Since the /home  directory \ncontains user generated data, there is a risk of resource exhaustion. It will essentially \nhave the whole disk available to fill up and impact the system as a whole. In addition, \nother operations on the system could fill up the disk unrelated to /home  and impact all \nlocal users.  \nConfiguring /home  as its own file system allows an administrator to set additional mount \noptions such as noexec/nosuid/nodev . These options limit an attacker's ability to create \nexploits on the system. In the case of /home  options such as usrquota/grpquota  may be \nconsidered to limit the impact that users can have on each other with regards to disk \nresource exhaustion. Other options allow for specific behavior. See man mount  for exact \ndetails regarding filesystem -independent and filesystem -specific options.  \nAs /home  contains user data, care should be taken to ensure the security and integrity of \nthe data and mount point.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing, or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additiona l tools may \nintroduce their own security considerations.",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /home . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.1.2.3.2": {
        "Title": "Ensure nodev option set on /home partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /home  filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /home .",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.3.3": {
        "Title": "Ensure nosuid option set on /home partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /home  filesystem is only intended for user file storage, set this option to ensure \nthat users cannot create setuid  files in /home .",
        "Remediation": "- IF - a separate partition exists for /home . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/home  partition.  \nExample:  \n<device> /home    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /home  with the configured options:  \n# mount -o remount /home#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.4.1": {
        "Title": "Ensure separate partition exists for /var",
        "Description": "The /var directory is used by daemons and other system services to temporarily store \ndynamic data. Some directories created by these processes may be world -writable.",
        "Rationale": "The reasoning for mounting /var on a separate partition is as follows.  \nThe default installation only creates a single / partition. Since the /var directory may \ncontain world -writable files and directories, there is a risk of resource exhaustion. It will \nessentially have the whole disk available to fill up and impact the system as a whole. In \naddition, other operations on the system could fill up th e disk unrelated to /var and \ncause unintended behavior across the system as the disk is full. See man auditd.conf  \nfor details.  \nConfiguring /var as its own file system allows an administrator to set additional mount \noptions such as noexec/nosuid/nodev . These options limits an attackers ability to create \nexploits on the system. Other options allow for specific behavior. See man mount  for \nexact details regarding filesystem -independent and filesystem -specific options.  \nAn example of exploiting /var may be an attacker establishing a hard -link to a system \nsetuid  program and wait for it to be updated. Once the program was updated, the hard -\nlink would be broken and the attacker would have his own copy of the program. If the \nprogram happened to have a security vulnerability, the attacker could continue to exploit \nthe known flaw.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing, or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additiona l tools may \nintroduce their own security considerations.  \n   \nInternal Only - General",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var. \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.1.2.4.2": {
        "Title": "Ensure nodev option set on /var partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /var.",
        "Remediation": "- IF - a separate partition exists for /var. \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the /var \npartition.  \nExample:  \n<device> /var    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var with the configured options:  \n# mount -o remount /var#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.4.3": {
        "Title": "- General CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.3 Configure Data Access Control Lists Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications. ● ● ● v7 14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information base d on their need to access the information as a part of their responsibilities. ● ● ● MITRE ATT&CK Mappings: Techniques / Sub - techniques Tactics Mitigations T1200, T1200.000 TA0005 M1022 Internal Only - General 1.1.2.4.3 Ensure nosuid option set on /var partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /var filesystem is only intended for variable files such as logs, set this option \nto ensure that users cannot create setuid  files in /var.",
        "Remediation": "- IF - a separate partition exists for /var. \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/var partition.  \nExample:  \n<device> /var    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var with the configured options:  \n# mount -o remount /var#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.5.1": {
        "Title": "Ensure separate partition exists for /var/tmp",
        "Description": "The /var/tmp  directory is a world -writable directory used for temporary storage by all \nusers and some applications. Temporary files residing in /var/tmp  are to be preserved \nbetween reboots.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/tmp  directory is \nworld -writable, there is a risk of resource exhaustion. In addition, other operations on \nthe system could fill up the disk unrelated to /var/tmp  and cause potential disruption to \ndaemons as the disk is full.  \nConfiguring /var/tmp  as its own file system allows an administrator to set additional \nmount options such as noexec/nosuid/nodev . These options limits an attackers ability to \ncreate exploits on the system.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing, or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additiona l tools may \nintroduce their own security considerations.",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/tmp . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.1.2.5.2": {
        "Title": "Ensure nodev option set on /var/tmp partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var/tmp  filesystem is not intended to support devices, set this option to \nensure that users cannot create a block or character special devices in /var/tmp .",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.5.3": {
        "Title": "Ensure nosuid option set on /var/tmp partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /var/tmp  filesystem is only intended for temporary file storage, set this option \nto ensure that users cannot create setuid  files in /var/tmp .",
        "Remediation": "- IF - a separate partition exists for /var/tmp . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/var/tmp  partition.  \nExample:  \n<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/tmp  with the configured options:  \n# mount -o remount /var/tmp#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "Ensure": {
        "Title": "noexec option set on /var/tmp partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /var/tmp  filesystem is only intended for temporary file storage, set this option \nto ensure that users cannot run executable binaries from /var/tmp .",
        "Remediation": "- IF - a separate partition exists for /var/tmp . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/var/tmp  partition.  \nExample:  \n<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/tmp  with the configured options:  \n# mount -o remount /var/tmp#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.6.1": {
        "Title": "Ensure separate partition exists for /var/log",
        "Description": "The /var/log  directory is used by system services to store log data.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/log  directory \ncontains log files which can grow quite large, there is a risk of resource exhaustion. It \nwill essentially have the whole disk available to fill up and impact the system as a whole.  \nConfiguring /var/log  as its own file system allows an administrator to set additional \nmount options such as noexec/nosuid/nodev . These options limit an attackers ability to \ncreate exploits on the system. Other options allow for specific behavior. See man mount  \nfor exact details regarding filesystem -independent and filesystem -specific options.  \nAs /var/log  contains log files, care should be taken to ensure the security and integrity \nof the data and mount point.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing, or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additiona l tools may \nintroduce their own security considerations.",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/log  . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.1.2.6.2": {
        "Title": "Ensure nodev option set on /var/log partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var/log  filesystem is not intended to support devices, set this option to \nensure that users cannot create a block or character special devices in /var/log .",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.6.3": {
        "Title": "Ensure nosuid option set on /var/log partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /var/log  filesystem is only intended for log files, set this option to ensure that \nusers cannot create setuid  files in /var/log .",
        "Remediation": "- IF - a separate partition exists for /var/log . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/var/log  partition.  \nExample:  \n<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/log  with the configured options:  \n# mount -o remount /var/log#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.6.4": {
        "Title": "Ensure noexec option set on /var/log partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /var/log  filesystem is only intended for log files, set this option to ensure that \nusers cannot run executable binaries from /var/log .",
        "Remediation": "- IF - a separate partition exists for /var/log . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/var/log  partition.  \nExample:  \n<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/log  with the configured options:  \n# mount -o remount /var/log#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.7.1": {
        "Title": "Ensure separate partition exists for /var/log/audit",
        "Description": "The auditing daemon, auditd , stores log data in the /var/log/audit  directory.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/log/audit  \ndirectory contains the audit.log  file which can grow quite large, there is a risk of \nresource exhaustion. It will essentially have the whole disk available to fill up and impact \nthe system as a whole. In addition, other operations on the system could fill up the disk \nunrelated to /var/log/audit  and cause auditd  to trigger it's space_left_action  as the \ndisk is full. See man auditd.conf  for details.  \nConfiguring /var/log/audit  as its own file system allows an administrator to set \nadditional mount options such as noexec/nosuid/nodev . These options limit an \nattacker's ability to create exploits on the system. Other options allow for specific \nbehavior. See man mount  for exact details regarding filesystem -independent and \nfilesystem -specific options.  \nAs /var/log/audit  contains audit logs, care should be taken to ensure the security and \nintegrity of the data and mount point.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing, or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additiona l tools may \nintroduce their own security considerations.",
        "Remediation": "",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.1.2.7.2": {
        "Title": "Ensure nodev option set on /var/log/audit partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/log/audit . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.7.3": {
        "Title": "Ensure nosuid option set on /var/log/audit partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /var/log/audit  filesystem is only intended for variable files such as logs, set \nthis option to ensure that users cannot create setuid  files in /var/log/audit .",
        "Remediation": "- IF - a separate partition exists for /var/log/audit . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/var/log/audit  partition.  \nExample:  \n<device> /var/log/audit    <fstype>     \ndefaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var/log/audit  with the configured options:  \n# mount -o remount /var/log/audit#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.1.2.7.4": {
        "Title": "Ensure noexec option set on /var/log/audit partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /var/log/audit  filesystem is only intended for audit logs, set this option to \nensure that users cannot run executable binaries from /var/log/audit .",
        "Remediation": "- IF - a separate partition exists for /var/log/audit . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/var/log/audit  partition.  \nExample:  \n<device> /var/log/audit    <fstype>     \ndefaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var/log/audit  with the configured options:  \n# mount -o remount /var/log/audit#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.2.1.1": {
        "Title": "Ensure GPG keys are configured (Manual)",
        "Description": "Most package managers implement GPG key signing to verify package integrity during \ninstallation.",
        "Rationale": "It is important to ensure that updates are obtained from a valid source to protect against \nspoofing that could lead to the inadvertent installation of malware on the system.",
        "Remediation": "Update your package manager GPG keys in accordance with site policy.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.2.1.2": {
        "Title": "Ensure package manager repositories are configured (Manual)",
        "Description": "Systems need to have package manager repositories configured to ensure they receive \nthe latest patches and updates.",
        "Rationale": "If a system's package repositories are misconfigured important patches may not be \nidentified or a rogue repository could introduce compromised software.",
        "Remediation": "Configure your package manager repositories according to site policy.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.2.2.1": {
        "Title": "Ensure updates, patches, and additional security software are installed (Manual)",
        "Description": "Periodically patches are released for included software either due to security flaws or to \ninclude additional functionality.",
        "Rationale": "Newer patches may contain security enhancements that would not be available through \nthe latest full update. As a result, it is recommended that the latest software patches be \nused to take advantage of the latest functionality. As with any software installa tion, \norganizations need to determine if a given update meets their requirements and verify \nthe compatibility and supportability of any additional software against the update \nrevision that is selected.",
        "Remediation": "Run the following command to update all packages following local site policy guidance \non applying updates and patches:  \n# apt update  \n \n# apt upgrade  \n  - OR - \n# apt dist -upgrade#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "Internal": {
        "Title": "Only - General 1.3.1.1 Ensure AppArmor is installed",
        "Description": "AppArmor provides Mandatory Access Controls.",
        "Rationale": "Without a Mandatory Access Control system installed only the default Discretionary \nAccess Control system will be available.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.3.1.2": {
        "Title": "Ensure AppArmor is enabled in the bootloader configuration",
        "Description": "Configure AppArmor to be enabled at boot time and verify that it has not been \noverwritten by the bootloader boot parameters.  \nNote: This recommendation is designed around the grub bootloader, if LILO or another \nbootloader is in use in your environment enact equivalent settings.",
        "Rationale": "AppArmor must be enabled at boot time in your bootloader configuration to ensure that \nthe controls it provides are not overridden.",
        "Remediation": "Edit /etc/default/grub  and add the apparmor=1  and security=apparmor  parameters to \nthe GRUB_CMDLINE_LINUX=  line \nGRUB_CMDLINE_LINUX=\"apparmor=1 security=apparmor\"  \nRun the following command to update the grub2  configuration:  \n# update -grub#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.3.1.3": {
        "Title": "Ensure all AppArmor Profiles are in enforce or complain mode",
        "Description": "AppArmor profiles define what resources applications are able to access.",
        "Rationale": "Security configuration requirements vary from site to site. Some sites may mandate a \npolicy that is stricter than the default policy, which is perfectly acceptable. This item is \nintended to ensure that any policies that exist on the system are activated.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.3.1.4": {
        "Title": "Ensure all AppArmor Profiles are enforcing",
        "Description": "AppArmor profiles define what resources applications are able to access.",
        "Rationale": "Security configuration requirements vary from site to site. Some sites may mandate a \npolicy that is stricter than the default policy, which is perfectly acceptable. This item is \nintended to ensure that any policies that exist on the system are activated.",
        "Remediation": "Run the following command to set all profiles to enforce mode:  \n# aa-enforce /etc/apparmor.d/*  \nOR \nRun the following command to set all profiles to complain mode:  \n# aa-complain /etc/apparmor.d/*  \nNote: Any unconfined processes may need to have a profile created or activated for \nthem and then be restarted#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.4.1": {
        "Title": "Ensure bootloader password is set",
        "Description": "Setting the boot loader password will require that anyone rebooting the system must \nenter a password before being able to set command line boot parameters",
        "Rationale": "Requiring a boot password upon execution of the boot loader will prevent an \nunauthorized user from entering boot parameters or changing the boot partition. This \nprevents users from weakening security (e.g. turning off AppArmor at boot time).  \nImpact:  \nIf password protection is enabled, only the designated superuser can edit a GRUB 2 \nmenu item by pressing \"e\" or access the GRUB 2 command line by pressing \"c\"  \nIf GRUB 2 is set up to boot automatically to a password -protected menu entry the user \nhas no option to back out of the password prompt to select another menu entry. Holding \nthe SHIFT key will not display the menu in this case. The user must enter the corre ct \nusername and password. If unable to do so, the configuration files will have to be edited \nvia a LiveCD or other means to fix the problem  \nYou can add --unrestricted  to the menu entries to allow the system to boot without \nentering a password. A password will still be required to edit menu items.  \nMore Information: https://help.ubuntu.com/community/Grub2/Passwords",
        "Remediation": "Create an encrypted password with grub-mkpasswd -pbkdf2 : \n# grub-mkpasswd -pbkdf2 --iteration -count=600000 --salt=64 \n \nEnter password: <password>  \nReenter password: <password>  \nPBKDF2 hash of your password is <encrypted -password>  \nAdd the following into a custom /etc/grub.d  configuration file:  \ncat <<EOF  \nexec tail -n +2 $0 \nset superusers=\"<username>\"  \npassword_pbkdf2 <username> <encrypted -password>  \nEOF \nThe superuser/user information and password should not be contained in the \n/etc/grub.d/00_header  file as this file could be overwritten in a package update.  \nIf there is a requirement to be able to boot/reboot without entering the password, edit \n/etc/grub.d/10_linux  and add --unrestricted  to the line CLASS=  \nExample:  \nCLASS=\"--class gnu -linux --class gnu --class os --unrestricted\"  \nRun the following command to update the grub2  configuration:  \n# update -grub \nDefault Value:  \nThis recommendation is designed around the grub bootloader, if LILO or another \nbootloader is in use in your environment enact equivalent settings.  \nReplace /boot/grub/grub.cfg  with the appropriate grub configuration file for your \nenvironment.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.4.2": {
        "Title": "Ensure access to bootloader config is configured",
        "Description": "The grub configuration file contains information on boot settings and passwords for \nunlocking boot options.",
        "Rationale": "Setting the permissions to read and write for root only prevents non -root users from \nseeing the boot parameters or changing them. Non -root users who read the boot \nparameters may be able to identify weaknesses in security upon boot and be able to \nexploit th em.",
        "Remediation": "Run the following commands to set permissions on your grub configuration:  \n# chown root:root /boot/grub/grub.cfg  \n# chmod u -x,go-rwx /boot/grub/grub.cfg  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.5.1": {
        "Title": "Ensure address space layout randomization is enabled",
        "Description": "Address space layout randomization (ASLR) is an exploit mitigation technique which \nrandomly arranges the address space of key data areas of a process.",
        "Rationale": "Randomly placing virtual memory regions will make it difficult to write memory page \nexploits as the memory placement will be consistently shifting.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• kernel.randomize_va_space = 2  \nExample:  \n# printf \"%s \\n\" \"kernel.randomize_va_space = 2\" >> /etc/sysctl.d/60 -\nkernel_sysctl.conf  \nRun the following command to set the active kernel parameter:  \n# sysctl -w kernel.randomize_va_space=2  \nNote:  If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten  \nDefault Value:  \nkernel.randomize_va_space = 2#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.5.2": {
        "Title": "Ensure ptrace_scope is restricted",
        "Description": "The ptrace()  system call provides a means by which one process (the \"tracer\") may \nobserve and control the execution of another process (the \"tracee\"), and examine and \nchange the tracee's memory and registers.",
        "Rationale": "If one application is compromised, it would be possible for an attacker to attach to other \nrunning processes (e.g. Bash, Firefox, SSH sessions, GPG agent, etc) to extract \nadditional credentials and continue to expand the scope of their attack.  \nEnabling restricted mode will limit the ability of a compromised process to \nPTRACE_ATTACH on other processes running under the same user. With restricted \nmode, ptrace will continue to work with root user.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• kernel.yama.ptrace_scope = 1  \nExample:  \n# printf \"%s \\n\" \"kernel.yama.ptrace_scope = 1\" >> /etc/sysctl.d/60 -\nkernel_sysctl.conf  \nRun the following command to set the active kernel parameter:  \n# sysctl -w kernel.yama.ptrace_scope=1  \nNote:  If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.5.3": {
        "Title": "Ensure core dumps are restricted",
        "Description": "A core dump is the memory of an executable program. It is generally used to determine \nwhy a program aborted. It can also be used to glean confidential information from a core \nfile. The system provides the ability to set a soft limit for core dumps, but thi s can be \noverridden by the user.",
        "Rationale": "Setting a hard limit on core dumps prevents users from overriding the soft variable. If \ncore dumps are required, consider setting limits for user groups (see limits.conf(5)  ). \nIn addition, setting the fs.suid_dumpable  variable to 0 will prevent setuid programs from \ndumping core.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.5.4": {
        "Title": "Ensure prelink is not installed",
        "Description": "prelink  is a program that modifies ELF shared libraries and ELF dynamically linked \nbinaries in such a way that the time needed for the dynamic linker to perform relocations \nat startup significantly decreases.",
        "Rationale": "The prelinking feature can interfere with the operation of AIDE, because it changes \nbinaries. Prelinking can also increase the vulnerability of the system if a malicious user \nis able to compromise a common library such as libc.",
        "Remediation": "Add the following line to /etc/security/limits.conf  or a /etc/security/limits.d/*  \nfile: \n* hard core 0  \nSet the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• fs.suid_dumpable = 0  \nExample:  \n# printf \"%s \\n\" \"fs.suid_dumpable = 0\" >> /etc/sysctl.d/60 -fs_sysctl.conf  \nRun the following command to set the active kernel parameter:  \n# sysctl -w fs.suid_dumpable=0  \nNote:  If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten  \n-IF- systemd -coredump is installed:  \nedit /etc/systemd/coredump.conf  and add/modify the following lines:  \nStorage=none  \nProcessSizeMax=0  \nRun the command:  \nsystemctl daemon -reload#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.5.5": {
        "Title": "Ensure Automatic Error Reporting is not enabled",
        "Description": "The Apport Error Reporting Service automatically generates crash reports for \ndebugging",
        "Rationale": "Apport collects potentially sensitive data, such as core dumps, stack traces, and log \nfiles. They can contain passwords, credit card numbers, serial numbers, and other \nprivate material.",
        "Remediation": "Edit /etc/default/apport  and add or edit the enabled parameter to equal 0: \nenabled=0  \nRun the following commands to stop and mask the apport service  \n# systemctl stop apport.service  \n# systemctl mask apport.service  \n- OR - \nRun the following command to remove the apport package:  \n# apt purge apport  \nDefault Value:  \nenabled=1   \nInternal Only - General  CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software  \n Uninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction.   ● ● \nv7 9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running  \n Ensure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system.   ● ●#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.6.1": {
        "Title": "Ensure message of the day is configured properly",
        "Description": "The contents of the /etc/motd  file are displayed to users after login and function as a \nmessage of the day for authenticated users.  \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8)  supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system version",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch lev el \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once the y \nhave logged in.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.6.2": {
        "Title": "Ensure local login warning banner is configured properly",
        "Description": "The contents of the /etc/issue  file are displayed to users prior to login for local \nterminals.  \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8)  supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system version \n- or the operating system's name",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch lev el \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once the y \nhave logged in.",
        "Remediation": "Edit the /etc/motd  file with the appropriate contents according to your site policy, \nremove any instances of \\m , \\r , \\s , \\v or references to the OS platform  \n- OR - \n- IF - the motd is not used, this file can be removed.  \nRun the following command to remove the motd file: \n# rm /etc/motd#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.6.3": {
        "Title": "Ensure remote login warning banner is configured properly",
        "Description": "The contents of the /etc/issue.net  file are displayed to users prior to login for remote \nconnections from configured services.  \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8)  supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system version",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch lev el \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once the y \nhave logged in.",
        "Remediation": "Edit the /etc/issue  file with the appropriate contents according to your site policy, \nremove any instances of \\m , \\r , \\s , \\v or references to the OS platform  \nExample:  \n# echo \"Authorized users only. All activity may be monitored and reported.\" > \n/etc/issue#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.6.4": {
        "Title": "Ensure access to /etc/motd is configured",
        "Description": "The contents of the /etc/motd  file are displayed to users after login and function as a \nmessage of the day for authenticated users.",
        "Rationale": "- IF - the /etc/motd  file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information.",
        "Remediation": "Edit the /etc/issue.net  file with the appropriate contents according to your site policy, \nremove any instances of \\m , \\r , \\s , \\v or references to the OS platform  \nExample:  \n# echo \"Authorized users only. All activity may be monitored and reported.\" > \n/etc/issue.net#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.6.5": {
        "Title": "Ensure access to /etc/issue is configured",
        "Description": "The contents of the /etc/issue  file are displayed to users prior to login for local \nterminals.",
        "Rationale": "- IF - the /etc/issue  file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/issue : \n# chown root:root $(readlink -e /etc/issue)  \n# chmod u -x,go-wx $(readlink -e /etc/issue)  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.6.6": {
        "Title": "Ensure access to /etc/issue.net is configured",
        "Description": "The contents of the /etc/issue.net  file are displayed to users prior to login for remote \nconnections from configured services.",
        "Rationale": "- IF - the /etc/issue.net  file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/issue.net : \n# chown root:root $(readlink -e /etc/issue.net)  \n# chmod u -x,go-wx $(readlink -e /etc/issue.net)  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.1": {
        "Title": "Ensure GDM is removed",
        "Description": "The GNOME Display Manager (GDM) is a program that manages graphical display \nservers and handles graphical user logins.",
        "Rationale": "If a Graphical User Interface (GUI) is not required, it should be removed to reduce the \nattack surface of the system.  \nImpact:  \nRemoving the GNOME Display manager will remove the Graphical User Interface (GUI) \nfrom the system.",
        "Remediation": "Run the following commands to uninstall gdm3 and remove unused dependencies:  \n# apt purge gdm3  \n# apt autoremove gdm3#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "1.7.10": {
        "Title": "Ensure XDCMP is not enabled",
        "Description": "X Display Manager Control Protocol (XDMCP) is designed to provide authenticated \naccess to display management services for remote displays",
        "Rationale": "XDMCP is inherently insecure.  \n• XDMCP is not a ciphered protocol. This may allow an attacker to capture \nkeystrokes entered by a user  \n• XDMCP is vulnerable to man -in-the-middle attacks. This may allow an attacker to \nsteal the credentials of legitimate users by impersonating the XDMCP server.",
        "Remediation": "1. To prevent the user from overriding these settings, create the file \n/etc/dconf/db/local.d/locks/00 -media-autorun  with the following content:  \n[org/gnome/desktop/media -handling]  \nautorun-never=true  \n \n2. Update the systems databases:  \n# dconf update#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.2": {
        "Title": "Ensure GDM login banner is configured",
        "Description": "GDM is the GNOME Display Manager which handles graphical login for GNOME based \nsystems.",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place.",
        "Remediation": "- IF - GDM is installed:  \nRun the following script to set and enable the text banner message on the login screen:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.3": {
        "Title": "Ensure GDM disable -user-list option is enabled",
        "Description": "GDM is the GNOME Display Manager which handles graphical login for GNOME based \nsystems.  \nThe disable-user-list option controls if a list of users is displayed on the login screen",
        "Rationale": "Displaying the user list eliminates half of the Userid/Password equation that an \nunauthorized person would need to log on.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.4": {
        "Title": "Ensure GDM screen locks when the user is idle",
        "Description": "GNOME Desktop Manager can make the screen lock automatically whenever the user \nis idle for some amount of time.",
        "Rationale": "Setting a lock -out value reduces the window of opportunity for unauthorized user access \nto another user's session that has been left unattended.",
        "Remediation": "Run the following commands to enable screen locks when the user is idle:  \n# gsettings set org.gnome.desktop.screensaver lock -delay 5 \n# gsettings set org.gnome.desktop.session idle -delay 900  \n- OR- \n1. Create or edit the user profile in the /etc/dconf/profile/  and verify it includes \nthe following:  \nuser-db:user \nsystem-db:{NAME_OF_DCONF_DATABASE}  \nNote:  local  is the name of a dconf database used in the examples.  \n \n2. Create the directory /etc/dconf/db/local.d/  if it doesn't already exist:  \n3. Create the key file /etc/dconf/db/local.d/00 -screensaver  to provide \ninformation for the local  database:  \nExample key file:  \n# Specify the dconf path  \n[org/gnome/desktop/session]  \n \n# Number of seconds of inactivity before the screen goes blank  \n# Set to 0 seconds if you want to deactivate the screensaver.  \nidle-delay=uint32 180  \n \n# Specify the dconf path  \n[org/gnome/desktop/screensaver]  \n \n# Number of seconds after the screen is blank befo re locking the screen  \nlock-delay=uint32 0  \nNote:  You must include the uint32 along with the integer key values as shown.  \n \n4. Run the following command to update the system databases:  \n# dconf update  \n \n5. Users must log out and back in again before the system -wide settings take effect.  \nNote:  Users must log out and back in again before the system -wide settings take effect.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.5": {
        "Title": "Ensure GDM screen locks cannot be overridden",
        "Description": "GNOME Desktop Manager can lock down specific settings by using the lockdown mode \nin dconf to prevent users from changing specific settings.  \nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. \nThe files inside this directory contain a list of keys or subpaths to lock. Just as with the \nkeyfiles, you may add any number of files to this directory.",
        "Rationale": "Setting a lock -out value reduces the window of opportunity for unauthorized user access \nto another user's session that has been left unattended.  \nWithout locking down the system settings, user settings take precedence over the \nsystem settings.  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.6": {
        "Title": "Ensure GDM automatic mounting of removable media is disabled",
        "Description": "By default GNOME automatically mounts removable media when inserted as a \nconvenience to the user.",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in system even if they lacked permissions to mount \nit themselves.  \nImpact:  \nThe use of portable hard drives is very common for workstation users. If your \norganization allows the use of portable storage or media on workstations and physical \naccess controls to workstations is considered adequate there is little value add in \nturning off automounting.",
        "Remediation": "1. To prevent the user from overriding these settings, create the file \n/etc/dconf/db/local.d/locks/screensaver  with the following content:  \n# Lock desktop screensaver settings  \n/org/gnome/desktop/session/idle -delay \n/org/gnome/desktop/screensaver/lock -delay \n \n2. Update the system databases:  \n# dconf update  \nNote:  Users must log out and back in again before the system -wide settings take effect.#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.7": {
        "Title": "Ensure GDM disabling automatic mounting of removable media is not overridden",
        "Description": "By default GNOME automatically mounts removable media when inserted as a \nconvenience to the user.  \nBy using the lockdown mode in dconf, you can prevent users from changing specific \nsettings. To lock down a dconf key or subpath, create a locks subdirectory in the keyfile \ndirectory. The files inside this directory contain a list of keys or subpaths to loc k. Just as \nwith the keyfiles, you may add any number of files to this directory.",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in system even if they lacked permissions to mount \nit themselves.  \nImpact:  \nThe use of portable hard drives is very common for workstation users",
        "Remediation": "",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.8": {
        "Title": "Ensure GDM autorun -never is enabled",
        "Description": "The autorun-never  setting allows the GNOME Desktop Display Manager to disable \nautorun through GDM.",
        "Rationale": "Malware on removable media may taking advantage of Autorun features when the \nmedia is inserted into a system and execute.",
        "Remediation": "1. To prevent the user from overriding these settings, create the file \n/etc/dconf/db/local.d/locks/00 -media-automount  with the following content:  \n[org/gnome/desktop/media -handling]  \nautomount=false  \nautomount -open=false  \n \n2. Update the systems databases:  \n# dconf update#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "1.7.9": {
        "Title": "Ensure GDM autorun -never is not overridden",
        "Description": "The autorun -never setting allows the GNOME Desktop Display Manager to disable \nautorun through GDM.  \nBy using the lockdown mode in dconf, you can prevent users from changing specific \nsettings.  \nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. \nThe files inside this directory contain a list of keys or subpaths to lock. Just as with the \nkeyfiles, you may add any number of files to this directory.",
        "Rationale": "Malware on removable media may taking advantage of Autorun features when the \nmedia is inserted into a system and execute.  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.1": {
        "Title": "Ensure autofs services are not in use",
        "Description": "autofs  allows automatic mounting of devices, typically including CD/DVDs and USB \ndrives.",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in the filesystem even if they lacked permissions to \nmount it themselves.  \nImpact:  \nThe use of portable hard drives is very common for workstation users. If your \norganization allows the use of portable storage or media on workstations and physical \naccess controls to workstations is considered adequate there is little value add in \nturning off automounting.  \nThere may be packages that are dependent on the autofs  package. If the autofs  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the autofs  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the autofs.service  leaving the \nautofs  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop autofs.service  and remove the autofs  package:  \n# systemctl stop autofs.service  \n# apt purge autofs  \n- OR - \n- IF - the autofs  package is required as a dependency:  \nRun the following commands to stop and mask autofs.service : \n# systemctl stop autofs.service  \n# systemctl mask autofs.service#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.10": {
        "Title": "Ensure nis server services are not in use",
        "Description": "The Network Information Service (NIS) (formally known as Yellow Pages) is a client -\nserver directory service protocol for distributing system configuration files. The NIS \nserver is a collection of programs that allow for the distribution of configuration fi les. The \nNIS client ( ypbind ) was used to bind a machine to an NIS server and receive the \ndistributed configuration files.",
        "Rationale": "ypserv.service  is inherently an insecure system that has been vulnerable to DOS \nattacks, buffer overflows and has poor authentication for querying NIS maps. NIS \ngenerally has been replaced by such protocols as Lightweight Directory Access \nProtocol (LDAP). It is recommen ded that ypserv.service  be removed and other, more \nsecure services be used  \nImpact:  \nThere may be packages that are dependent on the ypserv  package. If the ypserv  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the ypserv  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the ypserv.service  leaving the \nypserv  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop ypserv.service  and remove ypserv  package:  \n# systemctl stop ypserv.service  \n# apt purge ypserv  \n- OR - \n- IF - the ypserv  package is required as a dependency:  \nRun the following commands to stop and mask ypserv.service : \n# systemctl stop ypserv.service  \n# systemctl mask ypserv.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.11": {
        "Title": "Ensure print server services are not in use",
        "Description": "The Common Unix Print System (CUPS) provides the ability to print to both local and \nnetwork printers. A system running CUPS can also accept print jobs from remote \nsystems and print them to local printers. It also provides a web based remote \nadministration capability.",
        "Rationale": "If the system does not need to print jobs or accept print jobs from other systems, it is \nrecommended that CUPS be removed to reduce the potential attack surface.  \nImpact:  \nRemoving the cups package, or disabling cups.socket  and/or cups.service  will prevent \nprinting from the system, a common task for workstation systems.  \nThere may be packages that are dependent on the cups package. If the cups package is \nremoved, these dependent packages will be removed as well. Before removing the cups \npackage, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask cups.socket  and cups.service  \nleaving the cups package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop cups.socket  and cups.service , and remove the \ncups package:  \n# systemctl stop cups.socket cups.service  \n# apt purge cups  \n- OR - \n- IF - the cups package is required as a dependency:  \nRun the following commands to stop and mask the cups.socket  and cups.service : \n# systemctl stop cups.socket cups.service  \n# systemctl mask cups.socket cups.service#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.12": {
        "Title": "Ensure rpcbind services are not in use",
        "Description": "The rpcbind  utility maps RPC services to the ports on which they listen. RPC processes \nnotify rpcbind  when they start, registering the ports they are listening on and the RPC \nprogram numbers they expect to serve. The client system then contacts rpcbind  on the \nserver with a particular RPC program number. The rpcbind.service  redirects the client \nto the proper port number so it can communicate with the requested service.  \nPortmapper is an RPC service, which always listens on tcp and udp 111, and is used to \nmap other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their \ncorresponding port number on the server. When a remote host makes an RPC call to \nthat server , it first consults with portmap to determine where the RPC server is listening.",
        "Rationale": "A small request (~82 bytes via UDP) sent to the Portmapper generates a large \nresponse (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If \nrpcbind  is not required, it is recommended to remove rpcbind  package to reduce the \npotential attack surface.  \nImpact:  \nMany of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils  \npackage used for The Network File System (NFS), are dependent on the rpcbind  \npackage. If the rpcbind  package is removed, these dependent packages will be \nremoved as well. Before removing the rpcbind  package, review any dependent \npackages to determine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the rpcbind.socket  and \nrpcbind.service  leaving the rpcbind  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop rpcbind.socket  and rpcbind.service , and remove \nthe rpcbind  package:  \n# systemctl stop rpcbind.socket rpcbind.service  \n# apt purge rpcbind  \n- OR - \n- IF - the rpcbind  package is required as a dependency:  \nRun the following commands to stop and mask the rpcbind.socket  and \nrpcbind.service : \n# systemctl stop rpcbind.socket rpcbind.service  \n# systemctl mask rpcbind.socket rpcbind.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.13": {
        "Title": "Ensure rsync services are not in use",
        "Description": "The rsync  service can be used to synchronize files between systems over network \nlinks.",
        "Rationale": "rsync.service  presents a security risk as the rsync  protocol is unencrypted.  \nThe rsync  package should be removed to reduce the attack area of the system.  \nImpact:  \nThere may be packages that are dependent on the rsync  package. If the rsync  package \nis removed, these dependent packages will be removed as well. Before removing the \nrsync  package, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask rsync.service  leaving the rsync  \npackage installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop rsync.service , and remove the rsync  package:  \n# systemctl stop rsync.service  \n# apt purge rsync  \n- OR - \n- IF - the rsync  package is required as a dependency:  \nRun the following commands to stop and mask rsync.service : \n# systemctl stop rsync.service  \n# systemctl mask rsync.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.14": {
        "Title": "Ensure samba file server services are not in use",
        "Description": "The Samba daemon allows system administrators to configure their Linux systems to \nshare file systems and directories with Windows desktops. Samba will advertise the file \nsystems and directories via the Server Message Block (SMB) protocol. Windows \ndesktop u sers will be able to mount these directories and file systems as letter drives on \ntheir systems.",
        "Rationale": "If there is no need to mount directories and file systems to Windows systems, then this \nservice should be deleted to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the samba  package. If the samba  package \nis removed, these dependent packages will be removed as well. Before removing the \nsamba  package, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask the smbd.service  leaving the \nsamba  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop smbd.service  and remove samba  package:  \n# systemctl stop smbd.service  \n# apt purge samba  \n- OR - \n- IF - the samba  package is required as a dependency:  \nRun the following commands to stop and mask the smbd.service : \n# systemctl stop smbd.service  \n# systemctl mask smbd.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.15": {
        "Title": "Ensure snmp services are not in use",
        "Description": "Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring \nthe health and welfare of network equipment, computer equipment and devices like \nUPSs.  \nNet-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 \n(RFCs 1901 -1908), and SNMPv3 (RFCs 3411 -3418) using both IPv4 and IPv6.  \nSupport for SNMPv2 classic (a.k.a. \"SNMPv2 historic\" - RFCs 1441 -1452) was dropped \nwith the 4.0 release of the UCD -snmp package.  \nThe Simple Network Management Protocol (SNMP) server is used to listen for SNMP \ncommands from an SNMP management system, execute the commands or collect the \ninformation and then send results back to the requesting system.",
        "Rationale": "The SNMP server can communicate using SNMPv1 , which transmits data in the clear and \ndoes not require authentication to execute commands. SNMPv3  replaces the simple/clear \ntext password sharing used in SNMPv2  with more securely encoded parameters. If the \nthe SNMP service is not required, the snmpd  package should be removed to reduce the \nattack surface of the system.  \nNote:  If SNMP is required:  \n• The server should be configured for SNMP v3  only. User Authentication  and \nMessage Encryption  should be configured.  \n• If SNMP v2  is absolutely  necessary, modify the community strings' values.  \nImpact:  \nThere may be packages that are dependent on the snmpd  package. If the snmpd  package \nis removed, these packages will be removed as well.  \nBefore removing the snmpd  package, review any dependent packages to determine if \nthey are required on the system. If a dependent package is required, stop and mask the \nsnmpd.service  leaving the snmpd  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop snmpd.service  and remove the snmpd  package:  \n# systemctl stop snmpd.service  \n# apt purge snmpd  \n- OR - If the package is required for dependencies:  \nRun the following commands to stop and mask the snmpd.service : \n# systemctl stop snmpd.service  \n# systemctl mask snmpd.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.16": {
        "Title": "Ensure tftp server services are not in use",
        "Description": "Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between \ntwo TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending \nand receiving files.",
        "Rationale": "Unless there is a need to run the system as a TFTP server, it is recommended that the \npackage be removed to reduce the potential attack surface.  \nTFTP does not have built -in encryption, access control or authentication. This makes it \nvery easy for an attacker to exploit TFTP to gain access to files  \nImpact:  \nTFTP is often used to provide files for network booting such as for PXE based \ninstallation of servers.  \nThere may be packages that are dependent on the tftpd-hpa package. If the tftpd-hpa \npackage is removed, these dependent packages will be removed as well. Before \nremoving the tftpd-hpa package, review any dependent packages to determine if they \nare required on the system.  \n- IF - a dependent package is required: stop and mask tftpd-hpa.service  leaving the \ntftpd-hpa package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop tftpd-hpa.service , and remove the tftpd-hpa \npackage:  \n# systemctl stop tftpd -hpa.service  \n# apt purge tftpd -hpa \n- OR - \n- IF - the tftpd-hpa package is required as a dependency:  \nRun the following commands to stop and mask tftpd-hpa.service : \n# systemctl stop tftpd -hpa.service  \n# systemctl mask tftpd -hpa.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.17": {
        "Title": "Ensure web proxy server services are not in use",
        "Description": "Squid is a standard proxy server used in many distributions and environments.",
        "Rationale": "Unless a system is specifically set up to act as a proxy server, it is recommended that \nthe squid package be removed to reduce the potential attack surface.  \nNote:  Several HTTP proxy servers exist. These should be checked and removed unless \nrequired.  \nImpact:  \nThere may be packages that are dependent on the squid  package. If the squid  package \nis removed, these dependent packages will be removed as well. Before removing the \nsquid  package, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask the squid.service  leaving the \nsquid  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop squid.service  and remove the squid  package:  \n# systemctl stop squid.service  \n# apt purge squid  \n- OR - If the squid  package is required as a dependency:  \nRun the following commands to stop and mask the squid.service : \n# systemctl stop squid.service  \n# systemctl mask squid.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.18": {
        "Title": "Ensure web server services are not in use",
        "Description": "Web servers provide the ability to host web site content.",
        "Rationale": "Unless there is a local site approved requirement to run a web server service on the \nsystem, web server packages should be removed to reduce the potential attack surface.  \nImpact:  \nRemoval of web server packages will remove that ability for the server to host web \nservices.  \n- IF - the web server package is required for a dependency, any related service or \nsocket should be stopped and masked.  \nNote:  If the remediation steps to mask a service are followed and that package is not \ninstalled on the system, the service and/or socket will still be masked. If the package is \ninstalled due to an approved requirement to host a web server, the associated servic e \nand/or socket would need to be unmasked before it could be enabled and/or started.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop httpd.socket , httpd.service , and nginx.service , \nand remove httpd  and nginx  packages:  \n# systemctl stop apache2.socket httpd.service nginx.service  \n# apt purge apache2 nginx  \n- OR - \n- IF - a package is installed and is required for dependencies:  \nRun the following commands to stop and mask apache2.socket , apache2.service , and \nnginx.service : \n# systemctl stop apache2.socket apache2.service nginx.service  \n# systemctl mask apache2.socket apache2.service nginx.service  \nNote:  Other web server packages may exist. If not required and authorized by local site \npolicy, they should also be removed. If the package is required for a dependency, the \nservice and socket should be stopped and masked.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.19": {
        "Title": "Ensure xinetd services are not in use",
        "Description": "The X Window System provides a Graphical User Interface (GUI) where users can have \nmultiple windows in which to run programs and various add on. The X Windows system \nis typically used on workstations where users login, but not on servers where users \ntypica lly do not login.",
        "Rationale": "Unless your organization specifically requires graphical login access via X Windows, \nremove it to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the xinetd  package. If the xinetd  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the xinetd  package, review any dependent packages to determine if they are \nrequired on the system.  \n-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd \npackage installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop xinetd.service , and remove the xinetd  package:  \n# systemctl stop xinetd.service  \n# apt purge xinetd  \n-OR- \n-IF- the xinetd  package is required as a dependency:  \nRun the following commands to stop and mask the xinetd.service : \n# systemctl stop xinetd.service  \n# systemctl mask xinetd.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.2": {
        "Title": "Ensure avahi daemon services are not in use",
        "Description": "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS -SD \nservice discovery. Avahi allows programs to publish and discover services and hosts \nrunning on a local network with no specific configuration. For example, a user can plug  \na computer into a network and Avahi automatically finds printers to print to, files to look \nat and people to talk to, as well as network services running on the machine.",
        "Rationale": "Automatic discovery of network services is not normally required for system \nfunctionality. It is recommended to remove this package to reduce the potential attack \nsurface.  \nImpact:  \nThere may be packages that are dependent on the avahi  package. If the avahi  package \nis removed, these dependent packages will be removed as well. Before removing the \navahi  package, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask the avahi-daemon.socket  and \navahi-daemon.service  leaving the avahi  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop avahi-daemon.socket  and avahi-daemon.service , \nand remove the avahi-daemon  package:  \n# systemctl stop avahi -daemon.socket avahi -daemon.service  \n# apt purge avahi -daemon \n- OR - \n- IF - the avahi-daemon  package is required as a dependency:  \nRun the following commands to stop and mask the avahi-daemon.socket  and avahi-\ndaemon.service : \n# systemctl stop avahi -daemon.socket avahi -daemon.service  \n# systemctl mask avahi -daemon.socket avahi -daemon.service#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.20": {
        "Title": "Ensure X window server services are not in use",
        "Description": "The X Window System provides a Graphical User Interface (GUI) where users can have \nmultiple windows in which to run programs and various add on. The X Windows system \nis typically used on workstations where users login, but not on servers where users \ntypica lly do not login.",
        "Rationale": "Unless your organization specifically requires graphical login access via X Windows, \nremove it to reduce the potential attack surface.  \nImpact:  \nIf a Graphical Desktop Manager (GDM) is in use on the system, there may be a \ndependency on the xorg-x11-server-common  package. If the GDM is required and \napproved by local site policy, the package should not be removed.  \nMany Linux systems run applications which require a Java runtime. Some Linux Java \npackages have a dependency on specific X Windows xorg -x11-fonts. One workaround \nto avoid this dependency is to use the \"headless\" Java packages for your specific Java \nruntime .",
        "Remediation": "",
        "L1": "FALSE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "2.1.21": {
        "Title": "- General Remediation: - IF - a Graphical Desktop Manager or X -Windows server is not required and approved by local site policy: Run the following command to remove the X Windows Server package: # apt purge xserver -common References: 1. NIST SP 800 -53 Rev. 5: CM -11 CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software Uninstall or disable unnecessary services on enterprise assets and software, such as an unused file sharing service, web application module, or service function. ● ● v7 2.6 Address unapproved software Ensure that unauthorized software is either removed or the inventory is updated in a timely manner ● ● ● MITRE ATT&CK Mappings: Techniques / Sub - techniques Tactics Mitigations T1203, T1203.000, T1210, T1210.000, T1543, T1543.002 TA0008 M1042 Internal Only - General 2.1.21 Ensure mail transfer agent is configured for local -only mode",
        "Description": "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for \nincoming mail and transfer the messages to the appropriate user or mail server. If the \nsystem is not intended to be a mail server, it is recommended that the MTA be \nconfigured  to only process local mail.",
        "Rationale": "The software for all Mail Transfer Agents is complex and most have a long history of \nsecurity issues. While it is important to ensure that the system can process local mail \nmessages, it is not necessary to have the MTA's daemon listening on a port unless t he \nserver is intended to be a mail server that receives and processes mail from other \nsystems.  \n   \nInternal Only - General",
        "Remediation": "- IF - a Graphical Desktop Manager or X -Windows server is not required and approved \nby local site policy:  \nRun the following command to remove the X Windows Server package:  \n# apt purge xserver -common#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.22": {
        "Title": "Ensure only approved services are listening on a network interface (Manual)",
        "Description": "A network port is identified by its number, the associated IP address, and the type of the \ncommunication protocol such as TCP or UDP.  \nA listening port is a network port on which an application or process listens on, acting as \na communication endpoint.  \nEach listening port can be open or closed (filtered) using a firewall. In general terms, an \nopen port is a network port that accepts incoming packets from remote locations.",
        "Rationale": "Services listening on the system pose a potential risk as an attack vector. These \nservices should be reviewed, and if not required, the service should be stopped, and the \npackage containing the service should be removed. If required packages have a \ndepende ncy, the service should be stopped and masked to reduce the attack surface of \nthe system.  \nImpact:  \nThere may be packages that are dependent on the service's package. If the service's \npackage is removed, these dependent packages will be removed as well. Before \nremoving the service's package, review any dependent packages to determine if they \nare required  on the system.  \n- IF - a dependent package is required: stop and mask the <service_name>.socket  and \n<service_name>.service  leaving the service's package installed.  \n   \nInternal Only - General",
        "Remediation": "Edit /etc/postfix/main.cf  and add the following line to the RECEIVING MAIL section. \nIf the line already exists, change it to look like the line below:  \ninet_interfaces = loopback -only \nRun the following command to restart postfix : \n# systemctl restart postfix  \nNote:  \n• This recommendation is designed around the postfix mail server.  \n• Depending on your environment you may have an alternative MTA installed such \nas exim4. If this is the case consult the documentation for your installed MTA to \nconfigure the recommended state.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.3": {
        "Title": "Ensure dhcp server services are not in use",
        "Description": "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to \nbe dynamically assigned IP addresses. There are two versions of the DHCP protocol \nDHCPv4  and DHCPv6 . At startup the server may be started for one or the other via the -4 \nor -6 arguments.",
        "Rationale": "Unless a system is specifically set up to act as a DHCP server, it is recommended that \nthis package be removed to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the isc-dhcp-server  package. If the \nisc-dhcp-server  package is removed, these dependent packages will be removed as \nwell. Before removing the isc-dhcp-server  package, review any dependent packages \nto determine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the isc-dhcp-server.service  \nand isc-dhcp-server6.service  leaving the isc-dhcp-server  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop isc-dhcp-server.service  and isc-dhcp-\nserver6.service  and remove the isc-dhcp-server  package:  \n# systemctl stop isc -dhcp-server.service isc -dhcp-server6.service  \n# apt purge isc -dhcp-server \n- OR - \n- IF - the isc-dhcp-server  package is required as a dependency:  \nRun the following commands to stop and mask isc-dhcp-server.service  and isc-\ndhcp-server6.service : \n# systemctl stop isc -dhcp-server.service isc -dhcp-server6.service  \n# systemctl mask isc -dhcp-server isc -dhcp-server6.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.4": {
        "Title": "Ensure dns server services are not in use",
        "Description": "The Domain Name System (DNS) is a hierarchical naming system that maps names to \nIP addresses for computers, services and other resources connected to a network.",
        "Rationale": "Unless a system is specifically designated to act as a DNS server, it is recommended \nthat the package be deleted to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the bind9  package. If the bind9  package \nis removed, these dependent packages will be removed as well. Before removing the \nbind9  package, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask the bind9.service  leaving the \nbind9  package installed.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.5": {
        "Title": "Ensure dnsmasq services are not in use",
        "Description": "dnsmasq  is a lightweight tool that provides DNS caching, DNS forwarding and DHCP \n(Dynamic Host Configuration Protocol) services.",
        "Rationale": "Unless a system is specifically designated to act as a DNS caching, DNS forwarding \nand/or DHCP server, it is recommended that the package be removed to reduce the \npotential attack surface.  \nImpact:  \nThere may be packages that are dependent on the dnsmasq  package. If the dnsmasq  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the dnsmasq  package, review any dependent packages to determine if they \nare required on the system.  \n- IF - a dependent package is required: stop and mask the dnsmasq.service  leaving the \ndnsmasq  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop bind9.service  and remove the bind9  package:  \n# systemctl stop bind9.service  \n# apt purge bind9  \n- OR - \n- IF - the bind9  package is required as a dependency:  \nRun the following commands to stop and mask bind9.service : \n# systemctl stop bind9.service  \n# systemctl mask bind9.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.6": {
        "Title": "Ensure ftp server services are not in use",
        "Description": "The File Transfer Protocol (FTP) provides networked computers with the ability to \ntransfer files.",
        "Rationale": "FTP does not protect the confidentiality of data or authentication credentials. It is \nrecommended SFTP be used if file transfer is required. Unless there is a need to run \nthe system as a FTP server (for example, to allow anonymous downloads), it is \nrecomme nded that the package be deleted to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the vsftpd  package. If the vsftpd  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the vsftpd  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the vsftpd.service  leaving the \nvsftpd  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop vsftpd.service  and remove the vsftpd  package:  \n# systemctl stop vsftpd.service  \n# apt purge vsftpd  \n- OR - \n- IF - the vsftpd  package is required as a dependency:  \nRun the following commands to stop and mask the vsftpd.service : \n# systemctl stop vsftpd.service  \n# systemctl mask vsftpd.service  \nNote:  Other ftp server packages may exist. If not required and authorized by local site \npolicy, they should also be removed. If the package is required for a dependency, the \nservice should be stopped and masked.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.7": {
        "Title": "Ensure ldap server services are not in use",
        "Description": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for \nNIS/YP. It is a service that provides a method for looking up information from a central \ndatabase.",
        "Rationale": "If the system will not need to act as an LDAP server, it is recommended that the \nsoftware be removed to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the slapd  package. If the slapd  package \nis removed, these dependent packages will be removed as well. Before removing the \nslapd  package, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask the slapd.service  leaving the \nslapd  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop slapd.service  and remove the slapd  package:  \n# systemctl stop slapd.service  \n# apt purge slapd  \n- OR - \n- IF - the slapd  package is required as a dependency:  \nRun the following commands to stop and mask slapd.service : \n# systemctl stop slapd.service  \n# systemctl mask slapd.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.8": {
        "Title": "Ensure message access server services are not in use",
        "Description": "dovecot-imapd  and dovecot-pop3d  are an open source IMAP and POP3 server for Linux \nbased systems.",
        "Rationale": "Unless POP3 and/or IMAP servers are to be provided by this system, it is \nrecommended that the package be removed to reduce the potential attack surface.  \nNote:  Several IMAP/POP3 servers exist and can use other service names. These \nshould also be audited and the packages removed if not required.  \nImpact:  \nThere may be packages that are dependent on dovecot-imapd  and/or dovecot-pop3d  \npackages. If dovecot-imapd  and dovecot-pop3d  packages are removed, these \ndependent packages will be removed as well. Before removing dovecot-imapd  and/or \ndovecot-pop3d  packages, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask dovecot.socket  and \ndovecot.service  leaving dovecot-imapd  and/or dovecot-pop3d  packages installed.  \n   \nInternal Only - General",
        "Remediation": "Run one of the following commands to remove dovecot-imapd  and dovecot-pop3d : \nRun the following commands to stop dovecot.socket  and dovecot.service , and remove \nthe dovecot-imapd  and dovecot-pop3d  packages:  \n# systemctl stop dovecot.socket dovecot.service  \n# apt purge dovecot -imapd dovecot -pop3d \n- OR - \n- IF - a package is installed and is required for dependencies:  \nRun the following commands to stop and mask dovecot.socket  and dovecot.service : \n# systemctl stop dovecot.socket dovecot.service  \n# systemctl mask dovecot.socket dovecot.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.1.9": {
        "Title": "Ensure network file system services are not in use",
        "Description": "The Network File System (NFS) is one of the first and most widely distributed file \nsystems in the UNIX environment. It provides the ability for systems to mount file \nsystems of other servers through the network.",
        "Rationale": "If the system does not export NFS shares, it is recommended that the nfs-kernel-\nserver  package be removed to reduce the remote attack surface.  \nImpact:  \nThere may be packages that are dependent on the nfs-kernel-server  package. If the \nnfs-kernel-server  package is removed, these dependent packages will be removed as \nwell. Before removing the nfs-kernel-server  package, review any dependent \npackages to determine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the nfs-server.service  leaving \nthe nfs-kernel-server  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following command to stop nfs-server.service  and remove nfs-kernel-\nserver  package:  \n# systemctl stop nfs -server.service  \n# apt purge nfs -kernel-server \n- OR - \n- IF - the nfs-kernel-server  package is required as a dependency:  \nRun the following commands to stop and mask the nfs-server.service : \n# systemctl stop nfs -server.service  \n# systemctl mask nfs -server.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.2.1": {
        "Title": "Ensure NIS Client is not installed",
        "Description": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client -\nserver directory service protocol used to distribute system configuration files. The NIS \nclient was used to bind a machine to an NIS server and receive the distributed \nconfi guration files.",
        "Rationale": "The NIS service is inherently an insecure system that has been vulnerable to DOS \nattacks, buffer overflows and has poor authentication for querying NIS maps. NIS \ngenerally has been replaced by such protocols as Lightweight Directory Access \nProtocol (LDAP).  It is recommended that the service be removed.  \nImpact:  \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Remediation": "Uninstall nis: \n# apt purge nis#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.2.2": {
        "Title": "Ensure rsh client is not installed",
        "Description": "The rsh-client  package contains the client commands for the rsh services.",
        "Rationale": "These legacy clients contain numerous security exposures and have been replaced with \nthe more secure SSH package. Even if the server is removed, it is best to ensure the \nclients are also removed to prevent users from inadvertently attempting to use these \ncommands and therefore exposing their credentials. Note that removing the rsh-client  \npackage removes the clients for rsh , rcp and rlogin  . \nImpact:  \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Remediation": "Uninstall rsh: \n# apt purge rsh -client#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.2.3": {
        "Title": "Ensure talk client is not installed",
        "Description": "The talk software makes it possible for users to send and receive messages across \nsystems through a terminal session. The talk client, which allows initialization of talk \nsessions, is installed by default.",
        "Rationale": "The software presents a security risk as it uses unencrypted protocols for \ncommunication.  \nImpact:  \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Remediation": "Uninstall talk: \n# apt purge talk#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.2.4": {
        "Title": "Ensure telnet client is not installed",
        "Description": "The telnet  package contains the telnet  client, which allows users to start connections \nto other systems via the telnet protocol.",
        "Rationale": "The telnet  protocol is insecure and unencrypted. The use of an unencrypted \ntransmission medium could allow an unauthorized user to steal credentials. The ssh \npackage provides an encrypted session and stronger security and is included in most \nLinux distributions.  \nImpact:  \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Remediation": "Uninstall telnet : \n# apt purge telnet#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.2.5": {
        "Title": "Ensure ldap client is not installed",
        "Description": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for \nNIS/YP. It is a service that provides a method for looking up information from a central \ndatabase.",
        "Rationale": "If the system will not need to act as an LDAP client, it is recommended that the software \nbe removed to reduce the potential attack surface.  \nImpact:  \nRemoving the LDAP client will prevent or inhibit using LDAP for authentication in your \nenvironment.",
        "Remediation": "Uninstall ldap-utils : \n# apt purge ldap -utils#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.2.6": {
        "Title": "Ensure ftp client is not installed",
        "Description": "FTP (File Transfer Protocol) is a traditional and widely used standard tool for \ntransferring files between a server and clients over a network, especially where no \nauthentication is necessary (permits anonymous users to connect to a server).",
        "Rationale": "FTP does not protect the confidentiality of data or authentication credentials. It is \nrecommended SFTP be used if file transfer is required. Unless there is a need to run \nthe system as a FTP server (for example, to allow anonymous downloads), it is \nrecomme nded that the package be removed to reduce the potential attack surface.",
        "Remediation": "Run the following command to uninstall ftp: \n# apt purge ftp#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.3.1.1": {
        "Title": "Ensure a single time synchronization daemon is in use",
        "Description": "System time should be synchronized between all systems in an environment. This is \ntypically done by establishing an authoritative time server or set of servers and having \nall systems synchronize their clocks to them.  \nNotes:  \n• On virtual systems where host based time synchronization is available \nconsult your virtualization software documentation and verify that host \nbased synchronization is in use and follows local site policy. In this \nscenario, this section should be skipped   \n• Only one time synchronization method should be in use on the system. \nConfiguring multiple time synchronization methods could lead to unexpected or \nunreliable results",
        "Rationale": "Time synchronization is important to support time sensitive security mechanisms and \nensures log files have consistent time records across the enterprise, which aids in \nforensic investigations.",
        "Remediation": "On physical systems, and virtual systems where host based time synchronization is not \navailable.  \nSelect one of the two time synchronization daemons; chrony (1)  or systemd-timesyncd \n(2) and following the remediation procedure for the selected daemon.  \nNote:  enabling more than one synchronization daemon could lead to unexpected or \nunreliable results:  \n1. chrony  \nRun the following command to install chrony : \n# apt install chrony  \nRun the following commands to stop and mask the systemd-timesyncd  daemon:  \n# systemctl stop systemd -timesyncd.service  \n \n# systemctl mask systemd -timesyncd.service  \nNote:  \n• Subsection: Configure chrony  should be followed  \n• Subsection: Configure systemd -timesyncd  should be skipped  \n2. systemd-timesyncd  \nRun the following command to remove the chrony package:  \n# apt purge chrony  \n# apt autoremove chrony  \nNote:  \n• Subsection: Configure systemd -timesyncd  should be followed  \n• Subsection: Configure chrony  should be skipped#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.3.2.1": {
        "Title": "Ensure systemd -timesyncd configured with authorized timeserver",
        "Description": "NTP= \n• A space -separated list of NTP server host names or IP addresses. During \nruntime this list is combined with any per -interface NTP servers acquired from \nsystemd -networkd.service(8). systemd -timesyncd will contact all configured \nsystem or per -interface server s in turn, until one responds. When the empty \nstring is assigned, the list of NTP servers is reset, and all prior assignments will \nhave no effect. This setting defaults to an empty list.  \nFallbackNTP=  \n• A space -separated list of NTP server host names or IP addresses to be used as \nthe fallback NTP servers. Any per -interface NTP servers obtained from systemd -\nnetworkd.service(8) take precedence over this setting, as do any servers set via \nNTP= above. This se tting is hence only relevant if no other NTP server \ninformation is known. When the empty string is assigned, the list of NTP servers \nis reset, and all prior assignments will have no effect. If this option is not given, a \ncompiled -in list of NTP servers is used.",
        "Rationale": "Time synchronization is important to support time sensitive security mechanisms and to \nensure log files have consistent time records across the enterprise to aid in forensic \ninvestigations  \n   \nInternal Only - General",
        "Remediation": "Set NTP and/or FallbackNPT  parameters to local site approved authoritative time \nserver(s) in /etc/systemd/timesyncd.conf  or a file in /etc/systemd/timesyncd.conf.d/  \nending in .conf  in the [Time]  section:  \nExample file:  \n[Time] \nNTP=time.nist.gov # Uses the generic name for NIST's time servers   \nFallbackNTP=time -a-g.nist.gov time -b-g.nist.gov time -c-g.nist.gov # Space \nseparated list of NIST time servers  \nExample script to create systemd drop -in file:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.3.2.2": {
        "Title": "Ensure systemd -timesyncd is enabled and running (Manual)",
        "Description": "systemd -timesyncd is a daemon that has been added for synchronizing the system \nclock across the network",
        "Rationale": "systemd -timesyncd needs to be enabled and running in order to synchronize the system \nto a timeserver.  \nTime synchronization is important to support time sensitive security mechanisms and to \nensure log files have consistent time records across the enterprise to aid in forensic \ninvestigations",
        "Remediation": "- IF - systemd-timesyncd  is in use on the system, run the following commands:  \nRun the following command to unmask systemd-timesyncd.service : \n# systemctl unmask systemd -timesyncd.service  \nRun the following command to enable and start systemd-timesyncd.service : \n# systemctl --now enable systemd -timesyncd.service  \n- OR - \nIf another time synchronization service is in use on the system, run the following \ncommand to stop and mask systemd-timesyncd : \n# systemctl --now mask systemd -timesyncd.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.3.3.1": {
        "Title": "Ensure chrony is configured with authorized timeserver (Manual)",
        "Description": "• server  \no The server directive specifies an NTP server which can be used as a time \nsource. The client -server relationship is strictly hierarchical: a client might \nsynchronize its system time to that of the server, but the server’s system \ntime will never be influence d by that of a client.  \no This directive can be used multiple times to specify multiple servers.  \no The directive is immediately followed by either the name of the server, or \nits IP address.  \n• pool \no The syntax of this directive is similar to that for the server directive, except \nthat it is used to specify a pool of NTP servers rather than a single NTP \nserver. The pool name is expected to resolve to multiple addresses which \nmight change over time.  \no This directive can be used multiple times to specify multiple pools.  \no All options valid in the server directive can be used in this directive too.",
        "Rationale": "Time synchronization is important to support time sensitive security mechanisms and to \nensure log files have consistent time records across the enterprise to aid in forensic \ninvestigations  \n   \nInternal Only - General",
        "Remediation": "Edit /etc/chrony/chrony.conf  or a file ending in .sources  in /etc/chrony/sources.d/  \nand add or edit server or pool lines as appropriate according to local site policy:  \n<[server|pool]> <[remote -server|remote -pool]> \nExamples:  \npool directive:  \npool time.nist.gov iburst maxsources 4 #The maxsources option is unique to \nthe pool directive  \nserver  directive:  \nserver time -a-g.nist.gov iburst  \nserver 132.163.97.3 iburst  \nserver time -d-b.nist.gov iburst  \nRun one of the following commands to load the updated time sources into chronyd  \nrunning config:  \n# systemctl restart chronyd  \n \n- OR if sources are in a .sources file - \n \n# chronyc reload sources  \n- OR - \nIf another time synchronization service is in use on the system, run the following \ncommand to remove chrony  from the system:  \n# apt purge chrony  \n# apt autoremove chrony#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.3.3.2": {
        "Title": "Ensure chrony is running as user _chrony",
        "Description": "The chrony  package is installed with a dedicated user account _chrony . This account is \ngranted the access required by the chronyd  service",
        "Rationale": "The chronyd  service should run with only the required privlidges",
        "Remediation": "Add or edit the user line to /etc/chrony/chrony.conf  or a file ending in .conf  in \n/etc/chrony/conf.d/ : \nuser _chrony  \n- OR - \nIf another time synchronization service is in use on the system, run the following \ncommand to remove chrony  from the system:  \n# apt purge chrony  \n# apt autoremove chrony  \nDefault Value:  \nuser _chrony#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.3.3.3": {
        "Title": "Ensure chrony is enabled and running",
        "Description": "chrony is a daemon for synchronizing the system clock across the network",
        "Rationale": "chrony needs to be enabled and running in order to synchronize the system to a \ntimeserver.  \nTime synchronization is important to support time sensitive security mechanisms and to \nensure log files have consistent time records across the enterprise to aid in forensic \ninvestigations",
        "Remediation": "- IF - chrony  is in use on the system, run the following commands:  \nRun the following command to unmask chrony.service : \n# systemctl unmask chrony.service  \nRun the following command to enable and start chrony.service : \n# systemctl --now enable chrony.service  \n- OR - \nIf another time synchronization service is in use on the system, run the following \ncommand to remove chrony : \n# apt purge chrony  \n# apt autoremove chrony#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.1.1": {
        "Title": "Ensure cron daemon is enabled and active",
        "Description": "The cron daemon is used to execute batch jobs on the system.",
        "Rationale": "While there may not be user jobs that need to be run on the system, the system does \nhave maintenance jobs that may include security monitoring that have to run, and cron \nis used to execute them.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to unmask, enable, and start cron: \n# systemctl unmask \"$(systemctl list -unit-files | awk \n'$1~/^crond? \\.service/{print $1}')\"  \n# systemctl --now enable \"$(systemctl list -unit-files | awk \n'$1~/^crond? \\.service/{print $1}')\"#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.1.2": {
        "Title": "Ensure permissions on /etc/crontab are configured",
        "Description": "The /etc/crontab  file is used by cron to control its own jobs. The commands in this \nitem make sure that root is the user and group owner of the file and that only the owner \ncan access the file.",
        "Rationale": "This file contains information on what system jobs are run by cron. Write access to \nthese files could provide unprivileged users with the ability to elevate their privileges. \nRead access to these files could provide users with the ability to gain insight o n system \njobs that run on the system and could provide them a way to gain unauthorized \nprivileged access.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on /etc/crontab : \n# chown root:root /etc/crontab  \n# chmod og -rwx /etc/crontab  \nDefault Value:  \nAccess: (644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.1.3": {
        "Title": "Ensure permissions on /etc/cron.hourly are configured",
        "Description": "This directory contains system cron jobs that need to run on an hourly basis. The files in \nthis directory cannot be manipulated by the crontab  command, but are instead edited \nby system administrators using a text editor. The commands below restrict read/write \nand search access to user and group root, preventing regular users from accessing this \ndirectory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the \n/etc/cron.hourly  directory:  \n# chown root:root /etc/cron.hourly/  \n# chmod og -rwx /etc/cron.hourly/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.1.4": {
        "Title": "Ensure permissions on /etc/cron.daily are configured",
        "Description": "The /etc/cron.daily  directory contains system cron jobs that need to run on a daily \nbasis. The files in this directory cannot be manipulated by the crontab  command, but \nare instead edited by system administrators using a text editor. The commands below \nrestrict read/write and search access to user and group root, preventing regular users \nfrom accessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the /etc/cron.daily  \ndirectory:  \n# chown root:root /etc/cron.daily/  \n# chmod og -rwx /etc/cron.daily/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.1.5": {
        "Title": "Ensure permissions on /etc/cron.weekly are configured",
        "Description": "The /etc/cron.weekly  directory contains system cron jobs that need to run on a weekly \nbasis. The files in this directory cannot be manipulated by the crontab  command, but \nare instead edited by system administrators using a text editor. The commands below \nrestrict read/write and search access to user and group root, preventing regular users \nfrom accessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the \n/etc/cron.weekly  directory:  \n# chown root:root /etc/cron.weekly/  \n# chmod og -rwx /etc/cron.weekly/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.1.6": {
        "Title": "Ensure permissions on /etc/cron.monthly are configured",
        "Description": "The /etc/cron.monthly  directory contains system cron jobs that need to run on a \nmonthly basis. The files in this directory cannot be manipulated by the crontab  \ncommand, but are instead edited by system administrators using a text editor. The \ncommands below restrict read/write and search access to user and group root, \npreventing regular users from accessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the \n/etc/cron.monthly  directory:  \n# chown root:root /etc/cron.monthly/  \n# chmod og -rwx /etc/cron.monthly/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.1.7": {
        "Title": "Ensure permissions on /etc/cron.d are configured",
        "Description": "The /etc/cron.d  directory contains system cron jobs that need to run in a similar \nmanner to the hourly, daily weekly and monthly jobs from /etc/crontab , but require \nmore granular control as to when they run. The files in this directory cannot be \nmanipulated by the crontab  command, but are instead edited by system administrators \nusing a text editor. The commands below restrict read/write and search access to user \nand group root, preventing regular users from accessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the /etc/cron.d  \ndirectory:  \n# chown root:root /etc/cron.d/  \n# chmod og -rwx /etc/cron.d/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.1.8": {
        "Title": "Ensure crontab is restricted to authorized users",
        "Description": "crontab  is the program used to install, deinstall, or list the tables used to drive the cron \ndaemon. Each user can have their own crontab, and though these are files in \n/var/spool/cron/crontabs , they are not intended to be edited directly.  \nIf the /etc/cron.allow  file exists, then you must be listed (one user per line) therein in \norder to be allowed to use this command. If the /etc/cron.allow  file does not exist but \nthe /etc/cron.deny  file does exist, then you must not be listed in the /etc/cron.deny  \nfile in order to use this command.  \nIf neither of these files exists, then depending on site -dependent configuration \nparameters, only the super user will be allowed to use this command, or all users will be \nable to use this command.  \nIf both files exist then /etc/cron.allow  takes precedence. Which means that \n/etc/cron.deny  is not considered and your user must be listed in /etc/cron.allow  in \norder to be able to use the crontab.  \nRegardless of the existence of any of these files, the root administrative user is always \nallowed to setup a crontab.  \nThe files /etc/cron.allow  and /etc/cron.deny , if they exist, must be either world -\nreadable, or readable by group crontab . If they are not, then cron will deny access to all \nusers until the permissions are fixed.  \nThere is one file for each user's crontab under the /var/spool/cron/crontabs  directory. \nUsers are not allowed to edit the files under that directory directly to ensure that only \nusers allowed by the system to run periodic tasks can add them, and only syntactically \ncorrect crontabs will be written there. This is enforced by having the directory writable \nonly by the crontab  group and configuring crontab command with the setgid bid set for \nthat specific group.  \nNote:  \n• Even though a given user is not listed in cron.allow , cron jobs can still be run as \nthat user  \n• The files /etc/cron.allow  and /etc/cron.deny , if they exist, only controls \nadministrative access to the crontab command for scheduling and modifying cron \njobs  \nInternal Only - General",
        "Rationale": "On many systems, only the system administrator is authorized to schedule cron jobs. \nUsing the cron.allow  file to control who can run cron jobs enforces this policy. It is \neasier to manage an allow list than a deny list. In a deny list, you could potentially add a \nuser ID to the system and forget to add it to the deny files.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "2.4.2.1": {
        "Title": "Ensure at is restricted to authorized users",
        "Description": "at allows fairly complex time specifications, extending the POSIX.2 standard. It accepts \ntimes of the form HH:MM to run a job at a specific time of day. (If that time is already \npast, the next day is assumed.) You may also specify midnight, noon, or teatime (4pm) \nand you can have a time -of-day suffixed with AM or PM for running in the morning or \nthe evening. You can also say what day the job will be run, by giving a date in the form \nmonth -name day with an optional year, or giving a date of the form MMDD[CC] YY, \nMM/DD/[CC]YY, DD.MM.[CC]YY or [CC]YY -MM-DD. The specification of a date must \nfollow the specification of the time of day. You can also give times like now + count \ntime-units, where the time -units can be minutes, hours, days, or weeks and you can tell \nat to run the job today by suffixing the time with today and to run the job tomorrow by \nsuffixing the time with tomorrow.  \nThe /etc/at.allow  and /etc/at.deny  files determine which user can submit commands \nfor later execution via at or batch. The format of the files is a list of usernames, one on \neach line. Whitespace is not permitted. If the file /etc/at.allow  exists, only usernames \nmentioned in it are allowed to use at. If /etc/at.allow  does not exist, /etc/at.deny  is \nchecked, every username not mentioned in it is then allowed to use at. An empty \n/etc/at.deny  means that every user may use at. If neither file exists, only the s uperuser \nis allowed to use at.",
        "Rationale": "On many systems, only the system administrator is authorized to schedule at jobs. \nUsing the at.allow  file to control who can run at jobs enforces this policy. It is easier to \nmanage an allow list than a deny list. In a deny list, you could potentially add a user ID \nto the system and forget to add it to the deny files.  \n   \nInternal Only - General",
        "Remediation": "-IF- at is installed on the system:  \nRun the following script to:  \n• /etc/at.allow : \no Create the file if it doesn't exist  \no Change owner or user root \no If group daemon  exists, change to group daemon , else change group to root \no Change mode to 640 or more restrictive  \n• -IF- /etc/at.deny  exists:  \no Change owner or user root \no If group daemon  exists, change to group daemon , else change group to root \no Change mode to 640 or more restrictive  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.1.1": {
        "Title": "Ensure IPv6 status is identified (Manual)",
        "Description": "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's \ndesigned to supply IP addressing and additional security to support the predicted \ngrowth of connected devices. IPv6 is based on 128 -bit addressing and can support  340 \nundecillion, which is 340 trillion3 addresses.  \nFeatures of IPv6  \n• Hierarchical addressing and routing infrastructure  \n• Stateful and Stateless configuration  \n• Support for quality of service (QoS)  \n• An ideal protocol for neighboring node interaction",
        "Rationale": "IETF RFC 4038 recommends that applications are built with an assumption of dual \nstack. It is recommended that IPv6 be enabled and configured in accordance with \nBenchmark recommendations.  \n-IF- dual stack and IPv6 are not used in your environment, IPv6 may be disabled to \nreduce the attack surface of the system, and recommendations pertaining to IPv6 can \nbe skipped.  \nNote:  It is recommended that IPv6 be enabled and configured unless this is against \nlocal site policy  \nImpact:  \nIETF RFC 4038 recommends that applications are built with an assumption of dual \nstack.  \nWhen enabled, IPv6 will require additional configuration to reduce risk to the system.  \n   \nInternal Only - General",
        "Remediation": "Enable or disable IPv6 in accordance with system requirements and local site policy  \nDefault Value:  \nIPv6 is enabled#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.1.2": {
        "Title": "Ensure wireless interfaces are disabled",
        "Description": "Wireless networking is used when wired networks are unavailable.",
        "Rationale": "-IF- wireless is not to be used, wireless devices can be disabled to reduce the potential \nattack surface.  \nImpact:  \nMany if not all laptop workstations and some desktop workstations will connect via \nwireless requiring these interfaces be enabled.",
        "Remediation": "Run the following script to disable any wireless interfaces:  \n#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.1.3": {
        "Title": "Ensure bluetooth services are not in use",
        "Description": "Bluetooth is a short -range wireless technology standard that is used for exchanging \ndata between devices over short distances. It employs UHF radio waves in the ISM \nbands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire \nconnections.",
        "Rationale": "An attacker may be able to find a way to access or corrupt your data. One example of \nthis type of activity is bluesnarfing , which refers to attackers using a Bluetooth \nconnection to steal information off of your Bluetooth device. Also, viruses or other \nmalicious code can take advantage of Bluetooth technology to infect other devices. If \nyou are infected, your data may be corr upted, compromised, stolen, or lost.  \nImpact:  \nMany personal electronic devices (PEDs) use Bluetooth technology. For example, you \nmay be able to operate your computer with a wireless keyboard. Disabling Bluetooth will \nprevent these devices from connecting to the system.  \nThere may be packages that are dependent on the bluez  package. If the bluez  package \nis removed, these dependent packages will be removed as well. Before removing the \nbluez  package, review any dependent packages to determine if they are required on the \nsystem.  \n-IF- a dependent package is required: stop and mask bluetooth.service  leaving the \nbluez  package installed.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to stop bluetooth.service , and remove the bluez  \npackage:  \n# systemctl stop bluetooth.service  \n# apt purge bluez  \n- OR - \n- IF - the bluez  package is required as a dependency:  \nRun the following commands to stop and mask bluetooth.service : \n# systemctl stop bluetooth.service  \n# systemctl mask bluetooth.service  \nNote:  A reboot may be required#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.2.1": {
        "Title": "Ensure dccp kernel module is not available",
        "Description": "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that \nsupports streaming media and telephony. DCCP provides a way to gain access to \ncongestion control, without having to do it at the application layer, but does not provide \nin-sequence delivery.",
        "Rationale": "-IF- the protocol is not required, it is recommended that the drivers not be installed to \nreduce the potential attack surface.",
        "Remediation": "Run the following script to disable the dccp module:  \n-IF- the module is available in the running kernel:  \n• Create a file with install dccp /bin/false  in the /etc/modprobe.d/  directory  \n• Create a file with blacklist dccp  in the /etc/modprobe.d/  directory  \n• Unload dccp from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file with blacklist dccp  in the /etc/modprobe.d/  directory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "3.2.2": {
        "Title": "Ensure tipc kernel module is not available",
        "Description": "The Transparent Inter -Process Communication (TIPC) protocol is designed to provide \ncommunication between cluster nodes.",
        "Rationale": "-IF- the protocol is not being used, it is recommended that kernel module not be loaded, \ndisabling the service to reduce the potential attack surface.",
        "Remediation": "Run the following script to disable the tipc module:  \n-IF- the module is available in the running kernel:  \n• Create a file with install tipc /bin/false  in the /etc/modprobe.d/  directory  \n• Create a file with blacklist tipc  in the /etc/modprobe.d/  directory  \n• Unload tipc from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file with blacklist tipc  in the /etc/modprobe.d/  directory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "3.2.3": {
        "Title": "Ensure rds kernel module is not available",
        "Description": "The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to \nprovide low -latency, high -bandwidth communications between cluster nodes. It was \ndeveloped by the Oracle Corporation.",
        "Rationale": "-IF- the protocol is not being used, it is recommended that kernel module not be loaded, \ndisabling the service to reduce the potential attack surface.",
        "Remediation": "Run the following script to disable the rds module:  \n-IF- the module is available in the running kernel:  \n• Create a file with install rds /bin/false  in the /etc/modprobe.d/  directory  \n• Create a file with blacklist rds  in the /etc/modprobe.d/  directory  \n• Unload rds from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file with blacklist rds  in the /etc/modprobe.d/  directory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "3.2.4": {
        "Title": "Ensure sctp kernel module is not available",
        "Description": "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to \nsupport message oriented communication, with several streams of messages in one \nconnection. It serves a similar function as TCP and UDP, incorporating features of both. \nIt is message -oriented like UDP, and ensures reliable in -sequence transport of \nmessages with congestion control like TCP.",
        "Rationale": "-IF- the protocol is not being used, it is recommended that kernel module not be loaded, \ndisabling the service to reduce the potential attack surface.",
        "Remediation": "Run the following script to disable the sctp module:  \n-IF- the module is available in the running kernel:  \n• Create a file with install sctp /bin/false  in the /etc/modprobe.d/  directory  \n• Create a file with blacklist sctp  in the /etc/modprobe.d/  directory  \n• Unload sctp from the kernel  \n-IF- available in ANY installed kernel:  \n• Create a file with blacklist sctp  in the /etc/modprobe.d/  directory  \n-IF- the kernel module is not available on the system or pre -compiled into the kernel:  \n• No remediation is necessary   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "3.3.1": {
        "Title": "Ensure ip forwarding is disabled",
        "Description": "The net.ipv4.ip_forward  and net.ipv6.conf.all.forwarding  flags are used to tell the \nsystem whether it can forward packets or not.",
        "Rationale": "Setting net.ipv4.ip_forward  and net.ipv6.conf.all.forwarding  to 0 ensures that a \nsystem with multiple interfaces (for example, a hard proxy), will never be able to forward \npackets, and therefore, never serve as a router.  \nImpact:  \nIP forwarding is required on systems configured to act as a router. If these parameters \nare disabled, the system will not be able to perform as a router.  \nMany Cloud Service Provider (CSP) hosted systems require IP forwarding to be \nenabled. If the system is running on a CSP platform, this requirement should be \nreviewed before disabling IP forwarding.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv4.ip_forward = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.ip_forward = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.10": {
        "Title": "Ensure tcp syn cookies is enabled",
        "Description": "When tcp_syncookies  is set, the kernel will handle TCP SYN packets normally until the \nhalf-open connection queue is full, at which time, the SYN cookie functionality kicks in. \nSYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies \nto the SYN wi th a SYN|ACK, but will include a specially crafted TCP sequence number \nthat encodes the source and destination IP address and port number and the time the \npacket was sent. A legitimate connection would send the ACK packet of the three way \nhandshake with th e specially crafted sequence number. This allows the system to verify \nthat it has received a valid response to a SYN cookie and allow the connection, even \nthough there is no corresponding SYN in the queue.",
        "Rationale": "Attackers use SYN flood attacks to perform a denial of service attacked on a system by \nsending many SYN packets without completing the three way handshake. This will \nquickly use up slots in the kernel's half -open connection queue and prevent legitimate \nconnections from succeeding. Setting net.ipv4.tcp_syncookies  to 1 enables SYN \ncookies, allowing the system to keep accepting valid connections, even if under a denial \nof service attack.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv4.tcp_syncookies = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.tcp_syncookies = 1\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.11": {
        "Title": "Ensure ipv6 router advertisements are not accepted",
        "Description": "This setting disables the system's ability to accept IPv6 router advertisements.",
        "Rationale": "It is recommended that systems do not accept router advertisements as they could be \ntricked into routing traffic to compromised machines. Setting hard routes within the \nsystem (usually a single default route to a trusted router) protects the system from ba d \nroutes. Setting net.ipv6.conf.all.accept_ra  and net.ipv6.conf.default.accept_ra  \nto 0 disables the system's ability to accept IPv6 router advertisements.",
        "Remediation": "- IF - IPv6 is enabled on the system:  \nSet the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv6.conf.all.accept_ra = 0  \n• net.ipv6.conf.default.accept_ra = 0  \nExample:  \n# printf '%s \\n' \"net.ipv6.conf.all.accept_ra = 0\" \n\"net.ipv6.conf.default.accept_ra = 0\" >> /etc/sysctl.d/60 -netipv6_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.2": {
        "Title": "Ensure packet redirect sending is disabled",
        "Description": "ICMP Redirects are used to send routing information to other hosts. As a host itself \ndoes not act as a router (in a host only configuration), there is no need to send \nredirects.",
        "Rationale": "An attacker could use a compromised host to send invalid ICMP redirects to other \nrouter devices in an attempt to corrupt routing and have users access a system set up \nby the attacker as opposed to a valid system.  \nImpact:  \nIP forwarding is required on systems configured to act as a router. If these parameters \nare disabled, the system will not be able to perform as a router.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv4.conf.all.send_redirects = 0  \n• net.ipv4.conf.default.send_redirects = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.send_redirects = 0\" \n\"net.ipv4.conf.default.send_redirects = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.3": {
        "Title": "Ensure bogus icmp responses are ignored",
        "Description": "Setting net.ipv4.icmp_ignore_bogus_error_responses  to 1 prevents the kernel from \nlogging bogus responses (RFC -1122 non -compliant) from broadcast reframes, keeping \nfile systems from filling up with useless log messages.",
        "Rationale": "Some routers (and some attackers) will send responses that violate RFC -1122 and \nattempt to fill up a log file system with many useless error messages.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv4.icmp_ignore_bogus_error_responses = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.icmp_ignore_bogus_error_responses = 1\" >> \n/etc/sysctl.d/60 -netipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.4": {
        "Title": "Ensure broadcast icmp requests are ignored",
        "Description": "Setting net.ipv4.icmp_echo_ignore_broadcasts  to 1 will cause the system to ignore all \nICMP echo and timestamp requests to broadcast and multicast addresses.",
        "Rationale": "Accepting ICMP echo and timestamp requests with broadcast or multicast destinations \nfor your network could be used to trick your host into starting (or participating) in a \nSmurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP \nbroadcast messages with a spoofed source address. All hosts receiving this message \nand responding would send echo -reply messages back to the spoofed address, which is \nprobably not routable. If many hosts respond to the packets, the amount of traffic on the \nnetwork could be significantly multiplied.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv4.icmp_echo_ignore_broadcasts = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.icmp_echo_ignore_broadcasts = 1\" >> \n/etc/sysctl.d/60 -netipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.5": {
        "Title": "Ensure icmp redirects are not accepted",
        "Description": "ICMP redirect messages are packets that convey routing information and tell your host \n(acting as a router) to send packets via an alternate path. It is a way of allowing an \noutside routing device to update your system routing tables.",
        "Rationale": "ICMP redirect messages are packets that convey routing information and tell your host \n(acting as a router) to send packets via an alternate path. It is a way of allowing an \noutside routing device to update your system routing tables. By setting \nnet.ipv4.conf.all.accept_redirects , net.ipv4.conf.default.accept_redirects , \nnet.ipv6.conf.all.accept_redirects , and net.ipv6.conf.default.accept_redirects  \nto 0, the system will not accept any ICMP redirect messages, and therefore, won't allow \noutsiders to update the system's routing tables.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv4.conf.all.accept_redirects = 0  \n• net.ipv4.conf.default.accept_redirects = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.accept_redirects = 0\" \n\"net.ipv4.conf.default.accept_redirects = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.6": {
        "Title": "Ensure secure icmp redirects are not accepted",
        "Description": "Secure ICMP redirects are the same as ICMP redirects, except they come from \ngateways listed on the default gateway list. It is assumed that these gateways are \nknown to your system, and that they are likely to be secure.",
        "Rationale": "It is still possible for even known gateways to be compromised. Setting \nnet.ipv4.conf.all.secure_redirects  and net.ipv4.conf.default.secure_redirects  \nto 0 protects the system from routing table updates by possibly compromised known \ngateways.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.7": {
        "Title": "Ensure reverse path filtering is enabled",
        "Description": "Setting net.ipv4.conf.all.rp_filter  and net.ipv4.conf.default.rp_filter  to 1 \nforces the Linux kernel to utilize reverse path filtering on a received packet to determine \nif the packet was valid. Essentially, with reverse path filtering, if the return packet does \nnot go out the same interface that the corresponding source packet cam e from, the \npacket is dropped (and logged if log_martians  is set).",
        "Rationale": "Setting net.ipv4.conf.all.rp_filter  and net.ipv4.conf.default.rp_filter  to 1 is a \ngood way to deter attackers from sending your system bogus packets that cannot be \nresponded to. One instance where this feature breaks down is if asymmetrical routing is \nemployed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on \nyour system. If you are using asymmetrical routing on your system, you will not be able \nto enable this feature without breaking the routing.  \nImpact:  \nIf you are using asymmetrical routing on your system, you will not be able to enable this \nfeature without breaking the routing.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv4.conf.all.rp_filter = 1  \n• net.ipv4.conf.default.rp_filter = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.rp_filter = 1\" \n\"net.ipv4.conf.default.rp_filter = 1\" >> /etc/sysctl.d/60 -netipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.8": {
        "Title": "Ensure source routed packets are not accepted",
        "Description": "In networking, source routing allows a sender to partially or fully specify the route \npackets take through a network. In contrast, non -source routed packets travel a path \ndetermined by routers in the network. In some cases, systems may not be routable or \nreachable from some locations (e.g. private addresses vs. Internet routable), and so \nsource routed packets would need to be used.",
        "Rationale": "Setting net.ipv4.conf.all.accept_source_route , \nnet.ipv4.conf.default.accept_source_route , \nnet.ipv6.conf.all.accept_source_route  and \nnet.ipv6.conf.default.accept_source_route  to 0 disables the system from accepting \nsource routed packets. Assume this system was capable of routing packets to Internet \nroutable addresses on one interface and private addresses on another interface. \nAssume that the private addresses were not routable to the Internet routable addresses \nand vice versa. Under normal routing circumsta nces, an attacker from the Internet \nroutable addresses could not use the system as a way to reach the private address \nsystems. If, however, source routed packets were allowed, they could be used to gain \naccess to the private address systems as the route co uld be specified, rather than rely \non routing protocols that did not allow this routing.  \n   \nInternal Only - General",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending in \n.conf : \n• net.ipv4.conf.all.accept_source_route = 0  \n• net.ipv4.conf.default.accept_source_route = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.accept_source_route = 0\" \n\"net.ipv4.conf.default.accept_source_route = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "3.3.9": {
        "Title": "Ensure suspicious packets are logged",
        "Description": "When enabled, this feature logs packets with un -routable source addresses to the \nkernel log.",
        "Rationale": "Setting net.ipv4.conf.all.log_martians  and net.ipv4.conf.default.log_martians  to \n1 enables this feature. Logging these packets allows an administrator to investigate the \npossibility that an attacker is sending spoofed packets to their system.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.1.1": {
        "Title": "Ensure ufw is installed",
        "Description": "The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well -suited \nfor host -based firewalls. ufw provides a framework for managing Netfilter , as well as a \ncommand -line interface for manipulating the firewall",
        "Rationale": "A firewall utility is required to configure the Linux kernel's Netfilter  framework via the \niptables or nftables back -end. \nThe Linux kernel's Netfilter  framework host -based firewall can protect against threats \noriginating from within a corporate network to include malicious mobile code and poorly \nconfigured software on a host.  \nNote:  Only one firewall utility should be installed and configured. UFW is dependent on \nthe iptables package.",
        "Remediation": "Run the following command to install Uncomplicated Firewall (UFW):  \napt install ufw#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.1.2": {
        "Title": "Ensure iptables -persistent is not installed with ufw",
        "Description": "The iptables -persistent  is a boot -time loader for Netfilter  rules, iptables plugin",
        "Rationale": "Running both ufw and the services included in the iptables -persistent package may lead \nto conflict",
        "Remediation": "Run the following command to remove the iptables -persistent  package:  \n# apt purge iptables -persistent#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.1.3": {
        "Title": "Ensure ufw service is enabled",
        "Description": "UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for \nmanaging Netfilter , as well as a command -line and available graphical user interface for \nmanipulating the firewall.  \nNote:  \n• When running ufw enable or starting ufw via its initscript, ufw will flush its chains. \nThis is required so ufw can maintain a consistent state, but it may drop existing \nconnections (eg ssh). ufw does support adding rules before enabling the firewall.  \n• Run the following command before running ufw enable . \n# ufw allow proto tcp from any to any port 22  \n• The rules will still be flushed, but the ssh port will be open after enabling the \nfirewall. Please note that once ufw is 'enabled', ufw will not flush the chains when \nadding or removing rules (but will when modifying a rule or changing the default \npolicy)  \n• By default, ufw will prompt when enabling the firewall while running under ssh. \nThis can be disabled by using ufw --force enable",
        "Rationale": "The ufw service must be enabled and running in order for ufw to protect the system  \nImpact:  \nChanging firewall settings while connected over network can result in being locked out \nof the system.  \n   \nInternal Only - General",
        "Remediation": "Run the following command to unmask the ufw daemon:  \n# systemctl unmask ufw.service  \nRun the following command to enable and start the ufw daemon:  \n# systemctl --now enable ufw.service  \n \nactive \nRun the following command to enable ufw:  \n# ufw enable#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.1.4": {
        "Title": "Ensure ufw loopback traffic is configured",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \n(127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other in terfaces \nshould ignore traffic on this network as an anti -spoofing measure.",
        "Remediation": "Run the following commands to implement the loopback rules:  \n# ufw allow in on lo  \n# ufw allow out on lo  \n# ufw deny in from 127.0.0.0/8  \n# ufw deny in from ::1#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.1.5": {
        "Title": "Ensure ufw outbound connections are configured (Manual)",
        "Description": "Configure the firewall rules for new outbound connections.  \nNote:  \n• Changing firewall settings while connected over network can result in being \nlocked out of the system.  \n• Unlike iptables, when a new outbound rule is added, ufw automatically takes care \nof associated established connections, so no rules for the latter kind are required.",
        "Rationale": "If rules are not in place for new outbound connections all packets will be dropped by the \ndefault policy preventing network usage.",
        "Remediation": "Configure ufw in accordance with site policy. The following commands will implement a \npolicy to allow all outbound connections on all interfaces:  \n# ufw allow out on all#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.1.6": {
        "Title": "Ensure ufw firewall rules exist for all open ports",
        "Description": "Services and ports can be accepted or explicitly rejected.  \nNote:  \n• Changing firewall settings while connected over network can result in being \nlocked out of the system  \n• The remediation command opens up the port to traffic from all sources. Consult \nufw documentation and set any restrictions in compliance with site policy",
        "Rationale": "To reduce the attack surface of a system, all services and ports should be blocked \nunless required.  \n• Any ports that have been opened on non -loopback addresses need firewall rules \nto govern traffic.  \n• Without a firewall rule configured for open ports, the default firewall policy will \ndrop all packets to these ports.  \n• Required ports should have a firewall rule created to allow approved connections \nin accordance with local site policy.  \n• Unapproved ports should have an explicit deny rule created.  \n   \nInternal Only - General",
        "Remediation": "For each port identified in the audit which does not have a firewall rule, evaluate the \nservice listening on the port and add a rule for accepting or denying inbound \nconnections in accordance with local site policy:  \nExamples:  \n# ufw allow in <port>/<tcp or udp protocol>  \n \n# ufw deny in <port>/<tcp or udp protocol>  \nNote:  Examples create rules for from any, to any. More specific rules should be \nconcentered when allowing inbound traffic e.g only traffic from this network.  \nExample to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:  \nufw allow from 192.168.1.0/24 to any proto tcp port 443#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.1.7": {
        "Title": "Ensure ufw default deny firewall policy",
        "Description": "A default deny policy on connections ensures that any unconfigured network usage will \nbe rejected.  \nNote:  Any port or protocol without a explicit allow before the default deny will be \nblocked",
        "Rationale": "With a default accept policy the firewall will accept any packet that is not configured to \nbe denied. It is easier to white list acceptable usage than to black list unacceptable \nusage.  \nImpact:  \nAny port and protocol not explicitly allowed will be blocked. The following rules should \nbe considered before applying the default deny.  \nufw allow out http  \nufw allow out https  \nufw allow out ntp # Network Time Protocol  \nufw allow out to any port 53 # DNS  \nufw allow out to any port 853 # DNS over TLS  \nufw logging on",
        "Remediation": "Run the following commands to implement a default deny  policy:  \n# ufw default deny incoming  \n# ufw default deny outgoing  \n# ufw default deny routed#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.1": {
        "Title": "Ensure nftables is installed",
        "Description": "nftables provides a new in -kernel packet classification framework that is based on a \nnetwork -specific Virtual Machine (VM) and a new nft userspace command line tool. \nnftables reuses the existing Netfilter subsystems such as the existing hook \ninfrastructure , the connection tracking system, NAT, userspace queuing and logging \nsubsystem.  \nNotes:  \n• nftables is available in Linux kernel 3.13 and newer  \n• Only one firewall utility should be installed and configured  \n• Changing firewall settings while connected over the network can result in being \nlocked out of the system",
        "Rationale": "nftables is a subsystem of the Linux kernel that can protect against threats originating \nfrom within a corporate network to include malicious mobile code and poorly configured \nsoftware on a host.",
        "Remediation": "Run the following command to install nftables : \n# apt install nftables#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.10": {
        "Title": "Ensure nftables rules are permanent",
        "Description": "nftables is a subsystem of the Linux kernel providing filtering and classification of \nnetwork packets/datagrams/frames.  \nThe nftables service reads the /etc/nftables.conf  file for a nftables file or files to \ninclude in the nftables ruleset.  \nA nftables ruleset containing the input, forward, and output base chains allow network \ntraffic to be filtered.",
        "Rationale": "Changes made to nftables ruleset only affect the live system, you will also need to \nconfigure the nftables ruleset to apply on boot",
        "Remediation": "Edit the /etc/nftables.conf  file and un -comment or add a line with include < Absolute \npath to nftables rules file>  for each nftables file you want included in the nftables \nruleset on boot  \nExample:  \n# vi /etc/nftables.conf  \nAdd the line:  \ninclude \"/etc/nftables.rules\"#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.2": {
        "Title": "Ensure ufw is uninstalled or disabled with nftables",
        "Description": "Uncomplicated Firewall (UFW) is a program for managing a Netfilter  firewall designed to \nbe easy to use.",
        "Rationale": "Running both the nftables  service and ufw may lead to conflict and unexpected results.",
        "Remediation": "Run one of the following to either remove ufw or disable ufw and mask ufw.service : \nRun the following command to remove ufw: \n# apt purge ufw  \n-OR- \nRun the following commands to disable ufw and mask ufw.service : \n# ufw disable  \n# systemctl stop ufw.service  \n# systemctl mask ufw.service  \nNote:  ufw disable  needs to be run before systemctl mask ufw.service  in order to \ncorrectly disable UFW#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.3": {
        "Title": "Ensure iptables are flushed with nftables (Manual)",
        "Description": "nftables is a replacement for iptables, ip6tables, ebtables and arptables",
        "Rationale": "It is possible to mix iptables and nftables. However, this increases complexity and also \nthe chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is \nnot loaded",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.4": {
        "Title": "Ensure a nftables table exists",
        "Description": "Tables hold chains. Each table only has one address family and only applies to packets \nof this family. Tables can have one of five families.",
        "Rationale": "nftables doesn't have any default tables. Without a table being build, nftables will not \nfilter network traffic.  \nImpact:  \nAdding rules to a running nftables can cause loss of connectivity to the system",
        "Remediation": "Run the following command to create a table in nftables  \n# nft create table inet <table name>  \nExample:  \n# nft create table inet filter#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.5": {
        "Title": "Ensure nftables base chains exist",
        "Description": "Chains are containers for rules. They exist in two kinds, base chains and regular chains. \nA base chain is an entry point for packets from the networking stack, a regular chain \nmay be used as jump target and is used for better rule organization.",
        "Rationale": "If a base chain doesn't exist with a hook for input, forward, and delete, packets that \nwould flow through those chains will not be touched by nftables.  \nImpact:  \nIf configuring nftables over ssh, creating  a base chain  with a policy of drop will cause \nloss of connectivity.  \nEnsure that a rule allowing ssh has been added to the base chain prior to setting the \nbase chain's policy to drop",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.6": {
        "Title": "Ensure nftables loopback traffic is configured",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \ntraffic should be seen, all other interfaces should ignore traffic on this netwo rk as an \nanti-spoofing measure.",
        "Remediation": "Run the following command to create the base chains:  \n# nft create chain inet <table name> <base chain name> { type filter hook \n<(input|forward|output)> priority 0 \\; } \nExample:  \n# nft create chain inet filter input { type filter hook input priority 0 \\; } \n \n# nft create chain inet filter forward { type filter hook forward priority 0 \n\\; } \n \n# nft create chain inet filter output { type filter hook output priority 0 \\; \n} \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 4.4 Implement and Manage a Firewall on Servers  \n Implement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third -\nparty firewall agent.  ● ● ● \nv8 4.5 Implement and Manage a Firewall on End -User \nDevices  \n Implement and manage a host -based firewall or port -filtering tool on end -user \ndevices, with a default -deny rule that drops all traffic except those services and \nports that are explicitly allowed.  ● ● ● \nv7 9.4 Apply Host -based Firewalls or Port Filtering  \n Apply host -based firewalls or port filtering tools on end systems, with a \ndefault -deny rule that drops all traffic except those services and ports that are \nexplicitly allowed.  ● ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1562, T1562.004  TA0005  M1047   \nInternal Only - General  4.2.6 Ensure nftables loopback traffic is configured (Automated)  \nProfile Applicability:  \n•  Level 1 - Server  \n•  Level 1 - Workstation  \nDescription:  \nConfigure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network  \nRationale:  \nLoopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \ntraffic should be seen, all other interfaces should ignore traffic on this netwo rk as an \nanti-spoofing measure.  \nAudit:  \nRun the following commands to verify that the loopback interface is configured:  \nRun the following command to verify the loopback interface is configured to accept \nnetwork traffic:  \n# nft list ruleset | awk '/hook input/,/}/' | grep 'iif \"lo\" accept'  \nExample output:  \niif \"lo\" accept  \nRun the following command to verify network traffic from an iPv4 loopback interface is \nconfigured to drop:  \n# nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr'  \nExample output:  \nip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop  \n-IF- IPv6 is enabled on the system:  \nRun the following command to verify network traffic from an iPv6 loopback interface is \nconfigured to drop:  \n# nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr'  \nExample output:  \nip6 saddr ::1 counter packets 0 bytes 0 drop#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.7": {
        "Title": "Ensure nftables outbound and established connections are configured (Manual)",
        "Description": "Configure the firewall rules for new outbound, and established connections",
        "Rationale": "If rules are not in place for new outbound, and established connections all packets will \nbe dropped by the default policy preventing network usage.",
        "Remediation": "Run the following commands to implement the loopback rules:  \n# nft add rule inet filter input iif lo accept  \n# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop  \n-IF- IPv6 is enabled on the system:  \nRun the following command to implement the IPv6 loopback rule:  \n# nft add rule inet filter input ip6 saddr ::1 counter drop#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.8": {
        "Title": "Ensure nftables default deny firewall policy",
        "Description": "Base chain policy is the default verdict that will be applied to packets reaching the end \nof the chain.",
        "Rationale": "There are two policies: accept (Default) and drop. If the policy is set to accept , the \nfirewall will accept any packet that is not configured to be denied and the packet will \ncontinue transversing the network stack.  \nIt is easier to white list acceptable usage than to black list unacceptable usage.  \nNote: Changing firewall settings while connected over network can result in being \nlocked out of the system.  \nImpact:  \nIf configuring nftables over ssh, creating a base chain with a policy of drop will cause \nloss of connectivity.  \nEnsure that a rule allowing ssh has been added to the base chain prior to setting the \nbase chain's policy to drop",
        "Remediation": "Run the following command for the base chains with the input, forward, and output \nhooks to implement a default DROP policy:  \n# nft chain <table family> <table name> <chain name> { policy drop \\; } \nExample:  \n# nft chain inet filter input { policy drop \\; } \n \n# nft chain inet filter forward { policy drop \\; } \n \n# nft chain inet filter output { policy drop \\; } \nDefault Value:  \naccept#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.2.9": {
        "Title": "Ensure nftables service is enabled",
        "Description": "The nftables service allows for the loading of nftables rulesets during boot, or starting on \nthe nftables service",
        "Rationale": "The nftables service restores the nftables rules from the rules files referenced in the \n/etc/nftables.conf  file during boot or the starting of the nftables service",
        "Remediation": "Run the following command to enable the nftables service:  \n# systemctl enable nftables#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.1.1": {
        "Title": "Ensure iptables packages are installed",
        "Description": "iptables  is a utility program that allows a system administrator to configure the tables \nprovided by the Linux kernel firewall, implemented as different Netfilter modules, and \nthe chains and rules it stores. Different kernel modules and programs are used for \ndiffer ent protocols; iptables  applies to IPv4, ip6tables to IPv6, arptables to ARP, and \nebtables to Ethernet frames.",
        "Rationale": "A method of configuring and maintaining firewall rules is necessary to configure a Host \nBased Firewall.",
        "Remediation": "Run the following command to install iptables  and iptables -persistent  \n# apt install iptables iptables -persistent#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.1.2": {
        "Title": "Ensure nftables is not installed with iptables",
        "Description": "nftables  is a subsystem of the Linux kernel providing filtering and classification of \nnetwork packets/datagrams/frames and is the successor to iptables.",
        "Rationale": "Running both iptables  and nftables  may lead to conflict.",
        "Remediation": "Run the following command to remove nftables : \n# apt purge nftables#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.1.3": {
        "Title": "Ensure ufw is uninstalled or disabled with iptables",
        "Description": "Uncomplicated Firewall (UFW) is a program for managing a Netfilter  firewall designed to \nbe easy to use.  \n• Uses a command -line interface consisting of a small number of simple \ncommands  \n• Uses iptables for configuration",
        "Rationale": "Running iptables.persistent  with ufw enabled may lead to conflict and unexpected \nresults.",
        "Remediation": "Run one of the following commands to either remove ufw or stop and mask ufw \nRun the following command to remove ufw: \n# apt purge ufw  \n- OR - \nRun the following commands to disable ufw: \n# ufw disable  \n# systemctl stop ufw  \n# systemctl mask ufw  \nNote:  ufw disable  needs to be run before systemctl mask ufw  in order to correctly \ndisable UFW#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.2.1": {
        "Title": "Ensure iptables default deny firewall policy",
        "Description": "A default deny all policy on connections ensures that any unconfigured network usage \nwill be rejected.  \nNotes:  \n• Changing firewall settings while connected over network can result in being \nlocked out of the system   \n• Remediation will only affect the active system firewall, be sure to configure the \ndefault policy in your firewall management to apply on boot as well",
        "Rationale": "With a default accept policy the firewall will accept any packet that is not configured to \nbe denied. It is easier to white list acceptable usage than to black list unacceptable \nusage.",
        "Remediation": "Run the following commands to implement a default DROP policy:  \n# iptables -P INPUT DROP  \n# iptables -P OUTPUT DROP  \n# iptables -P FORWARD DROP#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.2.2": {
        "Title": "Ensure iptables loopback traffic is configured",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network (127.0.0.0/8).  \nNote : \n• Changing firewall settings while connected over network can result in being \nlocked out of the system   \n• Remediation will only affect the active system firewall, be sure to configure the \ndefault policy in your firewall management to apply on boot as well",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \n(127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic  on this \nnetwork as an anti -spoofing measure.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.2.3": {
        "Title": "Ensure iptables outbound and established connections are configured (Manual)",
        "Description": "Configure the firewall rules for new outbound, and established connections.  \nNote : \n• Changing firewall settings while connected over network can result in being \nlocked out of the system   \n• Remediation will only affect the active system firewall, be sure to configure the \ndefault policy in your firewall management to apply on boot as well",
        "Rationale": "If rules are not in place for new outbound, and established connections all packets will \nbe dropped by the default policy preventing network usage.",
        "Remediation": "Run the following commands to implement the loopback rules:  \n# iptables -A INPUT -i lo -j ACCEPT  \n# iptables -A OUTPUT -o lo -j ACCEPT  \n# iptables -A INPUT -s 127.0.0.0/8 -j DROP#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.2.4": {
        "Title": "Ensure iptables firewall rules exist for all open ports",
        "Description": "Any ports that have been opened on non -loopback addresses need firewall rules to \ngovern traffic.  \nNote:  \n• Changing firewall settings while connected over network can result in being \nlocked out of the system  \n• Remediation will only affect the active system firewall, be sure to configure the \ndefault policy in your firewall management to apply on boot as well  \n• The remediation command opens up the port to traffic from all sources. Consult \niptables documentation and set any restrictions in compliance with site policy",
        "Rationale": "Without a firewall rule configured for open ports default firewall policy will drop all \npackets to these ports.  \n   \nInternal Only - General",
        "Remediation": "For each port identified in the audit which does not have a firewall rule establish a \nproper rule for accepting inbound connections:  \n# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j \nACCEPT#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.3.1": {
        "Title": "Ensure ip6tables default deny firewall policy",
        "Description": "A default deny all policy on connections ensures that any unconfigured network usage \nwill be rejected.  \nNote:  \n• Changing firewall settings while connected over network can result in being \nlocked out of the system  \n• Remediation will only affect the active system firewall, be sure to configure the \ndefault policy in your firewall management to apply on boot as well",
        "Rationale": "With a default accept policy the firewall will accept any packet that is not configured to \nbe denied. It is easier to white list acceptable usage than to black list unacceptable \nusage.  \n   \nInternal Only - General",
        "Remediation": "IF IPv6 is enabled on your system:  \nRun the following commands to implement a default DROP policy:  \n# ip6tables -P INPUT DROP  \n# ip6tables -P OUTPUT DROP  \n# ip6tables -P FORWARD DROP#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.3.2": {
        "Title": "Ensure ip6tables loopback traffic is configured",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network (::1).  \nNote:  \n• Changing firewall settings while connected over network can result in being \nlocked out of the system  \n• Remediation will only affect the active system firewall, be sure to configure the \ndefault policy in your firewall management to apply on boot as well",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \n(::1) traffic should be seen, all other interfaces should ignore traffic on this  network as \nan anti -spoofing measure.  \n   \nInternal Only - General",
        "Remediation": "Run the following commands to implement the loopback rules:  \n# ip6tables -A INPUT -i lo -j ACCEPT  \n# ip6tables -A OUTPUT -o lo -j ACCEPT  \n# ip6tables -A INPUT -s ::1 -j DROP#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.3.3": {
        "Title": "Ensure ip6tables outbound and established connections are configured (Manual)",
        "Description": "Configure the firewall rules for new outbound, and established IPv6 connections.  \nNote:  \n• Changing firewall settings while connected over network can result in being \nlocked out of the system  \n• Remediation will only affect the active system firewall, be sure to configure the \ndefault policy in your firewall management to apply on boot as well",
        "Rationale": "If rules are not in place for new outbound, and established connections all packets will \nbe dropped by the default policy preventing network usage.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "4.3.3.4": {
        "Title": "Ensure ip6tables firewall rules exist for all open ports",
        "Description": "Any ports that have been opened on non -loopback addresses need firewall rules to \ngovern traffic.  \nNote:  \n• Changing firewall settings while connected over network can result in being \nlocked out of the system  \n• Remediation will only affect the active system firewall, be sure to configure the \ndefault policy in your firewall management to apply on boot as well  \n• The remediation command opens up the port to traffic from all sources. Consult \niptables documentation and set any restrictions in compliance with site policy",
        "Rationale": "Without a firewall rule configured for open ports default firewall policy will drop all \npackets to these ports.  \n   \nInternal Only - General",
        "Remediation": "Configure iptables in accordance with site policy. The following commands will \nimplement a policy to allow all outbound connections and all established connections:  \n# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT  \n# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT  \n# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT  \n# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT  \n# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT  \n# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.1": {
        "Title": "Ensure permissions on /etc/ssh/sshd_config are configured",
        "Description": "The file /etc/ssh/sshd_config , and files ending in .conf  in the /etc/ssh/sshd_config.d  \ndirectory, contain configuration specifications for sshd.",
        "Rationale": "configuration specifications for sshd need to be protected from unauthorized changes by \nnon-privileged users.  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.10": {
        "Title": "Ensure sshd HostbasedAuthentication is disabled",
        "Description": "The HostbasedAuthentication  parameter specifies if authentication is allowed through \ntrusted hosts via the user of .rhosts , or /etc/hosts.equiv , along with successful public \nkey client host authentication.",
        "Rationale": "Even though the .rhosts  files are ineffective if support is disabled in /etc/pam.conf , \ndisabling the ability to use .rhosts  files in SSH provides an additional layer of \nprotection.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.11": {
        "Title": "Ensure sshd IgnoreRhosts is enabled",
        "Description": "The IgnoreRhosts  parameter specifies that .rhosts  and .shosts  files will not be used in \nRhostsRSAAuthentication  or HostbasedAuthentication .",
        "Rationale": "Setting this parameter forces users to enter a password when authenticating with SSH.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the HostbasedAuthentication  parameter to no \nabove any Include  and Match  entries as follows:  \nHostbasedAuthentication no  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.  \nDefault Value:  \nHostbasedAuthentication no#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.12": {
        "Title": "Ensure sshd KexAlgorithms is configured",
        "Description": "Key exchange is any method in cryptography by which cryptographic keys are \nexchanged between two parties, allowing use of a cryptographic algorithm. If the sender \nand receiver wish to exchange encrypted messages, each must be equipped to encrypt \nmessages t o be sent and decrypt messages received  \nNotes:  \n• Kex algorithms have a higher preference the earlier they appear in the list  \n• Some organizations may have stricter requirements for approved Key exchange \nalgorithms  \n• Ensure that Key exchange algorithms used are in compliance with site policy  \n• The only Key Exchange Algorithms currently FIPS 140 approved are:  \no ecdh -sha2 -nistp256  \no ecdh -sha2 -nistp384  \no ecdh -sha2 -nistp521  \no diffie -hellman -group -exchange -sha256  \no diffie -hellman -group16 -sha512  \no diffie -hellman -group18 -sha512  \no diffie -hellman -group14 -sha256",
        "Rationale": "Key exchange methods that are considered weak should be removed. A key exchange \nmethod may be weak because too few bits are used, or the hashing algorithm is \nconsidered too weak. Using weak algorithms could expose connections to man -in-the-\nmiddle attacks  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.13": {
        "Title": "Ensure sshd LoginGraceTime is configured",
        "Description": "The LoginGraceTime  parameter specifies the time allowed for successful authentication \nto the SSH server. The longer the Grace period is the more open unauthenticated \nconnections can exist. Like other session controls in this session the Grace Period \nshould be limited to app ropriate organizational limits to ensure the service is available \nfor needed access.",
        "Rationale": "Setting the LoginGraceTime  parameter to a low number will minimize the risk of \nsuccessful brute force attacks to the SSH server. It will also limit the number of \nconcurrent unauthenticated connections While the recommended setting is 60 seconds \n(1 Minute), set the number based on s ite policy.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the LoginGraceTime  parameter to 60 seconds \nor less above any Include  entry as follows:  \nLoginGraceTime 60  \nNote:  First occurrence of a option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location.  \nDefault Value:  \nLoginGraceTime 120#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.14": {
        "Title": "Ensure sshd LogLevel is configured",
        "Description": "SSH provides several logging levels with varying amounts of verbosity. The DEBUG  \noptions are specifically not recommended other than strictly for debugging SSH \ncommunications. These levels provide so much data that it is difficult to identify \nimportant security information, and may violate the privacy of users.",
        "Rationale": "The INFO level is the basic level that only records login activity of SSH users. In many \nsituations, such as Incident Response, it is important to determine when a particular \nuser was active on a system. The logout record can eliminate those users who \ndisconnected , which helps narrow the field.  \nThe VERBOSE  level specifies that login and logout activity as well as the key fingerprint for \nany SSH key used for login will be logged. This information is important for SSH key \nmanagement, especially in legacy environments.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.15": {
        "Title": "Ensure sshd MACs are configured",
        "Description": "This variable limits the types of MAC algorithms that SSH can use during \ncommunication.  \nNotes:  \n• Some organizations may have stricter requirements for approved MACs.  \n• Ensure that MACs used are in compliance with site policy.  \n• The only \"strong\" MACs currently FIPS 140 approved are:  \no HMAC -SHA1  \no HMAC -SHA2 -256 \no HMAC -SHA2 -384 \no HMAC -SHA2 -512",
        "Rationale": "MD5 and 96 -bit MAC algorithms are considered weak and have been shown to increase \nexploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal \nof attention as a weak spot that can be exploited with expanded computing power. An \nattacker that breaks the algorithm could take advantage of a MiTM position to decrypt \nthe SSH tunnel and capture credentials and information.  \n   \nInternal Only - General",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the LogLevel  parameter to VERBOSE  or INFO \nabove any Include  and Match  entries as follows:  \nLogLevel VERBOSE  \n   - OR - \nLogLevel INFO  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.  \nDefault Value:  \nLogLevel INFO#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.16": {
        "Title": "Ensure sshd MaxAuthTries is configured",
        "Description": "The MaxAuthTries  parameter specifies the maximum number of authentication attempts \npermitted per connection. When the login failure count reaches half the number, error \nmessages will be written to the syslog  file detailing the login failure.",
        "Rationale": "Setting the MaxAuthTries  parameter to a low number will minimize the risk of successful \nbrute force attacks to the SSH server. While the recommended setting is 4, set the \nnumber based on site policy.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.17": {
        "Title": "Ensure sshd MaxSessions is configured",
        "Description": "The MaxSessions  parameter specifies the maximum number of open sessions permitted \nfrom a given connection.",
        "Rationale": "To protect a system from denial of service due to a large number of concurrent \nsessions, use the rate limiting function of MaxSessions to protect availability of sshd \nlogins and prevent overwhelming the daemon.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.18": {
        "Title": "Ensure sshd MaxStartups is configured",
        "Description": "The MaxStartups  parameter specifies the maximum number of concurrent \nunauthenticated connections to the SSH daemon.",
        "Rationale": "To protect a system from denial of service due to a large number of pending \nauthentication connection attempts, use the rate limiting function of MaxStartups to \nprotect availability of sshd logins and prevent overwhelming the daemon.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the MaxSessions  parameter to 10 or less above \nany Include  and Match  entries as follows:  \nMaxSessions 10  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.  \nDefault Value:  \nMaxSessions 10#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.19": {
        "Title": "Ensure sshd PermitEmptyPasswords is disabled",
        "Description": "The PermitEmptyPasswords  parameter specifies if the SSH server allows login to \naccounts with empty password strings.",
        "Rationale": "Disallowing remote shell access to accounts that have an empty password reduces the \nprobability of unauthorized access to the system.",
        "Remediation": "Edit /etc/ssh/sshd_config  and set the PermitEmptyPasswords  parameter to no above \nany Include  and Match  entries as follows:  \nPermitEmptyPasswords no  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.2": {
        "Title": "Ensure permissions on SSH private host key files are configured",
        "Description": "An SSH private key is one of two files used in SSH public key authentication. In this \nauthentication method, the possession of the private key is proof of identity. Only a \nprivate key that corresponds to a public key will be able to authenticate successful ly. \nThe private keys need to be stored and handled carefully, and no copies of the private \nkey should be distributed.",
        "Rationale": "If an unauthorized user obtains the private SSH host key file, the host could be \nimpersonated",
        "Remediation": "Run the following script to set ownership and permissions on /etc/ssh/sshd_config  \nand files ending in .conf  in the /etc/ssh/sshd_config.d  directory:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.20": {
        "Title": "Ensure sshd PermitRootLogin is disabled",
        "Description": "The PermitRootLogin  parameter specifies if the root user can log in using SSH. The \ndefault is prohibit -password .",
        "Rationale": "Disallowing root logins over SSH requires system admins to authenticate using their \nown individual account, then escalating to root. This limits opportunity for non -\nrepudiation and provides a clear audit trail in the event of a security incident.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.21": {
        "Title": "Ensure sshd PermitUserEnvironment is disabled",
        "Description": "The PermitUserEnvironment  option allows users to present environment options to the \nSSH daemon.",
        "Rationale": "Permitting users the ability to set environment variables through the SSH daemon could \npotentially allow users to bypass security controls (e.g. setting an execution path that \nhas SSH executing trojan'd programs)",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.22": {
        "Title": "Ensure sshd UsePAM is enabled",
        "Description": "The UsePAM  directive enables the Pluggable Authentication Module (PAM) interface. If \nset to yes this will enable PAM authentication using ChallengeResponseAuthentication  \nand PasswordAuthentication  directives in addition to PAM account and session module \nprocessing for all authentication types.",
        "Rationale": "When usePAM  is set to yes, PAM runs through account and session types properly. This \nis important if you want to restrict access to services based off of IP, time or other \nfactors of the account. Additionally, you can make sure users inherit certain \nenvironment variables on login or disallow access to the server",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the UsePAM  parameter to yes above any \nInclude  entries as follows:  \nUsePAM yes  \nNote:  First occurrence of an option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location.  \nDefault Value:  \nUsePAM yes#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.3": {
        "Title": "Ensure permissions on SSH public host key files are configured",
        "Description": "An SSH public key is one of two files used in SSH public key authentication. In this \nauthentication method, a public key is a key that can be used for verifying digital \nsignatures generated using a corresponding private key. Only a public key that \ncorrespo nds to a private key will be able to authenticate successfully.",
        "Rationale": "If a public host key file is modified by an unauthorized user, the SSH service may be \ncompromised.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.4": {
        "Title": "Ensure sshd access is configured",
        "Description": "There are several options available to limit which users and group can access the \nsystem via SSH. It is recommended that at least one of the following options be \nleveraged:  \n• AllowUsers :  \no The AllowUsers  variable gives the system administrator the option of \nallowing specific users to ssh into the system. The list consists of space \nseparated user names. Numeric user IDs are not recognized with this \nvariable. If a system administrator wants to restrict user access further by \nonly allowing the allowed users to log in from a particular host, the entry \ncan be specified in the form of user@host.  \n• AllowGroups :  \no The AllowGroups  variable gives the system administrator the option of \nallowing specific groups of users to ssh into the system. The list consists \nof space separated group names. Numeric group IDs are not recognized \nwith this variable.  \n• DenyUsers :  \no The DenyUsers  variable gives the system administrator the option of \ndenying specific users to ssh into the system. The list consists of space \nseparated user names. Numeric user IDs are not recognized with this \nvariable. If a system administrator wants to restrict user access further by \nspecifically denying a user's access from a particular host, the e ntry can \nbe specified in the form of user@host.  \n• DenyGroups :  \no The DenyGroups  variable gives the system administrator the option of \ndenying specific groups of users to ssh into the system. The list consists of \nspace separated group names. Numeric group IDs are not recognized \nwith this variable.",
        "Rationale": "Restricting which users can remotely access the system via SSH will help ensure that \nonly authorized users access the system.  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.5": {
        "Title": "Ensure sshd Banner is configured",
        "Description": "The Banner  parameter specifies a file whose contents must be sent to the remote user \nbefore authentication is permitted. By default, no banner is displayed.",
        "Rationale": "Banners are used to warn connecting users of the particular site's policy regarding \nconnection. Presenting a warning message prior to the normal user login may assist the \nprosecution of trespassers on the computer system.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.6": {
        "Title": "Ensure sshd Ciphers are configured",
        "Description": "This variable limits the ciphers that SSH can use during communication.  \nNotes:  \n• Some organizations may have stricter requirements for approved ciphers.  \n• Ensure that ciphers used are in compliance with site policy.  \n• The only \"strong\" ciphers currently FIPS 140 compliant are:  \no aes256 -gcm@openssh.com   \no aes128 -gcm@openssh.com   \no aes256 -ctr \no aes192 -ctr \no aes128 -ctr",
        "Rationale": "Weak ciphers that are used for authentication to the cryptographic module cannot be \nrelied upon to provide confidentiality or integrity, and system data may be compromised.  \n• The Triple DES ciphers, as used in SSH, have a birthday bound of approximately \nfour billion blocks, which makes it easier for remote attackers to obtain clear text \ndata via a birthday attack against a long -duration encrypted session, aka a \n\"Sweet32\" attack . \n• Error handling in the SSH protocol; Client and Server, when using a block cipher \nalgorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote \nattackers to recover certain plain text data from an arbitrary block of cipher text in \nan SSH session  via unknown vectors.  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.7": {
        "Title": "Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured",
        "Description": "Note:  To clarify, the two settings described below are only meant for idle connections \nfrom a protocol perspective and are not meant to check if the user is active or not. An \nidle user does not mean an idle connection. SSH does not and never had, intentionally,  \nthe capability to drop idle users. In SSH versions before 8.2p1  there was a bug that \ncaused these values to behave in such a manner that they were abused to disconnect \nidle users. This bug has been resolved in 8.2p1  and thus it can no longer be abuse d \ndisconnect idle users.  \nThe two options ClientAliveInterval  and ClientAliveCountMax  control the timeout of \nSSH sessions. Taken directly from man 5 sshd_config : \n• ClientAliveInterval  Sets a timeout interval in seconds after which if no data \nhas been received from the client, sshd(8) will send a message through the \nencrypted channel to request a response from the client. The default is 0, \nindicating that these messages will not be sent to the client.  \n• ClientAliveCountMax  Sets the number of client alive messages which may be \nsent without sshd(8) receiving any messages back from the client. If this \nthreshold is reached while client alive messages are being sent, sshd will \ndisconnect the client, terminating the session. It i s important to note that the use \nof client alive messages is very different from TCPKeepAlive. The client alive \nmessages are sent through the encrypted channel and therefore will not be \nspoofable. The TCP keepalive option en ‐abled by TCPKeepAlive is spoofable. \nThe client alive mechanism is valuable when the client or server depend on \nknowing when a connection has become unresponsive. The default value is 3. If \nClientAliveInterval is set to 15, and ClientAliveCountMax is left a t the default, \nunresponsive SSH clients will be disconnected after approximately 45 seconds. \nSetting a zero ClientAliveCountMax disables connection termination.  \n   \nInternal Only - General",
        "Rationale": "In order to prevent resource exhaustion, appropriate values should be set for both \nClientAliveInterval  and ClientAliveCountMax . Specifically, looking at the source \ncode, ClientAliveCountMax  must be greater than zero in order to utilize the ability of \nSSH to drop idle connections. If connections are allowed to stay open indefinitely, this \ncan potentially be used as a DDOS attack or simple resource exhaustion could occur \nover unreliable networ ks. \nThe example set here is a 45 second timeout. Consult your site policy for network \ntimeouts and apply as appropriate.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the ClientAliveInterval  and \nClientAliveCountMax  parameters above any Include  and Match  entries according to \nsite policy.  \nExample:  \nClientAliveInterval 15  \nClientAliveCountMax 3  \nNote:  First occurrence of a option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.1.8": {
        "Title": "Ensure sshd DisableForwarding is enabled",
        "Description": "The DisableForwarding  parameter disables all forwarding features, including X11, ssh -\nagent(1), TCP and StreamLocal. This option overrides all other forwarding -related \noptions and may simplify restricted configurations.  \n• X11Forwarding provides the ability to tunnel X11 traffic through the connection to \nenable remote graphic connections.  \n• ssh-agent is a program to hold private keys used for public key authentication. \nThrough use of environment variables the agent can be located and \nautomatically used for authentication when logging in to other machines using \nssh. \n• SSH port forwarding is a mechanism in SSH for tunneling application ports from \nthe client to the server, or servers to clients. It can be used for adding encryption \nto legacy applications, going through firewalls, and some system administrators \nand IT prof essionals use it for opening backdoors into the internal network from \ntheir home machines.",
        "Rationale": "Disable X11 forwarding unless there is an operational requirement to use X11 \napplications directly. There is a small risk that the remote X11 servers of users who are \nlogged in via SSH with X11 forwarding could be compromised by other users on the \nX11 serv er. Note that even if X11 forwarding is disabled, users can always install their \nown forwarders.  \nanyone with root privilege on the the intermediate server can make free use of ssh -\nagent to authenticate them to other servers  \nLeaving port forwarding enabled can expose the organization to security risks and \nbackdoors. SSH connections are protected with strong encryption. This makes their \ncontents invisible to most deployed network monitoring and traffic filtering solutions. \nThis invisibility carries considerable risk potential if it is used for malicious purposes \nsuch as data exfiltration. Cybercriminals or malware could exploit SSH to hide their \nunauthorized communications, or to exfiltrate stolen data from the target network.   \nInternal Only - General  Impact:  \nSSH tunnels are widely used in many corporate environments. In some environments \nthe applications themselves may have very limited native support for security. By \nutilizing tunneling, compliance with SOX, HIPAA, PCI -DSS, and other standards can be \nachieved  without having to modify the applications.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "5.1.9": {
        "Title": "Ensure sshd GSSAPIAuthentication is disabled",
        "Description": "The GSSAPIAuthentication  parameter specifies whether user authentication based on \nGSSAPI is allowed",
        "Rationale": "Allowing GSSAPI authentication through SSH exposes the system's GSSAPI to remote \nhosts, and should be disabled to reduce the attack surface of the system",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the GSSAPIAuthentication  parameter to no \nabove any Include  and Match  entries as follows:  \nGSSAPIAuthentication no  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "5.2.1": {
        "Title": "Ensure sudo is installed",
        "Description": "sudo allows a permitted user to execute a command as the superuser or another user, \nas specified by the security policy. The invoking user's real (not effective) user ID is \nused to determine the user name with which to query the security policy.",
        "Rationale": "sudo supports a plug -in architecture for security policies and input/output logging. Third \nparties can develop and distribute their own policy and I/O logging plug -ins to work \nseamlessly with the sudo front end. The default security policy is sudoers , which is \nconfigured via the file /etc/sudoers  and any entries in /etc/sudoers.d . \nThe security policy determines what privileges, if any, a user has to run sudo. The policy \nmay require that users authenticate themselves with a password or another \nauthentication mechanism. If authentication is required, sudo will exit if the user's \npassword is not entered within a configurable time limit. This limit is policy -specific.",
        "Remediation": "First determine is LDAP functionality is required. If so, then install sudo-ldap, else install \nsudo. \nExample:  \n# apt install sudo#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.2.2": {
        "Title": "Ensure sudo commands use pty",
        "Description": "sudo can be configured to run only from a pseudo terminal ( pseudo-pty).",
        "Rationale": "Attackers can run a malicious program using sudo which would fork a background \nprocess that remains even when the main program has finished executing.  \nImpact:  \nWARNING:  Editing the sudo configuration incorrectly can cause sudo to stop \nfunctioning. Always use visudo  to modify sudo configuration files.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.2.3": {
        "Title": "Ensure sudo log file exists",
        "Description": "sudo can use a custom log file",
        "Rationale": "A sudo log file simplifies auditing of sudo commands  \nImpact:  \nWARNING:  Editing the sudo configuration incorrectly can cause sudo to stop \nfunctioning. Always use visudo  to modify sudo configuration files.",
        "Remediation": "Edit the file /etc/sudoers  or a file in /etc/sudoers.d/  with visudo  or visudo -f <PATH \nTO FILE>  and add the following line:  \nExample:  \nDefaults logfile=\"/var/log/sudo.log\"  \nNote:  \n• sudo will read each file in /etc/sudoers.d , skipping file names that end in ~ or \ncontain a . character to avoid causing problems with package manager or editor \ntemporary/backup files.  \n• Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first  will be \nparsed before /etc/sudoers.d/10_second . \n• Be aware that because the sorting is lexical, not numeric, \n/etc/sudoers.d/1_whoops  would be loaded after /etc/sudoers.d/10_second . \n• Using a consistent number of leading zeroes in the file names can be used to \navoid such problems.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.2.4": {
        "Title": "Ensure users must provide password for privilege escalation",
        "Description": "The operating system must be configured so that users must provide a password for \nprivilege escalation.",
        "Rationale": "Without (re -)authentication, users may access resources or perform tasks for which they \ndo not have authorization.  \nWhen operating systems provide the capability to escalate a functional capability, it is \ncritical the user (re -)authenticate.  \nImpact:  \nThis will prevent automated processes from being able to elevate privileges.",
        "Remediation": "",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "5.2.5": {
        "Title": "Ensure re -authentication for privilege escalation is not disabled globally",
        "Description": "The operating system must be configured so that users must re -authenticate for \nprivilege escalation.",
        "Rationale": "Without re -authentication, users may access resources or perform tasks for which they \ndo not have authorization.  \nWhen operating systems provide the capability to escalate a functional capability, it is \ncritical the user re -authenticate.",
        "Remediation": "Configure the operating system to require users to reauthenticate for privilege \nescalation.  \nBased on the outcome of the audit procedure, use visudo -f <PATH TO FILE>  to edit \nthe relevant sudoers file.  \nRemove any occurrences of !authenticate  tags in the file(s).#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.2.6": {
        "Title": "Ensure sudo authentication timeout is configured correctly",
        "Description": "sudo caches used credentials for a default of 15 minutes. This is for ease of use when \nthere are multiple administrative tasks to perform. The timeout can be modified to suit \nlocal security policies.  \nThis default is distribution specific. See audit section for further information.",
        "Rationale": "Setting a timeout value reduces the window of opportunity for unauthorized privileged \naccess to another user.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.2.7": {
        "Title": "Ensure access to the su command is restricted",
        "Description": "The su command allows a user to run a command or shell as another user. The \nprogram has been superseded by sudo, which allows for more granular control over \nprivileged access. Normally, the su command can be executed by any user. By \nuncommenting the pam_wheel.so  statement in /etc/pam.d/su , the su command will only \nallow users in a specific groups to execute su. This group should be empty to reinforce \nthe use of sudo for privileged access.",
        "Rationale": "Restricting the use of su , and using sudo in its place, provides system administrators \nbetter control of the escalation of user privileges to execute privileged commands. The \nsudo utility also provides a better logging and audit mechanism, as it can log each \ncommand executed via sudo , whereas su can only record that a user executed the su \nprogram.",
        "Remediation": "If the currently configured timeout is larger than 15 minutes, edit the file listed in the \naudit section with visudo -f <PATH TO FILE>  and modify the entry timestamp_timeout=  \nto 15 minutes or less as per your site policy. The value is in minutes. This particular \nentry may appear on it's own, or on the same line as env_reset . See the following two \nexamples:  \nDefaults    env_reset, timestamp_timeout=15  \nDefaults    timestamp_timeout=15  \nDefaults    env_reset#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.1.1": {
        "Title": "Ensure latest version of pam is installed",
        "Description": "Updated versions of PAM include additional functionality",
        "Rationale": "To ensure the system has full functionality and access to the options covered by this \nBenchmark the latest version of libpam-runtime  should be installed on the system",
        "Remediation": "- IF - the version of libpam-runtime  on the system is less that version 1.5.2-6: \nRun the following command to update to the latest version of PAM: \n# apt upgrade libpam -runtime#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.1.2": {
        "Title": "- General 5.3.1.2 Ensure libpam -modules is installed",
        "Description": "Pluggable Authentication Modules for PAM",
        "Rationale": "To ensure the system has full functionality and access to the PAM options covered by \nthis Benchmark",
        "Remediation": "- IF - the version of libpam-modules  on the system is less that version 1.5.2-6: \nRun the following command to update to the latest version of PAM: \n# apt upgrade libpam -modules  \nInternal Only - General  5.3.1.3 Ensure libpam -pwquality is installed (Automated)  \nProfile Applicability:  \n•  Level 1 - Server  \n•  Level 1 - Workstation  \nDescription:  \nlibpwquality  provides common functions for password quality checking and scoring \nthem based on their apparent randomness. The library also provides a function for \ngenerating random passwords with good pronounceability.  \nThis module can be plugged into the password stack of a given service to provide some \nplug-in strength -checking for passwords. The code was originally based on \npam_cracklib  module and the module is backwards compatible with its options.  \nRationale:  \nStrong passwords reduce the risk of systems being hacked through brute force \nmethods.  \nAudit:  \nRun the following command to verify libpam-pwquality  is installed:  \n# dpkg-query -s libpam -pwquality | grep -P -- '^(Status|Version) \\b' \nThe output should be similar to:  \nStatus: install ok installed  \nVersion: 1.4.4 -1 \nRemediation:  \nRun the following command to install libpam-pwquality : \n# apt install libpam -pwquality#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.2.1": {
        "Title": "Ensure pam_unix module is enabled",
        "Description": "pam_unix  is the standard Unix authentication module. It uses standard calls from the \nsystem's libraries to retrieve and set account information as well as authentication. \nUsually this is obtained from the /etc/passwd  and if shadow is enabled, the /etc/shadow  \nfile as well.  \nThe account component performs the task of establishing the status of the user's \naccount and password based on the following shadow elements: expire , last_change , \nmax_change , min_change , warn_change . In the case of the latter, it may offer advice to the \nuser on changing their password or, through the PAM_AUTHTOKEN_REQD  return, delay \ngiving service to the user until they have established a new password. The entries listed \nabove are documented in the shadow(5) manual page. Should the user's record not \ncontain  one or more of these entries, the corresponding shadow check is not performed.  \nThe authentication component performs the task of checking the users credentials \n(password). The default action of this module is to not permit the user access to a \nservice if their official password is blank.",
        "Rationale": "The system should only provide access after performing authentication of a user.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.2.2": {
        "Title": "Ensure pam_faillock module is enabled",
        "Description": "The pam_faillock.so  module maintains a list of failed authentication attempts per user \nduring a specified interval and locks the account in case there were more than the \nconfigured number of consecutive failed authentications (this is defined by the deny \nparameter in the faillock configuration). It stores the failure records into per -user files in \nthe tally directory.",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.",
        "Remediation": "Run the following command to enable the pam_unix  module:  \n# pam-auth-update --enable unix  \nNote:  If a site specific custom profile is being used in your environment to configure \nPAM that includes the configuration for the pam_faillock  module, enable that module \ninstead#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.2.3": {
        "Title": "Ensure pam_pwquality module is enabled",
        "Description": "The pam_pwquality.so  module performs password quality checking. This module can \nbe plugged into the password stack of a given service to provide strength -checking for \npasswords. The code was originally based on pam_cracklib module and the module is \nbackwards compatible with i ts options.  \nThe action of this module is to prompt the user for a password and check its strength \nagainst a system dictionary and a set of rules for identifying poor choices.  \nThe first action is to prompt for a single password, check its strength and then, if it is \nconsidered strong, prompt for the password a second time (to verify that it was typed \ncorrectly on the first occasion). All being well, the password is passed on to subsequent \nmodules to be installed as the new authentication token.",
        "Rationale": "Use of a unique, complex passwords helps to increase the time and resources required \nto compromise the password.",
        "Remediation": "Run the following script to verify the pam_pwquality.so  line exists in a pam-auth-update  \nprofile:  \n# grep -P -- '\\bpam_pwquality \\.so\\b' /usr/share/pam -configs/*  \nOutput should be similar to:  \n/usr/share/pam -configs/pwquality:       requisite                       \npam_pwquality.so retry=3  \n/usr/share/pam -configs/pwquality:       requisite                       \npam_pwquality.so retry=3  \n- IF - similar output is returned:  \nRun the following command to update /etc/pam.d/common -password  with the returned \nprofile:  \n# pam-auth-update --enable {PROFILE_NAME}  \nExample:  \n# pam-auth-update pwquality  \n- IF - similar output is NOT  returned:  \nRun the following script to create a pam-auth-update  profile for pwquality : \n!#/usr/bin/env bash  \n \n{ \n   arr=('Name: Pwquality password strength checking' 'Default: yes' \n'Priority: 1024' 'Conflicts: cracklib' 'Password -Type: Primary' 'Password:' '        \nrequisite                       pam_pwquality.so retry=3' 'Password -Initial:' \n'requisite')  \n   printf '%s \\n' \"${arr[@]}\" > /usr/share/pam -configs/pwquality  \n} \nRun the following command to update /etc/pam.d/common -password  with the pwquality  \nprofile:  \n# pam-auth-update --enable pwquality  \nNote:  \n• The name used for the file must be used in the pam-auth-update --enable  \ncommand  \n• The Name:  line should be easily recognizable and understood  \n• The Priority:  Line is important as it effects the order of the lines in the \n/etc/pam.d/  files \n• If a site specific custom profile is being used in your environment to configure \nPAM that includes the configuration for the pam_pwquality  module, enable that \nmodule instead#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.2.4": {
        "Title": "Ensure pam_pwhistory module is enabled",
        "Description": "The pam_pwhistory.so  module saves the last passwords for each user in order to force \npassword change history and keep the user from alternating between the same \npassword too frequently.  \nThis module does not work together with kerberos. In general, it does not make much \nsense to use this module in conjunction with NIS or LDAP, since the old passwords are \nstored on the local machine and are not available on another machine for password \nhistory checking.",
        "Rationale": "Use of a unique, complex passwords helps to increase the time and resources required \nto compromise the password.",
        "Remediation": "Run the following script to verify the pam_pwquality.so  line exists in a pam-auth-update  \nprofile:  \n# grep -P -- '\\bpam_pwhistory \\.so\\b' /usr/share/pam -configs/*  \nOutput should be similar to:  \n/usr/share/pam -configs/pwhistory:   requisite   pam_pwhistory.so remember=24 \nenforce_for_root try_first_pass use_authtok  \n- IF - similar output is returned:  \nRun the following command to update /etc/pam.d/common -password  with the returned \nprofile:  \n# pam-auth-update --enable {PROFILE_NAME}  \nExample:  \n# pam-auth-update pwhistory  \n- IF - similar output is NOT  returned:  \nRun the following script to create a pam-auth-update  profile for pwhistory : \n!#/usr/bin/env bash  \n \n{ \n   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: \n1024' 'Password -Type: Primary' 'Password:' '        requisite                       \npam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authto k') \n   printf '%s \\n' \"${arr[@]}\" > /usr/share/pam -configs/pwhistory  \n} \nRun the following command to update /etc/pam.d/common -password  with the pwhistory  \nprofile:  \n# pam-auth-update --enable pwhistory  \nNote:  \n• The name used for the file must be used in the pam-auth-update --enable  \ncommand  \n• The Name:  line should be easily recognizable and understood  \n• The Priority:  Line is important as it effects the order of the lines in the \n/etc/pam.d/  files \n• If a site specific custom profile is being used in your environment to configure \nPAM that includes the configuration for the pam_pwhistory  module, enable that \nmodule instead   \nInternal Only - General  CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 5.2 Use Unique Passwords  \n Use unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8 -character password for accounts using MFA and a \n14-character password for accounts not using MFA.  ● ● ● \nv7 4.4 Use Unique Passwords  \n Where multi -factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004  TA0006  M1027  \n \n   \nInternal Only - General  5.3.3 Configure PAM Arguments  \nPluggable Authentication Modules (PAM) uses arguments to pass information to a \npluggable module during authentication for a particular module type. These arguments \nallow the PAM configuration files for particular programs to use a common PAM module \nbut in different ways.  \nInvalid arguments are ignored and do not otherwise affect the success or failure of the \nPAM module. When an invalid argument is passed, an error is usually written to \n/var/log/messages  file. However, since the reporting method is controlled by the PAM \nmodule, the module must be written correctly to log the error to this file.  \nNote:  If custom PAM files are being used, for this section's remediation, the \ncorresponding files in /etc/pam.d/  would need to be edited directly, and the pam-auth-\nupdate --enable <EDITED_PROFILE_NAME>  command skipped#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.1.1": {
        "Title": "Ensure password failed attempts lockout is configured",
        "Description": "The deny=<n>  option will deny access if the number of consecutive authentication \nfailures for this user during the recent interval exceeds .",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.",
        "Remediation": "Create or edit the following line in /etc/security/faillock.conf  setting the deny option \nto 5 or less:  \ndeny = 5  \nRun the following command:  \n# grep -Pl -- '\\bpam_faillock \\.so\\h+([^#\\n\\r]+\\h+)?deny \\b' /usr/share/pam -\nconfigs/*  \nEdit any returned files and remove the deny=<N>  arguments from the pam_faillock.so  \nline(s):#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.1.2": {
        "Title": "Ensure password unlock time is configured",
        "Description": "unlock_time=<n>  - The access will be re -enabled after seconds after the lock out. The \nvalue 0 has the same meaning as value never - the access will not be re -enabled \nwithout resetting the faillock entries by the faillock(8) command.  \nNote:  \n• The default directory that pam_faillock uses is usually cleared on system boot so \nthe access will be also re -enabled after system reboot. If that is undesirable a \ndifferent tally directory must be set with the dir option.  \n• It is usually undesirable to permanently lock out users as they can become easily \na target of denial of service attack unless the usernames are random and kept \nsecret to potential attackers.  \n• The maximum configurable value for unlock_time  is 604800",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.  \nImpact:  \nUse of unlock_time=0  may allow an attacker to cause denial of service to legitimate \nusers. This will also require a systems administrator with elevated privileges to unlock \nthe account.  \n   \nInternal Only - General",
        "Remediation": "Set password unlock time to conform to site policy. unlock_time  should be 0 (never), or \n900 seconds or greater.  \nEdit /etc/security/faillock.conf  and update or add the following line:  \nunlock_time = 900  \nRun the following command: remove the unlock_time  argument from the \npam_faillock.so  module in the PAM files:  \n# grep -Pl -- '\\bpam_faillock \\.so\\h+([^#\\n\\r]+\\h+)?unlock_time \\b' \n/usr/share/pam -configs/*  \nEdit any returned files and remove the unlock_time=<N>  argument from the \npam_faillock.so  line(s):  \nDefault Value:  \nunlock_time = 600  \nAdditional Information:  \nIf a user has been locked out because they have reached the maximum consecutive \nfailure count defined by deny=  in the pam_faillock.so  module, the user can be unlocked \nby issuing the command faillock --user <USERNAME> --reset . This command sets the \nfailed count to 0, effectively unlocking the user.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.1.3": {
        "Title": "Ensure password failed attempts lockout includes root account",
        "Description": "even_deny_root  - Root account can become locked as well as regular accounts  \nroot_unlock_time=n  - This option implies even_deny_root option. Allow access after n \nseconds to root account after the account is locked. In case the option is not specified \nthe value is the same as of the unlock_time option.",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.  \nImpact:  \nUse of unlock_time=0  or root_unlock_time=0  may allow an attacker to cause denial of \nservice to legitimate users.  \n   \nInternal Only - General",
        "Remediation": "Edit /etc/security/faillock.conf : \n• Remove or update any line containing root_unlock_time , - OR - set it to a value \nof 60 or more  \n• Update or add the following line:  \neven_deny_root  \nRun the following command:  \n# grep -Pl -- \n'\\bpam_faillock \\.so\\h+([^#\\n\\r]+\\h+)?(even_deny_root|root_unlock_time)' \n/usr/share/pam -configs/*  \nEdit any returned files and remove the even_deny_root  and root_unlock_time  \narguments from the pam_faillock.so  line(s):   \nInternal Only - General  Default Value:  \ndisabled  \nAdditional Information:  \nIf a user has been locked out because they have reached the maximum consecutive \nfailure count defined by deny=  in the pam_faillock.so  module, the user can be unlocked \nby issuing the command faillock --user <USERNAME> --reset . This command sets the \nfailed count to 0, effectively unlocking the user.  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 6.2 Establish an Access Revoking Process  \n Establish and follow a process, preferably automated, for revoking access to \nenterprise assets, through disabling accounts immediately upon termination, rights \nrevocation, or role change of a user. Disabling accounts, instead of deleting \naccounts, may be n ecessary to preserve audit trails.  ● ● ● \nv7 16.7 Establish Process for Revoking Access  \n Establish and follow an automated process for revoking system access by \ndisabling accounts immediately upon termination or change of responsibilities of an \nemployee or contractor . Disabling these accounts, instead of deleting accounts, \nallows preservation  of audit trails.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1110, T1110.001, \nT1110.003  TA0006  M1027   \nInternal Only - General  5.3.3.2 Configure pam_pwquality module  \nThe pam_pwquality.so  module checks the strength of passwords. It performs checks \nsuch as making sure a password is not a dictionary word, it is a certain length, contains \na mix of characters (e.g. alphabet, numeric, other) and more.  \nThese checks are configurable by either:  \n• use of the module arguments  \n• modifying the /etc/security/pwquality.conf  configuration file  \n• creating a .conf  file in the /etc/security/pwquality.conf.d/  directory.  \nNote:  The module arguments override the settings in the \n/etc/security/pwquality.conf  configuration file. Settings in the \n/etc/security/pwquality.conf  configuration file override settings in a .conf  file in the \n/etc/security/pwquality.conf.d/  directory.  \nThe possible options in the file are:  \n• difok  - Number of characters in the new password that must not be present in \nthe old password. (default 1). The special value of 0 disables all checks of \nsimilarity of the new password with the old password except the new password \nbeing exactly the same as the old one.  \n• minlen  - Minimum acceptable size for the new password (plus one if credits are \nnot disabled which is the default). (See pam_pwquality(8).) Cannot be set to \nlower value than 6. (default 8)  \n• dcredit  - The maximum credit for having digits in the new password. If less than \n0 it is the minimum number of digits in the new password. (default 0)  \n• ucredit  - The maximum credit for having uppercase characters in the new \npassword. If less than 0 it is the minimum number of uppercase characters in the \nnew password. (default 0)  \n• lcredit  - The maximum credit for having lowercase characters in the new \npassword. If less than 0 it is the minimum number of lowercase characters in the \nnew password. (default 0)  \n• ocredit  - The maximum credit for having other characters in the new password. \nIf less than 0 it is the minimum number of other characters in the new password. \n(default 0)  \n• minclass  - The minimum number of required classes of characters for the new \npassword (digits, uppercase, lowercase, others). (default 0)  \n• maxrepeat  - The maximum number of allowed same consecutive characters in \nthe new password. The check is disabled if the value is 0. (default 0)  \n• maxsequence  - The maximum length of monotonic character sequences in the \nnew password. Examples of such sequence are '12345' or 'fedcb'. Note that most \nsuch passwords will not pass the simplicity check unless the sequence is only a \nminor part of the password. The che ck is disabled if the value is 0. (default 0)#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "5.3.3.2.1": {
        "Title": "Ensure password number of changed characters is configured",
        "Description": "The pwquality  difok  option sets the number of characters in a password that must not \nbe present in the old password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute -force attacks.  \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.  \n   \nInternal Only - General",
        "Remediation": "Create or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following line \nto set difok  to 2 or more. Ensure setting conforms to local site policy:  \nExample:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.2.2": {
        "Title": "Ensure minimum password length is configured",
        "Description": "The minimum password length setting determines the lowers number of characters that \nmake up a password for a user account. There are many different theories about how to \ndetermine the best password length for an organization, but perhaps \"passphrase\" is a \nbetter term than \"password\".  \nThe minlen  option sets the minimum acceptable size for the new password (plus one if \ncredits are not disabled which is the default). Cannot be set to lower value than 6.",
        "Rationale": "Strong passwords help protect systems from password attacks. Types of password \nattacks include dictionary attacks, which attempt to use common words and phrases, \nand brute force attacks, which try every possible combination of characters. Also \nattackers ma y try to obtain the account database so they can use tools to discover the \naccounts and passwords.  \nImpact:  \nIn general, it is true that longer passwords are better (harder to crack), but it is also true \nthat forced password length requirements can cause user behavior that is predictable \nand undesirable. For example, requiring users to have a minimum 16 -character  \npassword may cause them to choose repeating patterns like fourfourfourfour or \npasswordpassword that meet the requirement but aren’t hard to guess. Additionally, \nlength requirements increase the chances that users will adopt other insecure practices, \nlike writing them down, re -using them or storing them unencrypted in their documents.  \nHaving a reasonable minimum length with no maximum character limit increases the \nresulting average password length used (and therefore the strength).6  \n   \nInternal Only - General",
        "Remediation": "Create or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following line \nto set password length of 14 or more characters. Ensure that password length conforms \nto local site policy:  \nExample:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.2.3": {
        "Title": "Ensure password complexity is configured (Manual)",
        "Description": "Password complexity can be set through:  \n• minclass  - The minimum number of classes of characters required in a new \npassword. (digits, uppercase, lowercase, others). e.g. minclass = 4  requires \ndigits, uppercase, lower case, and special characters.  \n• dcredit  - The maximum credit for having digits in the new password. If less than \n0 it is the minimum number of digits in the new password. e.g. dcredit = -1 \nrequires at least one digit  \n• ucredit  - The maximum credit for having uppercase characters in the new \npassword. If less than 0 it is the minimum number of uppercase characters in the \nnew password. e.g. ucredit = -1 requires at least one uppercase character  \n• ocredit  - The maximum credit for having other characters in the new password. \nIf less than 0 it is the minimum number of other characters in the new password. \ne.g. ocredit = -1 requires at least one special character  \n• lcredit  - The maximum credit for having lowercase characters in the new \npassword. If less than 0 it is the minimum number of lowercase characters in the \nnew password. e.g. lcredit = -1 requires at least one lowercase character",
        "Rationale": "Strong passwords protect systems from being hacked through brute force methods.  \nRequiring at least one non -alphabetic character increases the search space beyond \npure dictionary words, which makes the resulting password harder to crack.  \nForcing users to choose an excessively complex password, e.g. some combination of \nupper -case, lower -case, numbers, and special characters, has a negative impact. It \nplaces an extra burden on users and many will use predictable patterns (for example, a \ncapital letter in the first position, followed by lowercase letters, then one or two numbers, \nand a “special character” at the end). Attackers know this, so dictionary attacks will \noften contain these common patterns and use the most common substitutions like,  $ for \ns, @ for a, 1 for l, 0 for o.  \nImpact:  \nPasswords that are too complex in nature make it harder for users to remember, leading \nto bad practices. In addition, composition requirements provide no defense against \ncommon attack types such as social engineering or insecure storage of passwords   \nInternal Only - General",
        "Remediation": "Run the following command:  \n# grep -Pl -- \n'\\bpam_pwquality \\.so\\h+([^#\\n\\r]+\\h+)?(minclass|[dulo]credit) \\b' \n/usr/share/pam -configs/*  \nEdit any returned files and remove the minclass , dcredit , ucredit , lcredit , and \nocredit  arguments from the pam_pwquality.so  line(s)  \nCreate or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following \nline(s) to set complexity according to local site policy:  \n• minclass = _N_  \n• dcredit = _N_  # Value should be either 0 or a number proceeded by a minus ( -) \nsymbol  \n• ucredit = -1 # Value should be either 0 or a number proceeded by a minus ( -) \nsymbol  \n• ocredit = -1 # Value should be either 0 or a number proceeded by a minus ( -) \nsymbol  \n• lcredit = -1 # Value should be either 0 or a number proceeded by a minus ( -) \nsymbol  \nExample 1 - Set minclass = 3 : \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.2.4": {
        "Title": "Ensure password same consecutive characters is configured",
        "Description": "The pwquality  maxrepeat  option sets the maximum number of allowed same \nconsecutive characters in a new password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute -force attacks.  \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.2.5": {
        "Title": "Ensure password maximum sequential characters is configured",
        "Description": "The pwquality  maxsequence  option sets the maximum length of monotonic character \nsequences in the new password. Examples of such sequence are 12345  or fedcb . The \ncheck is disabled if the value is 0. \nNote:  Most such passwords will not pass the simplicity check unless the sequence is \nonly a minor part of the password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute -force attacks.  \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.  \n   \nInternal Only - General",
        "Remediation": "Create or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following line \nto set maxsequence  to 3 or less and not 0. Ensure setting conforms to local site policy:  \nExample:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.2.6": {
        "Title": "Ensure password dictionary check is enabled",
        "Description": "The pwquality  dictcheck  option sets whether to check for the words from the cracklib  \ndictionary.",
        "Rationale": "If the operating system allows the user to select passwords based on dictionary words, \nthis increases the chances of password compromise by increasing the opportunity for \nsuccessful guesses, and brute -force attacks.  \n   \nInternal Only - General",
        "Remediation": "Edit any file ending in .conf  in the /etc/security/pwquality.conf.d/  directory and/or \nthe file /etc/security/pwquality.conf  and comment out or remove any instance of \ndictcheck = 0 : \nExample:  \n# sed -ri 's/^\\s*dictcheck \\s*=/# &/' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf  \nRun the following command:  \n# grep -Pl -- '\\bpam_pwquality \\.so\\h+([^#\\n\\r]+\\h+)?dictcheck \\b' \n/usr/share/pam -configs/*  \nEdit any returned files and remove the dictcheck  argument from the pam_pwquality.so  \nline(s)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.2.7": {
        "Title": "Ensure password quality checking is enforced",
        "Description": "The pam_pwquality  module can be configured to either reject a password if it fails the \nchecks, or only print a warning.  \nThis is configured by setting the enforcing=<N>  argument. If nonzero, a password will \nbe rejected if it fails the checks, otherwise only a warning message will be provided.  \nThis setting applies only to the pam_pwquality module and possibly other applications \nthat explicitly change their behavior based on it. It does not affect pwmake(1) and \npwscore(1).",
        "Rationale": "Strong passwords help protect systems from password attacks. Types of password \nattacks include dictionary attacks, which attempt to use common words and phrases, \nand brute force attacks, which try every possible combination of characters. Also \nattackers ma y try to obtain the account database so they can use tools to discover the \naccounts and passwords.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.2.8": {
        "Title": "Ensure password quality is enforced for the root user",
        "Description": "If the pwquality  enforce_for_root  option is enabled, the module will return error on \nfailed check even if the user changing the password is root.  \nThis option is off by default which means that just the message about the failed check is \nprinted but root can change the password anyway.  \nNote:  The root is not asked for an old password so the checks that compare the old and \nnew password are not performed.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute -force attacks.  \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.  \n   \nInternal Only - General",
        "Remediation": "Run the following command:  \n# grep -Pl -- '\\bpam_pwquality \\.so\\h+([^#\\n\\r]+\\h+)?enforcing=0 \\b' \n/usr/share/pam -configs/*  \nEdit any returned files and remove the enforcing=0  argument from the \npam_pwquality.so  line(s)  \nEdit /etc/security/pwquality.conf  and all files ending in .conf  in the \n/etc/security/pwquality.conf.d/  directory and remove or comment out any line \ncontaining the enforcing = 0  argument:  \nExample:  \n# sed -ri 's/^\\s*enforcing \\s*=\\s*0/# &/' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf  \nDefault Value:  \nenforcing=1#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.3.1": {
        "Title": "Ensure password history remember is configured",
        "Description": "The /etc/security/opasswd  file stores the users' old passwords and can be checked to \nensure that users are not recycling recent passwords. The number of passwords \nremembered is set via the remember argument value in set for the pam_pwhistory  \nmodule.  \n• remember=<N> - <N> is the number of old passwords to remember",
        "Rationale": "Requiring users not to reuse their passwords make it less likely that an attacker will be \nable to guess the password or use a compromised password.  \nNote:  These change only apply to accounts configured on the local system.",
        "Remediation": "Run the following command:  \n# awk '/Password -Type:/{ f = 1;next } / -Type:/{ f = 0 } f {if \n(/pam_pwhistory \\.so/) print FILENAME}' /usr/share/pam -configs/*  \nEdit any returned files and edit or add the remember=  argument, with a value of 24 or \nmore, that meets local site policy to the pam_pwhistory  line in the Password  section:  \nExample File:  \nName: pwhistory password history checking  \nDefault: yes  \nPriority: 1024  \nPassword -Type: Primary  \nPassword:  \n   requisite   pam_pwhistory.so remember=24 enforce_for_root try_first_pass \nuse_authtok # < - **ensure line includes remember=<N>**  \nRun the following command to update the files in the /etc/pam.d/  directory:  \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME>  \nExample:  \n# pam-auth-update --enable pwhistory#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.3.2": {
        "Title": "Ensure password history is enforced for the root user",
        "Description": "If the pwhistory  enforce_for_root  option is enabled, the module will enforce password \nhistory for the root user as well",
        "Rationale": "Requiring users not to reuse their passwords make it less likely that an attacker will be \nable to guess the password or use a compromised password  \nNote:  These change only apply to accounts configured on the local system.",
        "Remediation": "Run the following command:  \n# awk '/Password -Type:/{ f = 1;next } / -Type:/{ f = 0 } f {if \n(/pam_pwhistory \\.so/) print FILENAME}' /usr/share/pam -configs/*  \nEdit any returned files and add the enforce_for_root  argument to the pam_pwhistory  \nline in the Password  section:  \nExample File:  \nName: pwhistory password history checking  \nDefault: yes  \nPriority: 1024  \nPassword -Type: Primary  \nPassword:  \n   requisite   pam_pwhistory.so remember=24 enforce_for_root try_first_pass \nuse_authtok # < - **ensure line includes enforce_for_root**  \nRun the following command to update the files in the /etc/pam.d/  directory:  \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME>  \nExample:  \n# pam-auth-update --enable pwhistory  \nDefault Value:  \ndisabled#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.3.3": {
        "Title": "Ensure pam_pwhistory includes use_authtok",
        "Description": "use_authtok  - When password changing enforce the module to set the new password to \nthe one provided by a previously stacked password module",
        "Rationale": "use_authtok  allows multiple pam modules to confirm a new password before it is \naccepted.",
        "Remediation": "Edit any returned files and add the use_authtok  argument to the pam_pwhistory  line in \nthe Password  section:  \nExample File:  \nName: pwhistory password history checking  \nDefault: yes  \nPriority: 1024  \nPassword -Type: Primary  \nPassword:  \n   requisite   pam_pwhistory.so remember=24 enforce_for_root try_first_pass \nuse_authtok # < - **ensure line includes use_authtok**  \nRun the following command to update the files in the /etc/pam.d/  directory:  \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME>  \nExample:  \n# pam-auth-update --enable pwhistory#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.4.1": {
        "Title": "Ensure pam_unix does not include nullok",
        "Description": "The nullok  argument overrides the default action of pam_unix.so  to not permit the user \naccess to a service if their official password is blank.",
        "Rationale": "Using a strong password is essential to helping protect personal and sensitive \ninformation from unauthorized access",
        "Remediation": "Run the following command:  \n# grep -PH -- '^\\h*([^#\\n\\r]+\\h+)?pam_unix \\.so\\h+([^#\\n\\r]+\\h+)?nullok \\b' \n/usr/share/pam -configs/*  \nEdit any files returned and remove the nullok  argument for the pam_unix  lines \nExample File:  \nName: Unix authentication  \nDefault: yes  \nPriority: 256  \nAuth-Type: Primary  \nAuth: \n        [success=end default=ignore]    pam_unix.so try_first_pass # < - \n**ensure line does not include nullok nullok**  \nAuth-Initial:  \n        [success=end default=ignore]    pam_unix.so # < - **ensure line does \nnot incl ude nullok nullok**  \nAccount-Type: Primary  \nAccount:  \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so  \nAccount-Initial:  \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so  \nSession-Type: Additional  \nSession:  \n        required        pam_unix.so  \nSession-Initial:  \n        required        pam_unix.so  \nPassword -Type: Primary  \nPassword:  \n        [success=end default=ignore]    pam_unix.so obscure use_authtok \ntry_first_pass yescrypt  \nPassword -Initial:  \n        [success=end d efault=ignore]    pam_unix.so obscure yescrypt  \nRun the following command to update the files in the /etc/pam.d/  directory:  \n# pam-auth-update --enable <EDITED_PROFILE_NAME>  \nExample:  \n# pam-auth-update --enable unix  \nNote:  If custom files are being used, the corresponding files in /etc/pam.d/  would need \nto be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME>  \ncommand skipped#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.4.2": {
        "Title": "Ensure pam_unix does not include remember",
        "Description": "The remember=n  argument saves the last n passwords for each user in \n/etc/security/opasswd  in order to force password change history and keep the user \nfrom alternating between the same password too frequently. The MD5 password hash \nalgorithm is used for storing the old passwords. Instead of this option the pam_pwhistory  \nmodule should be used. The pam_pwhistory  module saves the last n passwords for \neach user in /etc/security/opasswd  using the password hash algorithm set on the \npam_unix  module. This allows for  the yescrypt  or sha512  hash algorithm to be used.",
        "Rationale": "The remember=n  argument should be removed to ensure a strong password hashing \nalgorithm is being used. A stronger hash provides additional protection to the system by \nincreasing the level of effort needed for an attacker to successfully determine local \nuser's old passwo rds stored in /etc/security/opasswd .",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.4.3": {
        "Title": "Ensure pam_unix includes a strong password hashing algorithm",
        "Description": "A cryptographic hash function converts an arbitrary -length input into a fixed length \noutput. Password hashing performs a one -way transformation of a password, turning \nthe password into another string, called the hashed password.  \nThe pam_unix  module can be configured to use one of the following hashing algorithms \nfor user's passwords:  \n• md5 - When a user changes their password next, encrypt it with the MD5 algorithm.  \n• bigcrypt  - When a user changes their password next, encrypt it with the DEC C2  \nalgorithm.  \n• sha256  - When a user changes their password next, encrypt it with the SHA256  \nalgorithm. The SHA256  algorithm must be supported by the crypt(3) function.  \n• sha512  - When a user changes their password next, encrypt it with the SHA512  \nalgorithm. The SHA512  algorithm must be supported by the crypt(3) function.  \n• blowfish  - When a user changes their password next, encrypt it with the \nblowfish  algorithm. The blowfish  algorithm must be supported by the crypt(3) \nfunction.  \n• gost_yescrypt  - When a user changes their password next, encrypt it with the \ngost-yescrypt  algorithm. The gost-yescrypt  algorithm must be supported by the \ncrypt(3) function.  \n• yescrypt  - When a user changes their password next, encrypt it with the \nyescrypt  algorithm. The yescrypt  algorithm must be supported by the crypt(3) \nfunction.",
        "Rationale": "The SHA-512 and yescrypt  algorithms provide a stronger hash than other algorithms \nused by Linux for password hash generation. A stronger hash provides additional \nprotection to the system by increasing the level of effort needed for an attacker to \nsuccessfully determine local user  passwords.  \nNote:  These changes only apply to the local system.  \n   \nInternal Only - General",
        "Remediation": "Run the following command:  \n# grep -PH -- '^\\h*([^#\\n\\r]+\\h+)?pam_unix \\.so\\h+([^#\\n\\r]+\\h+)?remember \\b' \n/usr/share/pam -configs/*  \nEdit any files returned and remove the remember=_<N>_  argument for the pam_unix  lines \nExample output:  \n[success=end default=ignore]   pam_unix.so obscure use_authtok try_first_pass \nyescrypt remember=5 # **< - remove remember=<N>**  \n[success=end default=ignore]   pam_unix.so obscure yescrypt remember=5 # **< - \nremove remember=<N>**  \nRun the following command to update the files in the /etc/pam.d/  directory:  \n# pam-auth-update --enable <EDITED_PROFILE_NAME>  \nExample:  \n# pam-auth-update --enable unix  \nNote:  If custom files are being used, the corresponding files in /etc/pam.d/  would need \nto be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME>  \ncommand skipped  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 5.2 Use Unique Passwords  \n Use unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8 -character password for accounts using MFA and a \n14-character password for accounts not using MFA.  ● ● ● \nv7 4.4 Use Unique Passwords  \n Where multi -factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1003, T1003.008, T1110, \nT1110.002  TA0006  M1041   \nInternal Only - General  5.3.3.4.3 Ensure pam_unix includes a strong password hashing \nalgorithm (Automated)  \nProfile Applicability:  \n•  Level 1 - Server  \n•  Level 1 - Workstation  \nDescription:  \nA cryptographic hash function converts an arbitrary -length input into a fixed length \noutput. Password hashing performs a one -way transformation of a password, turning \nthe password into another string, called the hashed password.  \nThe pam_unix  module can be configured to use one of the following hashing algorithms \nfor user's passwords:  \n• md5 - When a user changes their password next, encrypt it with the MD5 algorithm.  \n• bigcrypt  - When a user changes their password next, encrypt it with the DEC C2  \nalgorithm.  \n• sha256  - When a user changes their password next, encrypt it with the SHA256  \nalgorithm. The SHA256  algorithm must be supported by the crypt(3) function.  \n• sha512  - When a user changes their password next, encrypt it with the SHA512  \nalgorithm. The SHA512  algorithm must be supported by the crypt(3) function.  \n• blowfish  - When a user changes their password next, encrypt it with the \nblowfish  algorithm. The blowfish  algorithm must be supported by the crypt(3) \nfunction.  \n• gost_yescrypt  - When a user changes their password next, encrypt it with the \ngost-yescrypt  algorithm. The gost-yescrypt  algorithm must be supported by the \ncrypt(3) function.  \n• yescrypt  - When a user changes their password next, encrypt it with the \nyescrypt  algorithm. The yescrypt  algorithm must be supported by the crypt(3) \nfunction.  \nRationale:  \nThe SHA-512 and yescrypt  algorithms provide a stronger hash than other algorithms \nused by Linux for password hash generation. A stronger hash provides additional \nprotection to the system by increasing the level of effort needed for an attacker to \nsuccessfully determine local user  passwords.  \nNote:  These changes only apply to the local system.  \n   \nInternal Only - General  Audit:  \nRun the following command to verify that a strong password hashing algorithm is set on \nthe pam_unix.so module:  \n# grep -PH -- \n'^\\h*password \\h+([^#\\n\\r]+)\\h+pam_unix \\.so\\h+([^#\\n\\r]+\\h+)?(sha512|yescrypt)\n\\b' /etc/pam.d/common -password  \nOutput should be similar to:  \n/etc/pam.d/common -password:password   [success=1 default=ignore]   \npam_unix.so obscure use_authtok try_first_pass yescrypt  \nVerify that the line(s) include either sha512  - OR - yescrypt  \n   \nInternal Only - General  Remediation:  \nRun the following command:  \n# awk '/Password -Type:/{ f = 1;next } / -Type:/{ f = 0 } f {if \n(/pam_unix \\.so/) print FILENAME}' /usr/share/pam -configs/*  \nEdit any returned files and edit or add a strong hashing algorithm, either sha512 or \nyescrypt, that meets local site policy to the pam_unix  lines in the Password  section:  \nExample File:  \nName: Unix authentication  \nDefault: yes  \nPriority: 256  \nAuth-Type: Primary # < - Start of \"Auth\" section  \nAuth: \n        [success=end default=ignore]    pam_unix.so try_first_pass  \nAuth-Initial:  \n        [success=end default=ignore]    pam_unix.so  \nAccount-Type: Pr imary # < - Start of \"Account\" section  \nAccount:  \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so  \nAccount-Initial:  \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so  \nSession-Type: Additional  # < - Start of \"Session\" section  \nSession:  \n        required        pam_unix.so  \nSession-Initial:  \n        required        pam_unix.so  \nPassword -Type: Primary # < - Start of \"Password\" section  \nPassword:  \n        [success=end default=ignore]    pam_unix.so obscure use_authtok \ntry_first_pass yescrypt # < - **ensure hashing algorithm is either sha512 or \nyescrypt**  \nPassword -Initial:  \n        [success=end default=ignore]    pam_unix.so obscure yescrypt # < - \n**ensure hashing algorithm is either sha512 or yescrypt**  \nRun the following command to update the files in the /etc/pam.d/  directory:  \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME>  \nExample:  \n# pam-auth-update --enable unix#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.3.3.4.4": {
        "Title": "Ensure pam_unix includes use_authtok",
        "Description": "use_authtok  - When password changing enforce the module to set the new password to \nthe one provided by a previously stacked password module",
        "Rationale": "use_authtok  allows multiple pam modules to confirm a new password before it is \naccepted.",
        "Remediation": "Run the following command:  \n# awk '/Password -Type:/{ f = 1;next } / -Type:/{ f = 0 } f {if \n(/pam_unix \\.so/) print FILENAME}' /usr/share/pam -configs/*  \nEdit any returned files add use_authtok  to the pam_unix  line in the Password  section \nunder Password:  subsection:  \nNote:  The if the file's Password  section includes a Password -Initial:  subsection, \nuse_authtok  should not be added to the pam_unix  line in the Password -Initial:  \nsubsection  \nExample File:  \nName: Unix authentication  \nDefault: yes  \nPriority: 256  \nAuth-Type: Primary # < - Start of \"Auth\" section  \nAuth: \n        [success=end default=ignore]    pam_unix.so try_first_pass  \nAuth-Initial:  \n        [success=end default=ignore]    pam_unix.so  \nAccount-Type: Pr imary # < - Start of \"Account\" section  \nAccount:  \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so  \nAccount-Initial:  \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so  \nSession-Type: Additional  # < - Start of \"Session\" section  \nSession:  \n        required        pam_unix.so  \nSession-Initial:  \n        required        pam_unix.so  \nPassword -Type: Primary # < - Start of \"Password\" section  \nPassword:  \n        [success=end default=ignore]    pam_unix.so obscure use_authtok \ntry_first_pass yescrypt # < - **ensure line includes use_authtok**  \nPassword -Initial:  \n        [success=end default=ignore]    pam_unix.so obscure yescrypt # < - \n**Password -Initial: subsection does not include use_authtok  \nRun the following command to update the files in the /etc/pam.d/  directory:  \n# pam-auth-update --enable < MODIFIED_PROFILE_NAME>  \nExample:  \n# pam-auth-update --enable unix#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.1.1": {
        "Title": "Ensure password expiration is configured",
        "Description": "The PASS_MAX_DAYS  parameter in /etc/login.defs  allows an administrator to force \npasswords to expire once they reach a defined age.  \nPASS_MAX_DAYS  <N> - The maximum number of days a password may be used. If the \npassword is older than this, a password change will be forced. If not specified, -1 will be \nassumed (which disables the restriction).",
        "Rationale": "The window of opportunity for an attacker to leverage compromised credentials or \nsuccessfully compromise credentials via an online brute force attack is limited by the \nage of the password. Therefore, reducing the maximum age of a password also reduces \nan attacker's window of opportunity.  \nWe recommend a yearly password change. This is primarily because for all their good \nintentions users will share credentials across accounts. Therefore, even if a breach is \npublicly identified, the user may not see this notification, or forget they have an account \non that site. This could leave a shared credential vulnerable indefinitely. Having an \norganizational policy of a 1 -year (annual) password expiration is a reasonable \ncompromise to mitigate this with minimal user burden.  \n   \nInternal Only - General  Impact:  \nThe password expiration must be greater than the minimum days between password \nchanges or users will be unable to change their password.  \nExcessive password expiration requirements do more harm than good, because these \nrequirements make users select predictable passwords, composed of sequential words \nand numbers that are closely related to each other. In these cases, the next password \ncan be  predicted based on the previous one (incrementing a number used in the \npassword for example). Also, password expiration requirements offer no containment \nbenefits because attackers will often use credentials as soon as they compromise them. \nInstead, immed iate password changes should be based on key events including, but not \nlimited to:  \n• Indication of compromise  \n• Change of user roles  \n• When a user leaves the organization.  \nNot only does changing passwords every few weeks or months frustrate the user, but \nit’s also been  suggested that it does more harm than good, because it could lead to bad \npractices by the user such as adding a character to the end of their existing password.",
        "Remediation": "Set the PASS_MAX_DAYS  parameter to conform to site policy in /etc/login.defs  : \nPASS_MAX_DAYS 365  \nModify user parameters for all users with a password set to match:  \n# chage --maxdays 365 <user>  \nEdit /etc/login.defs  and set PASS_MAX_DAYS  to a value greater than 0 that follows local \nsite policy:  \nExample:  \nPASS_MAX_DAYS 365  \nRun the following command to modify user parameters for all users with a password set \nto a maximum age no greater than 356 or less than 1 that follows local site policy:  \n# chage --maxdays <N> <user>  \nExample:  \n# awk -F: '($2~/^ \\$.+\\$/) {if($5 > 365 || $5 < 1)system (\"chage --maxdays 365 \n\" $1)}' /etc/shadow  \nDefault Value:  \nPASS_MAX_DAYS 99999#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.1.2": {
        "Title": "Ensure minimum password age is configured (Manual)",
        "Description": "The minimum password age determines the number of days that you must use a \npassword before you can change it.  \nPASS_MIN_DAYS  <N> - The minimum number of days allowed between password \nchanges. Any password changes attempted sooner than this will be rejected. If not \nspecified, 0 will be assumed (which disables the restriction).",
        "Rationale": "Users may have favorite passwords that they like to use because they are easy to \nremember and they believe that their password choice is secure from compromise. \nUnfortunately, passwords are compromised and if an attacker is targeting a specific \nindividual user account, with foreknowledge of data about that user, reuse of old, \npotentially compromised passwords, may cause a security breach.  \nBy restricting the frequency of password changes, an administrator can prevent users \nfrom repeatedly changing their password in an attempt to circumvent password reuse \ncontrols  \nImpact:  \nBy enforcing a minimum password age, a user will be unable to change their password \nif they observe a potential compromise of their password, e.g. \"shoulder surfing\", during \nthe time defined by minimum password age. In this event the user should follow loc al \nsite policy to report a compromised password.  \nIf a users password is set by other personnel as a procedure in dealing with a lost or \nexpired password, the user should be forced to update this \"set\" password with their \nown password. e.g. force \"change at next logon\".  \nIf it is not possible to have a user set their own password immediately, and this \nrecommendation or local site procedure may cause a user to continue using a third \nparty generated password, PASS_MIN_DAYS  for the effected user should be temporally \nchanged to 0, to allow a user to change their password immediately.  \nFor applications where the user is not using the password at console, the ability to \n\"change at next logon\" may be limited. This may cause a user to continue to use a \npassword created by other personnel.   \nInternal Only - General",
        "Remediation": "Edit /etc/login.defs  and set PASS_MIN_DAYS  to a value greater than 0 that follows local \nsite policy:  \nExample:  \nPASS_MIN_DAYS 1  \nRun the following command to modify user parameters for all users with a password set \nto a minimum age greater than zero that follows local site policy:  \n# chage --mindays <N> <user>  \nExample:  \n# awk -F: '($2~/^ \\$.+\\$/) {if($4 < 1)system (\"chage --mindays 1 \" $1)}' \n/etc/shadow  \nDefault Value:  \nPASS_MIN_DAYS 0#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "5.4.1.3": {
        "Title": "Ensure password expiration warning days is configured",
        "Description": "The PASS_WARN_AGE  parameter in /etc/login.defs  allows an administrator to notify \nusers that their password will expire in a defined number of days.  \nPASS_WARN_AGE  <N> - The number of days warning given before a password expires. A \nzero means warning is given only upon the day of expiration, a negative value means \nno warning is given. If not specified, no warning will be provided.",
        "Rationale": "Providing an advance warning that a password will be expiring gives users time to think \nof a secure password. Users caught unaware may choose a simple password or write it \ndown where it may be discovered.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.1.4": {
        "Title": "Ensure strong password hashing algorithm is configured",
        "Description": "A cryptographic hash function converts an arbitrary -length input into a fixed length \noutput. Password hashing performs a one -way transformation of a password, turning \nthe password into another string, called the hashed password.  \nENCRYPT_METHOD  (string) - This defines the system default encryption algorithm for \nencrypting passwords (if no algorithm are specified on the command line). It can take \none of these values:  \n• MD5 - MD5 -based algorithm will be used for encrypting password  \n• SHA256  - SHA256 -based algorithm will be used for encrypting password  \n• SHA512  - SHA512 -based algorithm will be used for encrypting password  \n• BCRYPT  - BCRYPT -based algorithm will be used for encrypting password  \n• YESCRYPT  - YESCRYPT -based algorithm will be used for encrypting password  \n• DES - DES-based algorithm will be used for encrypting password (default)  \nNote:  \n• This parameter overrides the deprecated MD5_CRYPT_ENAB  variable.  \n• This parameter will only affect the generation of group passwords.  \n• The generation of user passwords is done by PAM and subject to the PAM \nconfiguration.  \n• It is recommended to set this variable consistently with the PAM configuration.",
        "Rationale": "The SHA-512 and yescrypt  algorithms provide a stronger hash than other algorithms \nused by Linux for password hash generation. A stronger hash provides additional \nprotection to the system by increasing the level of effort needed for an attacker to \nsuccessfully determine local grou p passwords.  \n   \nInternal Only - General",
        "Remediation": "Edit /etc/login.defs  and set PASS_WARN_AGE  to a value of 7 or more that follows local \nsite policy:  \nExample:  \nPASS_WARN_AGE 7  \nRun the following command to modify user parameters for all users with a password set \nto a minimum warning to 7 or more days that follows local site policy:  \n# chage --warndays <N> <user>  \nExample:  \n# awk -F: '($2~/^ \\$.+\\$/) {if($6 < 7)system (\"chage --warndays 7 \" $1)}' \n/etc/shadow  \nDefault Value:  \nPASS_WARN_AGE 7  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 4.1 Establish and Maintain a Secure Configuration Process  \n Establish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non -computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annuall y, or when significant enterprise changes occur that could \nimpact this Safeguard.  ● ● ● \nv7 4.4 Use Unique Passwords  \n Where multi -factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1078  TA0006  M1027   \nInternal Only - General  5.4.1.4 Ensure strong password hashing algorithm is configured \n(Automated)  \nProfile Applicability:  \n•  Level 1 - Server  \n•  Level 1 - Workstation  \nDescription:  \nA cryptographic hash function converts an arbitrary -length input into a fixed length \noutput. Password hashing performs a one -way transformation of a password, turning \nthe password into another string, called the hashed password.  \nENCRYPT_METHOD  (string) - This defines the system default encryption algorithm for \nencrypting passwords (if no algorithm are specified on the command line). It can take \none of these values:  \n• MD5 - MD5 -based algorithm will be used for encrypting password  \n• SHA256  - SHA256 -based algorithm will be used for encrypting password  \n• SHA512  - SHA512 -based algorithm will be used for encrypting password  \n• BCRYPT  - BCRYPT -based algorithm will be used for encrypting password  \n• YESCRYPT  - YESCRYPT -based algorithm will be used for encrypting password  \n• DES - DES-based algorithm will be used for encrypting password (default)  \nNote:  \n• This parameter overrides the deprecated MD5_CRYPT_ENAB  variable.  \n• This parameter will only affect the generation of group passwords.  \n• The generation of user passwords is done by PAM and subject to the PAM \nconfiguration.  \n• It is recommended to set this variable consistently with the PAM configuration.  \nRationale:  \nThe SHA-512 and yescrypt  algorithms provide a stronger hash than other algorithms \nused by Linux for password hash generation. A stronger hash provides additional \nprotection to the system by increasing the level of effort needed for an attacker to \nsuccessfully determine local grou p passwords.  \n   \nInternal Only - General  Audit:  \nRun the following command to verify the hashing algorithm is sha512  or yescrypt  in \n/etc/login.defs : \n# grep -Pi -- '^\\h*ENCRYPT_METHOD \\h+(SHA512|yescrypt) \\b' /etc/login.defs  \nExample output:  \nENCRYPT_METHOD SHA512  \n - OR - \nENCRYPT_METHOD  YESCRYPT  \nRemediation:  \nEdit /etc/login.defs  and set the ENCRYPT_METHOD  to SHA512  or YESCRYPT : \nENCRYPT_METHOD <HASHING_ALGORITHM>  \nExample:  \nENCRYPT_METHOD YESCRYPT  \nNote:  \n• This only effects local groups' passwords created after updating the file to use \nsha512  or yescrypt . \n• If it is determined that the password algorithm being used is not sha512  or \nyescrypt , once it is changed, it is recommended that all group passwords be \nupdated to use the stronger hashing algorithm.  \n• It is recommended that the chosen hashing algorithm is consistent across \n/etc/login.defs  and the PAM configuration  \nDefault Value:  \nENCRYPT_METHOD SHA512#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.1.5": {
        "Title": "Ensure inactive password lock is configured",
        "Description": "User accounts that have been inactive for over a given period of time can be \nautomatically disabled.  \nINACTIVE  - Defines the number of days after the password exceeded its maximum age \nwhere the user is expected to replace this password.  \nThe value is stored in the shadow password file. An input of 0 will disable an expired \npassword with no delay. An input of -1 will blank the respective field in the shadow \npassword file.",
        "Rationale": "Inactive accounts pose a threat to system security since the users are not logging in to \nnotice failed login attempts or other anomalies.",
        "Remediation": "Run the following command to set the default password inactivity period to 45 days or \nless that meets local site policy:  \n# useradd -D -f <N> \nExample:  \n# useradd -D -f 45 \nRun the following command to modify user parameters for all users with a password set \nto a inactive age of 45 days or less that follows local site policy:  \n# chage --inactive <N> <user>  \nExample:  \n# awk -F: '($2~/^ \\$.+\\$/) {if($7 > 45 || $7 < 0)system (\"chage --inactive 45 \n\" $1)}' /etc/shadow  \nDefault Value:  \nINACTIVE= -1#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.1.6": {
        "Title": "Ensure all users last password change date is in the past",
        "Description": "All users should have a password change date in the past.",
        "Rationale": "If a user's recorded password change date is in the future, then they could bypass any \nset password expiration.",
        "Remediation": "Investigate any users with a password change date in the future and correct them. \nLocking the account, expiring the password, or resetting the password manually may be \nappropriate.  \n   \nInternal Only - General  CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 5.2 Use Unique Passwords  \n Use unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8 -character password for accounts using MFA and a \n14-character password for accounts not using MFA.  ● ● ● \nv7 4.4 Use Unique Passwords  \n Where multi -factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1078, T1078.001, \nT1078.002, T1078.003, \nT1078.004, T1110, \nT1110.001, T1110.002, \nT1110.003, T1110.004#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.2.1": {
        "Title": "Ensure root is the only UID 0 account",
        "Description": "Any account with UID 0 has superuser privileges on the system.",
        "Rationale": "This access must be limited to only the default root account and only from the system \nconsole. Administrative access must be through an unprivileged account using an \napproved mechanism as noted in Item 5.6 Ensure access to the su command is \nrestricted.",
        "Remediation": "Run the following command to change the root account UID to 0: \n# usermod -u 0 root  \nModify any users other than root with UID 0 and assign them a new UID.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.2.3": {
        "Title": "Ensure group root is the only GID 0 group",
        "Description": "The groupmod  command can be used to specify which group the root group belongs to. \nThis affects permissions of files that are group owned by the root group.",
        "Rationale": "Using GID 0 for the root group helps prevent root group owned files from accidentally \nbecoming accessible to non -privileged users.",
        "Remediation": "Run the following command to set the root group's GID to 0: \n# groupmod -g 0 root  \nRemove any groups other than the root group with GID 0 or assign them a new GID if \nappropriate.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.2.4": {
        "Title": "Ensure root password is set",
        "Description": "There are a number of methods to access the root account directly. Without a password \nset any user would be able to gain access and thus control over the entire system.",
        "Rationale": "Access to root should be secured at all times.  \nImpact:  \nIf there are any automated processes that relies on access to the root account without \nauthentication, they will fail after remediation.",
        "Remediation": "Run the following command to set a password for the root user:  \n# passwd root  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 3.3 Configure Data Access Control Lists  \n Configure data access control lists based on a user’s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications.  ● ● ● \nv7 14.6 Protect Information through Access Control Lists  \n Protect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation base d on their need to access the information as a part of their \nresponsibilities.  ● ● ●#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.2.5": {
        "Title": "Ensure root path integrity",
        "Description": "The root user can execute any command on the system and could be fooled into \nexecuting programs unintentionally if the PATH is not set correctly.",
        "Rationale": "Including the current working directory (.) or other writable directory in root's executable \npath makes it likely that an attacker can gain superuser access by forcing an \nadministrator operating as root to execute a Trojan horse program.  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.2.6": {
        "Title": "Ensure root user umask is configured",
        "Description": "The user file -creation mode mask ( umask ) is used to determine the file permission for \nnewly created directories and files. In Linux, the default permissions for any newly \ncreated directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-\nrw-). The umask  modifies the default Linux permissions by restricting (masking) these \npermissions. The umask  is not simply subtracted, but is processed bitwise. Bits set in the \numask  are cleared in the resulting file mode.  \numask  can be set with either Octal  or Symbolic  values:  \n• Octal  (Numeric) Value - Represented by either three or four digits. ie umask 0027  \nor umask 027 . If a four digit umask is used, the first digit is ignored. The remaining \nthree digits effect the resulting permissions for user, group, and world/other \nrespectively.  \n• Symbolic  Value - Represented by a comma separated list for User u, group g, \nand world/other o. The permissions listed are not masked by umask . ie a umask  \nset by umask u=rwx,g=rx,o=  is the Symbolic  equivalent of the Octal  umask 027 . \nThis umask  would set a newly created directory with file mode drwxr-x--- and a \nnewly created file with file mode rw-r----- . \nroot user Shell Configuration Files:  \n• /root/.bash_profile  - Is executed to configure the root users' shell before the \ninitial command prompt. Is only read by login shells.   \n• /root/.bashrc  - Is executed for interactive shells. only read by a shell that's \nboth interactive and non -login   \numask  is set by order of precedence. If umask  is set in multiple locations, this order of \nprecedence will determine the system's default umask . \nOrder of precedence:  \n1. /root/.bash_profile   \n2. /root/.bashrc   \n3. The system default umask   \nInternal Only - General",
        "Rationale": "Setting a secure value for umask  ensures that users make a conscious choice about \ntheir file permissions. A permissive umask  value could result in directories or files with \nexcessive permissions that can be read and/or written to by unauthorized users.",
        "Remediation": "Correct or justify any:  \n• Locations that are not directories  \n• Empty directories ( ::) \n• Trailing ( :) \n• Current working directory ( .) \n• Non root owned directories  \n• Directories that less restrictive than mode 0755#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.2.7": {
        "Title": "Ensure system accounts do not have a valid login shell",
        "Description": "There are a number of accounts provided with most distributions that are used to \nmanage applications and are not intended to provide an interactive shell. Furthermore, \na user may add special accounts that are not intended to provide an interactive shell.",
        "Rationale": "It is important to make sure that accounts that are not being used by regular users are \nprevented from being used to provide an interactive shell. By default, most distributions \nset the password field for these accounts to an invalid string, but it is also  recommended \nthat the shell field in the password file be set to the nologin  shell. This prevents the \naccount from potentially being used to run any commands.",
        "Remediation": "Run the following command to set the shell for any service accounts returned by the \naudit to nologin : \n# usermod -s $(command -v nologin) <user>  \nExample script:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.2.8": {
        "Title": "Ensure accounts without a valid login shell are locked",
        "Description": "There are a number of accounts provided with most distributions that are used to \nmanage applications and are not intended to provide an interactive shell. Furthermore, \na user may add special accounts that are not intended to provide an interactive shell.",
        "Rationale": "It is important to make sure that accounts that are not being used by regular users are \nprevented from being used to provide an interactive shell. By default, most distributions \nset the password field for these accounts to an invalid string, but it is also  recommended \nthat the shell field in the password file be set to the nologin  shell. This prevents the \naccount from potentially being used to run any commands.",
        "Remediation": "Run the following command to lock any non -root accounts without a valid login shell \nreturned by the audit:  \n# usermod -L <user>  \nExample script: : \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "5.4.3.1": {
        "Title": "Ensure nologin is not listed in /etc/shells",
        "Description": "/etc/shells  is a text file which contains the full pathnames of valid login shells. This file \nis consulted by chsh and available to be queried by other programs.  \nBe aware that there are programs which consult this file to find out if a user is a normal \nuser; for example, FTP daemons traditionally disallow access to users with shells not \nincluded in this file.",
        "Rationale": "A user can use chsh to change their configured shell.  \nIf a user has a shell configured that isn't in in /etc/shells , then the system assumes \nthat they're somehow restricted. In the case of chsh it means that the user cannot \nchange that value.  \nOther programs might query that list and apply similar restrictions.  \nBy putting nologin  in /etc/shells , any user that has nologin  as its shell is considered \na full, unrestricted user. This is not the expected behavior for nologin .",
        "Remediation": "Edit /etc/shells  and remove any lines that include nologin#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "5.4.3.3": {
        "Title": "Ensure default user umask is configured",
        "Description": "The user file -creation mode mask ( umask ) is used to determine the file permissi on for \nnewly created directories and files. In Linux, the default permissions for any newly \ncreated directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-\nrw-). The umask  modifies the default Linux permissions by restricting (masking) these \npermissions. The umask  is not simply subtracted, but is processed bitwise. Bits set in the \numask  are cleared in the resulting file mode.  \numask  can be set with either Octal  or Symbolic  values:  \n• Octal  (Numeric) Value - Represented by either three or four digits. ie umask 0027  \nor umask 027 . If a four digit umask is used, the first digit is ignored. The remaining \nthree digits effect the resulting permissions for user, group, and world/other \nrespectively.  \n• Symbolic  Value - Represented by a comma separated list for User u, group g, \nand world/other o. The permissions listed are not masked by umask . ie a umask  \nset by umask u=rwx,g=rx,o=  is the Symbolic  equivalent of the Octal  umask 027 . \nThis umask  would set a newly created directory with file mode drwxr-x--- and a \nnewly created file with file mode rw-r----- . \nThe default umask  can be set to use the pam_umask  module or in a System Wide Shell \nConfiguration File . The user creating the directories or files has the discretion of \nchanging the permissions via the chmod command, or choosing a different default \numask  by adding the umask  command into a User Shell Configuration File , ( \n.bash_profile  or .bashrc ), in their home directory.  \n   \nInternal Only - General  Setting the default umask:  \n• pam_umask module:  \no will set the umask according to the system default in /etc/login.defs  and \nuser settings, solving the problem of different umask  settings with different \nshells, display managers, remote sessions etc.  \no umask=<mask>  value in the /etc/login.defs  file is interpreted as Octal  \no Setting USERGROUPS_ENAB  to yes in /etc/login.defs  (default):  \n▪ will enable setting of the umask  group bits to be the same as owner \nbits. (examples: 022 -> 002, 077 -> 007) for non -root users, if the \nuid is the same as gid, and username  is the same as the <primary \ngroup name>   \n▪ userdel will remove the user's group if it contains no more \nmembers, and useradd will create by default a group with the name \nof the user  \n• System Wide Shell Configuration File :  \no /etc/profile  - used to set system wide environmental variables on users \nshells. The variables are sometimes the same ones that are in the \n.bash_profile , however this file is used to set an initial PATH or PS1 for \nall shell users of the system. is only executed for interactive login  \nshells, or shells executed with the --login parameter.   \no /etc/profile.d  - /etc/profile  will execute the scripts within \n/etc/profile.d/*.sh . It is recommended to place your configuration in a \nshell script within /etc/profile.d  to set your own system wide \nenvironmental variables.  \no /etc/bashrc  - System wide version of .bashrc . In Fedora derived \ndistributions, etc/bashrc  also invokes /etc/profile.d/*.sh if non-login  shell, \nbut redirects output to /dev/null  if non-interactive.  Is only executed for \ninteractive  shells or if BASH_ENV  is set to /etc/bashrc .  \nUser Shell Configuration Files:  \n• ~/.bash_profile  - Is executed to configure your shell before the initial command \nprompt. Is only read by login shells.   \n• ~/.bashrc  - Is executed for interactive shells. only read by a shell that's both \ninteractive and non -login   \numask  is set by order of precedence. If umask  is set in multiple locations, this order of \nprecedence will determine the system's default umask . \n   \nInternal Only - General  Order of precedence:  \n1. A file in /etc/profile.d/  ending in .sh - This will override any other system -wide \numask  setting  \n2. In the file /etc/profile   \n3. On the pam_umask.so  module in /etc/pam.d/postlogin   \n4. In the file /etc/login.defs   \n5. In the file /etc/default/login",
        "Rationale": "Setting a secure default value for umask  ensures that users make a conscious choice \nabout their file permissions. A permissive umask  value could result in directories or files \nwith excessive permissions that can be read and/or written to by unauthorized users.  \n   \nInternal Only - General",
        "Remediation": "Run the following script and perform the instructions in the output:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.1.1": {
        "Title": "Ensure AIDE is installed",
        "Description": "AIDE takes a snapshot of filesystem state including modification times, permissions, \nand file hashes which can then be used to compare against the current state of the \nfilesystem to detect modifications to the system.",
        "Rationale": "By monitoring the filesystem state compromised files can be detected to prevent or limit \nthe exposure of accidental or malicious misconfigurations or modified binaries.",
        "Remediation": "Install AIDE using the appropriate package manager or manual installation:  \n# apt install aide aide -common \nConfigure AIDE as appropriate for your environment. Consult the AIDE documentation \nfor options.  \nRun the following commands to initialize AIDE:  \n# aideinit  \n# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.1.2": {
        "Title": "Ensure filesystem integrity is regularly checked",
        "Description": "Periodic checking of the filesystem integrity is needed to detect changes to the \nfilesystem.",
        "Rationale": "Periodic file checking allows the system administrator to determine on a regular basis if \ncritical files have been changed in an unauthorized fashion.",
        "Remediation": "If cron will be used to schedule and run aide check:  \nRun the following command:  \n# crontab -u root -e \nAdd the following line to the crontab:  \n0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --update \n- OR - If aidecheck.service and aidecheck.timer will be used to schedule and run aide \ncheck:  \nCreate or edit the file /etc/systemd/system/aidecheck.service  and add the following \nlines:  \n[Unit] \nDescription=Aide Check  \n \n[Service]  \nType=simple  \nExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --update \n \n[Install]  \nWantedBy=multi -user.target  \nCreate or edit the file /etc/systemd/system/aidecheck.timer  and add the following \nlines:  \n[Unit] \nDescription=Aide check every day at 5AM  \n \n[Timer] \nOnCalendar=* -*-* 05:00:00  \nUnit=aidecheck.service  \n \n[Install]  \nWantedBy=multi -user.target  \nRun the following commands:  \n# chown root:root /etc/systemd/system/aidecheck.*  \n# chmod 0644 /etc/systemd/system/aidecheck.*  \n \n# systemctl daemon -reload \n \n# systemctl enable aidecheck.service  \n# systemctl --now enable aidecheck.timer#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.1.3": {
        "Title": "Ensure cryptographic mechanisms are used to protect the integrity of audit tools",
        "Description": "Audit tools include, but are not limited to, vendor -provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting the integrity of the tools used for auditing purposes is a critical step toward \nensuring the integrity of audit information. Audit information includes all information \n(e.g., audit records, audit settings, and audit reports) needed to successful ly audit \ninformation system activity.  \nAttackers may replace the audit tools or inject code into the existing tools with the \npurpose of providing the capability to hide or erase system activity from the audit logs.  \nAudit tools should be cryptographically signed in order to provide the capability to \nidentify when the audit tools have been modified, manipulated, or replaced. An example \nis a checksum hash of the file or files.",
        "Remediation": "Edit /etc/aide/aide.conf  and add or update the following selection lines:  \n# Audit Tools  \n/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512  \n/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512  \n/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512  \n/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512  \n/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512  \n/sbin/augenrules p+ i+n+u+g+s+b+acl+xattrs+sha512  \nNote: - IF - /etc/aide/aide.conf  includes a @@x_include  statement:  \nExample:  \n@@x_include /etc/aide/aide.conf.d ^[a -zA-Z0-9_-]+$ \n• @@x_include  FILE  \n• @@x_include  DIRECTORY REGEX  \no  \n@x_include  is identical to @@include , except that if a config file is \nexecutable it is run and the output is used as config.  \no If the executable file exits with status greater than zero or writes to stderr \naide stops with an error.  \no For security reasons DIRECTORY and each executable config file must \nbe owned by the current user and must not be group or world -writable.#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.2.1.1.1": {
        "Title": "Ensure journald service is enabled and active",
        "Description": "Ensure that the systemd-journald  service is enabled to allow capturing of logging \nevents.",
        "Rationale": "If the systemd-journald  service is not enabled to start on boot, the system will not \ncapture logging events.",
        "Remediation": "Run the following commands to unmask and start systemd-journald.service  \n# systemctl unmask systemd -journald.service  \n# systemctl start systemd -journald.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.1.2": {
        "Title": "Ensure journald log file access is configured (Manual)",
        "Description": "Journald will create logfiles that do not already exist on the system. This setting controls \nwhat permissions will be applied to these newly created files.",
        "Rationale": "It is important to ensure that log files have the correct permissions to ensure that \nsensitive data is archived and protected.",
        "Remediation": "If the default configuration is not appropriate for the site specific requirements, copy \n/usr/lib/tmpfiles.d/systemd.conf  to /etc/tmpfiles.d/systemd.conf  and modify as \nrequired. Requirements is either 0640 or site policy if that is less restrictive.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.1.3": {
        "Title": "Ensure journald log file rotation is configured (Manual)",
        "Description": "Journald includes the capability of rotating log files regularly to avoid filling up the \nsystem with logs or making the logs unmanageably large. The file \n/etc/systemd/journald.conf  is the configuration file used to specify how logs \ngenerated by Journald should be rotated.",
        "Rationale": "By keeping the log files smaller and more manageable, a system administrator can \neasily archive these files to another system and spend less time looking through \ninordinately large log files.",
        "Remediation": "Edit /etc/systemd/journald.conf  or a file ending in .conf  the \n/etc/systemd/journald.conf.d/  directory. Set the following parameters in the \n[Journal]  section to ensure logs are rotated according to site policy. The settings \nshould be carefully understood as there are specific edge cases and prioritization of \nparameters.  \nThe specific parameters for log rotation are:  \nSystemMaxUse=  \nSystemKeepFree=  \nRuntimeMaxUse=  \nRuntimeKeepFree=  \nMaxFileSec=  \nNote:  If these settings appear in a canonically later file, or later in the same file, the \nsetting will be overwritten#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.1.4": {
        "Title": "Ensure journald ForwardToSyslog is disabled",
        "Description": "Data from journald  should be kept in the confines of the service and not forwarded to \nother services.",
        "Rationale": "Logs of the system should be handled by journald  and not forwarded to other logging \nmechanisms.  \n   \nInternal Only - General",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.1.5": {
        "Title": "Ensure journald Storage is configured",
        "Description": "Data from journald may be stored in volatile memory or persisted locally on the server. \nLogs in memory will be lost upon a system reboot. By persisting logs to local disk on the \nserver they are protected from loss due to a reboot.",
        "Rationale": "Writing log data to disk will provide the ability to forensically reconstruct events which \nmay have impacted the operations or security of a system even after a system crash or \nreboot.  \n   \nInternal Only - General",
        "Remediation": "Set the following parameter in the [Journal]  section in /etc/systemd/journald.conf  or \na file in /etc/systemd/journald.conf.d/  ending in .conf : \nStorage=persistent  \nExample:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.1.6": {
        "Title": "Ensure journald Compress is configured",
        "Description": "The journald system includes the capability of compressing overly large files to avoid \nfilling up the system with logs or making the logs unmanageably large.",
        "Rationale": "Uncompressed large files may unexpectedly fill a filesystem leading to resource \nunavailability. Compressing logs prior to write can prevent sudden, unexpected \nfilesystem impacts.  \n   \nInternal Only - General",
        "Remediation": "Set the following parameter in the [Journal]  section in /etc/systemd/journald.conf  or \na file in /etc/systemd/journald.conf.d/  ending in .conf : \nCompress=yes  \nExample:  \n#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.2.1": {
        "Title": "Ensure systemd -journal -remote is installed",
        "Description": "Journald systemd-journal-remote  supports the ability to send log events it gathers to a \nremote log host or to receive messages from remote hosts, thus enabling centralized \nlog management.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system.",
        "Remediation": "Run the following command to install systemd-journal-remote : \n# apt install systemd -journal-remote#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.2.2": {
        "Title": "Ensure systemd -journal -remote authentication is configured (Manual)",
        "Description": "Journald systemd-journal-upload  supports the ability to send log events it gathers to a \nremote log host.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.2.3": {
        "Title": "Ensure systemd -journal -upload is enabled and active",
        "Description": "Journald systemd-journal-upload  supports the ability to send log events it gathers to a \nremote log host.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system.",
        "Remediation": "Edit the /etc/systemd/journal -upload.conf  file or a file in /etc/systemd/journal -\nupload.conf.d  ending in .conf  and ensure the following lines are set in the [Upload]  \nsection per your environment:  \n[Upload]  \nURL=192.168.50.42  \nServerKeyFile=/etc/ssl/private/journal -upload.pem  \nServerCertificateFile=/etc/ssl/certs/journal -upload.pem  \nTrustedCertificateFile=/etc/ssl/ca/trusted.pem  \nRestart the service:  \n# systemctl restart systemd -journal-upload#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.1.2.4": {
        "Title": "Ensure systemd -journal -remote service is not in use",
        "Description": "Journald systemd-journal-remote  supports the ability to receive messages from remote \nhosts, thus acting as a log server. Clients should not receive data from other hosts.  \nNOTE:  \n• The same package, systemd-journal-remote , is used for both sending logs to \nremote hosts and receiving incoming logs.  \n• With regards to receiving logs, there are two services; systemd-journal-\nremote.socket  and systemd-journal-remote.service .",
        "Rationale": "If a client is configured to also receive data, thus turning it into a server, the client \nsystem is acting outside it's operational boundary.",
        "Remediation": "Run the following commands to stop and mask systemd-journal-remote.socket  and \nsystemd -journal -remote.service:  \n# systemctl stop systemd -journal-remote.socket systemd -journal-remote.service  \n# systemctl mask systemd -journal-remote.socket systemd -journal-remote.service#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.2.2.1": {
        "Title": "Ensure access to all logfiles has been configured",
        "Description": "Log files contain information from many services on the the local system, or in the event \nof a centralized log server, others systems logs as well.  \nIn general log files are found in /var/log/ , although application can be configured to \nstore logs elsewhere. Should your application store logs in another, ensure to run the \nsame test on that location.",
        "Rationale": "It is important that log files have the correct permissions to ensure that sensitive data is \nprotected and that only the appropriate users / groups have access to them.",
        "Remediation": "Run the following script to update permissions and ownership on files in /var/log . \nAlthough the script is not destructive, ensure that the output of the audit procedure is \ncaptured in the event that the remediation causes issues.   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "6.3.1.1": {
        "Title": "Ensure auditd packages are installed",
        "Description": "auditd is the userspace component to the Linux Auditing System. It's responsible for \nwriting audit records to the disk",
        "Rationale": "The capturing of system events provides system administrators with information to allow \nthem to determine if unauthorized access to their system is occurring.",
        "Remediation": "Run the following command to Install auditd  and audispd-plugins  \n# apt install auditd audispd -plugins#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.1.2": {
        "Title": "Ensure auditd service is enabled and active",
        "Description": "Turn on the auditd  daemon to record system events.",
        "Rationale": "The capturing of system events provides system administrators with information to allow \nthem to determine if unauthorized access to their system is occurring.",
        "Remediation": "Run the following commands to unmask, enable and start auditd : \n# systemctl unmask auditd  \n# systemctl enable auditd  \n# systemctl start auditd#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.1.3": {
        "Title": "Ensure auditing for processes that start prior to auditd is enabled",
        "Description": "Configure grub2  so that processes that are capable of being audited can be audited \neven if they start up prior to auditd  startup.",
        "Rationale": "Audit events need to be captured on processes that start up prior to auditd  , so that \npotential malicious activity cannot go undetected.",
        "Remediation": "Edit /etc/default/grub  and add audit=1  to GRUB_CMDLINE_LINUX : \nExample:  \nGRUB_CMDLINE_LINUX=\"audit=1\"  \nRun the following command to update the grub2  configuration:  \n# update -grub#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.1.4": {
        "Title": "Ensure audit_backlog_limit is sufficient",
        "Description": "In the kernel -level audit subsystem, a socket buffer queue is used to hold audit events. \nWhenever a new audit event is received, it is logged and prepared to be added to this \nqueue.  \nThe kernel boot parameter audit_backlog_limit=N , with N representing the amount of \nmessages, will ensure that a queue cannot grow beyond a certain size. If an audit event \nis logged which would grow the queue beyond this limit, then a failure occurs and is \nhandled according to the system configuration",
        "Rationale": "If an audit event is logged which would grow the queue beyond the \naudit_backlog_limit , then a failure occurs, auditd records will be lost, and potential \nmalicious activity could go undetected.",
        "Remediation": "Edit /etc/default/grub  and add audit_backlog_limit=N  to GRUB_CMDLINE_LINUX. \nThe recommended size for N is 8192 or larger.  \nExample:  \nGRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\"  \nRun the following command to update the grub2  configuration:  \n# update -grub \nDefault Value:  \nif audit_backlog_limit  is not set, the system defaults to audit_backlog_limit=64#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.2.1": {
        "Title": "Ensure audit log storage size is configured",
        "Description": "Configure the maximum size of the audit log file. Once the log reaches the maximum \nsize, it will be rotated and a new log file will be started.",
        "Rationale": "It is important that an appropriate size is determined for log files so that they do not \nimpact the system and audit data is not lost.",
        "Remediation": "Set the following parameter in /etc/audit/auditd.conf  in accordance with site policy:  \nmax_log_file = <MB>  \nDefault Value:  \nmax_log_file = 8#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.2.2": {
        "Title": "Ensure audit logs are not automatically deleted",
        "Description": "The max_log_file_action  setting determines how to handle the audit log file reaching \nthe max file size. A value of keep_logs  will rotate the logs but never delete old logs.",
        "Rationale": "In high security contexts, the benefits of maintaining a long audit history exceed the cost \nof storing the audit history.",
        "Remediation": "Set the following parameter in /etc/audit/auditd.conf:  \nmax_log_file_action = keep_logs#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.2.3": {
        "Title": "Ensure system is disabled when audit logs are full",
        "Description": "The auditd  daemon can be configured to halt the system or put the system in single \nuser mode, if no free space is available or an error is detected on the partition that holds \nthe audit log files.  \nThe disk_full_action  parameter tells the system what action to take when no free \nspace is available on the partition that holds the audit log files. Valid values are ignore , \nsyslog , rotate , exec, suspend , single , and halt. \n• ignore , the audit daemon will issue a syslog message but no other action is \ntaken  \n• syslog , the audit daemon will issue a warning to syslog  \n• rotate , the audit daemon will rotate logs, losing the oldest to free up space  \n• exec, /path -to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action  \n• suspend , the audit daemon will stop writing records to the disk  \n• single , the audit daemon will put the computer system in single user mode  \n• halt, the audit daemon will shut down the system  \nThe disk_error_action  parameter tells the system what action to take when an error is \ndetected on the partition that holds the audit log files. Valid values are ignore , syslog , \nexec, suspend , single , and halt. \n• ignore , the audit daemon will not take any action  \n• syslog , the audit daemon will issue no more than 5 consecutive warnings to \nsyslog  \n• exec, /path -to-script will execute the script. You cannot pass parameters to the \nscript  \n• suspend , the audit daemon will stop writing records to the disk  \n• single , the audit daemon will put the computer system in single user mode  \n• halt, the audit daemon will shut down the system",
        "Rationale": "In high security contexts, the risk of detecting unauthorized access or nonrepudiation \nexceeds the benefit of the system's availability.   \nInternal Only - General  Impact:  \ndisk_full_action  parameter:  \n• Set to halt - the auditd  daemon will shutdown the system when the disk partition \ncontaining the audit logs becomes full.  \n• Set to single  - the auditd  daemon will put the computer system in single user \nmode when the disk partition containing the audit logs becomes full.  \ndisk_error_action  parameter:  \n• Set to halt - the auditd  daemon will shutdown the system when an error is \ndetected on the partition that holds the audit log files.  \n• Set to single  - the auditd  daemon will put the computer system in single user \nmode when an error is detected on the partition that holds the audit log files.  \n• Set to syslog  - the auditd  daemon will issue no more than 5 consecutive \nwarnings to syslog when an error is detected on the partition that holds the audit \nlog files.",
        "Remediation": "",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.2.4": {
        "Title": "Ensure system warns when audit logs are low on space",
        "Description": "The auditd  daemon can be configured to halt the system, put the system in single user \nmode or send a warning message, if the partition that holds the audit log files is low on \nspace.  \nThe space_left_action  parameter tells the system what action to take when the system \nhas detected that it is starting to get low on disk space. Valid values are ignore , syslog , \nrotate , email , exec, suspend , single , and halt. \n• ignore , the audit daemon does nothing  \n• syslog , the audit daemon will issue a warning to syslog  \n• rotate , the audit daemon will rotate logs, losing the oldest to free up space  \n• email , the audit daemon will send a warning to the email account specified in \naction_mail_acct  as well as sending the message to syslog  \n• exec, /path -to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action  \n• suspend , the audit daemon will stop writing records to the disk  \n• single , the audit daemon will put the computer system in single user mode  \n• halt, the audit daemon will shut down the system  \nThe admin_space_left_action  parameter tells the system what action to take when the \nsystem has detected that it is low on disk space. Valid values are ignore , syslog , \nrotate , email , exec, suspend , single , and halt. \n• ignore , the audit daemon does nothing  \n• syslog , the audit daemon will issue a warning to syslog  \n• rotate , the audit daemon will rotate logs, losing the oldest to free up space  \n• email , the audit daemon will send a warning to the email account specified in \naction_mail_acct  as well as sending the message to syslog  \n• exec, /path -to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action  \n• suspend , the audit daemon will stop writing records to the disk  \n• single , the audit daemon will put the computer system in single user mode  \n• halt, the audit daemon will shut down the system   \nInternal Only - General",
        "Rationale": "In high security contexts, the risk of detecting unauthorized access or nonrepudiation \nexceeds the benefit of the system's availability.  \nImpact:  \nIf the admin_space_left_action  is set to single  the audit daemon will put the computer \nsystem in single user mode.",
        "Remediation": "Set one of the following parameters in /etc/audit/auditd.conf  depending on your local \nsecurity policies.  \ndisk_full_action = <halt|single>  \ndisk_error_action = <syslog|single|halt>  \nExample:  \ndisk_full_action = halt  \ndisk_error_action = halt#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.1": {
        "Title": "Ensure changes to system administration scope (sudoers) is collected",
        "Description": "Monitor scope changes for system administrators. If the system has been properly \nconfigured to force system administrators to log in as themselves first and then use the \nsudo command to execute privileged commands, it is possible to monitor changes in \nscope. The file /etc/sudoers , or files in /etc/sudoers.d , will be written to when the \nfile(s) or related attributes have changed. The audit records will be tagged with the \nidentifier \"scope\".",
        "Rationale": "Changes in the /etc/sudoers  and /etc/sudoers.d  files can indicate that an \nunauthorized change has been made to the scope of system administrator activity.  \n   \nInternal Only - General",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor scope changes for system administrators.  \nExample:  \n# printf '%s \\n' \"-w /etc/sudoers -p wa -k scope\" \" -w /etc/sudoers.d -p wa -k \nscope\" >> /etc/audit/rules.d/50 -scope.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.10": {
        "Title": "Ensure successful file system mounts are collected",
        "Description": "Monitor the use of the mount  system call. The mount  (and umount  ) system call controls \nthe mounting and unmounting of file systems. The parameters below configure the \nsystem to create an audit record when the mount system call is used by a non -\nprivileged user",
        "Rationale": "It is highly unusual for a non privileged user to mount  file systems to the system. While \ntracking mount  commands gives the system administrator evidence that external media \nmay have been mounted (based on a review of the source of the mount and confirming \nit's an external media type), it does not conclusively indicate that data was exported to \nthe media. Sy stem administrators who wish to determine if data were exported, would \nalso have to track successful open, creat  and truncate  system calls requiring write \naccess to a file under the mount point of the externa l media file system. This could give \na fair indication that a write occurred. The only way to truly prove it, would be to track \nsuccessful writes to the external media. Tracking write system calls could quickly fill up \nthe audit log and is not recommended.  Recommendations on configuration options to \ntrack data export to media is beyond the scope of this document.  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful file system mounts.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k \nmounts \n-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k \nmounts \n\" >> /etc/audit/rules.d/50 -mounts.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.11": {
        "Title": "Ensure session initiation information is collected",
        "Description": "Monitor session initiation events. The parameters in this section track changes to the \nfiles associated with session events.  \n• /var/run/utmp  - tracks all currently logged in users.  \n• /var/log/wtmp  - file tracks logins, logouts, shutdown, and reboot events.  \n• /var/log/btmp  - keeps track of failed login attempts and can be read by entering \nthe command /usr/bin/last -f /var/log/btmp . \nAll audit records will be tagged with the identifier \"session.\"",
        "Rationale": "Monitoring these files for changes could alert a system administrator to logins occurring \nat unusual hours, which could indicate intruder activity (i.e. a user logging in at a time \nwhen they do not normally log in).  \n   \nInternal Only - General",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor session initiation information.  \nExample:  \n# printf \"  \n-w /var/run/utmp -p wa -k session  \n-w /var/log/wtmp -p wa -k session  \n-w /var/log/btmp -p wa -k session  \n\" >> /etc/audit/rules.d/50 -session.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.12": {
        "Title": "Ensure login and logout events are collected",
        "Description": "Monitor login and logout events. The parameters below track changes to files \nassociated with login/logout events.  \n• /var/log/lastlog  - maintain records of the last time a user successfully logged \nin. \n• /var/run/faillock  - directory maintains records of login failures via the \npam_faillock  module.",
        "Rationale": "Monitoring login/logout events could provide a system administrator with information \nassociated with brute force attacks against user logins.  \n   \nInternal Only - General",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor login and logout events.  \nExample:  \n# printf \"  \n-w /var/log/lastlog -p wa -k logins  \n-w /var/run/faillock -p wa -k logins  \n\" >> /etc/audit/rules.d/50 -login.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \" Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.13": {
        "Title": "Ensure file deletion events by users are collected",
        "Description": "Monitor the use of system calls associated with the deletion or renaming of files and file \nattributes. This configuration statement sets up monitoring for:  \n• unlink  - remove a file  \n• unlinkat  - remove a file attribute  \n• rename  - rename a file  \n• renameat  rename a file attribute system calls and tags them with the identifier \n\"delete\".",
        "Rationale": "Monitoring these calls from non -privileged users could provide a system administrator \nwith evidence that inappropriate removal of files and file attributes associated with \nprotected files is occurring. While this audit option will look at all events, syste m \nadministrators will want to look for specific privileged files that are being deleted or \naltered.  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor file deletion events by users.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F \nauid>=${UID_MIN} -F auid!=unset -F key=delete  \n-a always,exit -F arch=b32 -S rename,unlink,unlinkat ,renameat -F \nauid>=${UID_MIN} -F auid!=unset -F key=delete  \n\" >> /etc/audit/rules.d/50 -delete.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.14": {
        "Title": "Ensure events that modify the system's Mandatory Access Controls are collected",
        "Description": "Monitor AppArmor, an implementation of mandatory access controls. The parameters \nbelow monitor any write access (potential additional, deletion or modification of files in \nthe directory) or attribute changes to the /etc/apparmor/  and /etc/apparmor.d/  \ndirectories.  \nNote:  If a different Mandatory Access Control method is used, changes to the \ncorresponding directories should be audited.",
        "Rationale": "Changes to files in the /etc/apparmor/  and /etc/apparmor.d/  directories could indicate \nthat an unauthorized user is attempting to modify access controls and change security \ncontexts, leading to a compromise of the system.  \n   \nInternal Only - General",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify the system's Mandatory Access \nControls.  \nExample:  \n# printf \"  \n-w /etc/apparmor/ -p wa -k MAC-policy \n-w /etc/apparmor.d/ -p wa -k MAC-policy \n\" >> /etc/audit/rules.d/50 -MAC-policy.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.15": {
        "Title": "Ensure successful and unsuccessful attempts to use the chcon command are recorded",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe chcon  command.",
        "Rationale": "The chcon  command is used to change file security context. Without generating audit \nrecords that are specific to the security and mission needs of the organization, it would \nbe difficult to establish, correlate, and investigate the events relating to an incident or  \nidentify those responsible for one.  \nAudit records can be generated from various components within the information system \n(e.g., module or policy filter).  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the chcon  \ncommand.  \nExample:  \n# { \n UID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n [ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng  \n\" >> /etc/audit/rules.d/50 -perm_chng.rules || printf \"ERROR: Variable \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.16": {
        "Title": "Ensure successful and unsuccessful attempts to use the setfacl command are recorded",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe setfacl  command",
        "Rationale": "This utility sets Access Control Lists (ACLs) of files and directories. Without generating \naudit records that are specific to the security and mission needs of the organization, it \nwould be difficult to establish, correlate, and investigate the events rela ting to an \nincident or identify those responsible for one.  \nAudit records can be generated from various components within the information system \n(e.g., module or policy filter).  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nsetfacl  command.  \nExample:  \n# { \n UID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n [ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng  \n\" >> /etc/audit/rules.d/50 -perm_chng.rules || printf \"ERROR: Va riable \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.17": {
        "Title": "Ensure successful and unsuccessful attempts to use the chacl command are recorded",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe chacl  command.  \nchacl  is an IRIX -compatibility command, and is maintained for those users who are \nfamiliar with its use from either XFS or IRIX.",
        "Rationale": "chacl  changes the ACL(s) for a file or directory. Without generating audit records that \nare specific to the security and mission needs of the organization, it would be difficult to \nestablish, correlate, and investigate the events relating to an incident or iden tify those \nresponsible for one.  \nAudit records can be generated from various components within the information system \n(e.g., module or policy filter).  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the chacl  \ncommand.  \nExample:  \n# { \n UID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n [ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng  \n\" >> /etc/audit/rules.d/50 -perm_chng.rules || printf \"ERROR: Vari able \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.18": {
        "Title": "Ensure successful and unsuccessful attempts to use the usermod command are recorded",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe usermod  command.",
        "Rationale": "The usermod  command modifies the system account files to reflect the changes that are \nspecified on the command line. Without generating audit records that are specific to the \nsecurity and mission needs of the organization, it would be difficult to establish, \ncorrelat e, and investigate the events relating to an incident or identify those responsible \nfor one.  \nAudit records can be generated from various components within the information system \n(e.g., module or policy filter).  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nusermod  command.  \nExample:  \n# { \n UID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n [ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k usermod  \n\" >> /etc/audit/rules.d/50 -usermod.rules || printf \"ERROR: Varia ble 'UID_MIN' \nis unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.19": {
        "Title": "Ensure kernel module loading unloading and modification is collected",
        "Description": "Monitor the loading and unloading of kernel modules. All the loading / listing / \ndependency checking of modules is done by kmod via symbolic links.  \nThe following system calls control loading and unloading of modules:  \n• init_module  - load a module  \n• finit_module  - load a module (used when the overhead of using \ncryptographically signed modules to determine the authenticity of a module can \nbe avoided)  \n• delete_module  - delete a module  \nAny execution of the loading and unloading module programs and system calls will \ntrigger an audit record with an identifier of modules .",
        "Rationale": "Monitoring the use of all the various ways to manipulate kernel modules could provide \nsystem administrators with evidence that an unauthorized change was made to a kernel \nmodule, possibly compromising the security of the system.  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor kernel module modification.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b64 -S init_module,finit_module,delete_module -F \nauid>=${UID_MIN} -F auid!=unset -k kernel_modules  \n-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k kernel_modules  \n\" >> /etc/audit/rules.d/50 -kernel_modules.rules || printf \"ERROR: Variable \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.2": {
        "Title": "Ensure actions as another user are always logged",
        "Description": "sudo provides users with temporary elevated privileges to perform operations, either as \nthe superuser or another user.",
        "Rationale": "Creating an audit log of users with temporary elevated privileges and the operation(s) \nthey performed is essential to reporting. Administrators will want to correlate the events \nwritten to the audit trail with the records written to sudo's logfile to verify if unauthorized \ncommands have been executed.  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor elevated privileges.  \nExample:  \n# printf \"  \n-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k \nuser_emulation  \n-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k \nuser_emulation  \n\" >> /etc/audit/rules.d/50 -user_emulation.rules  \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.20": {
        "Title": "Ensure the audit configuration is immutable",
        "Description": "Set system audit so that audit rules cannot be modified with auditctl  . Setting the flag \n\"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on \nsystem reboot.  \nNote:  This setting will require the system to be rebooted to update the active auditd  \nconfiguration settings.",
        "Rationale": "In immutable mode, unauthorized users cannot execute changes to the audit system to \npotentially hide malicious activity and then put the audit rules back. Users would most \nlikely notice a system reboot and that could alert administrators of an attempt to m ake \nunauthorized audit changes.",
        "Remediation": "Edit or create the file /etc/audit/rules.d/99 -finalize.rules  and add the line -e 2 at \nthe end of the file:  \nExample:  \n# printf -- \"-e 2 \n\" >> /etc/audit/rules.d/99 -finalize.rules  \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.21": {
        "Title": "Ensure the running and on disk configuration is the same (Manual)",
        "Description": "The Audit system have both on disk and running configuration. It is possible for these \nconfiguration settings to differ.  \nNote:  Due to the limitations of augenrules  and auditctl , it is not absolutely guaranteed \nthat loading the rule sets via augenrules --load will result in all rules being loaded or \neven that the user will be informed if there was a problem loading the rules.",
        "Rationale": "Configuration differences between what is currently running and what is on disk could \ncause unexpected problems or may give a false impression of compliance \nrequirements.",
        "Remediation": "If the rules are not aligned across all three () areas, run the following command to \nmerge and load all rules:  \n# augenrules --load \nCheck if reboot is required.  \nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then echo \"Reboot required \nto load rules\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.3": {
        "Title": "Ensure events that modify the sudo log file are collected",
        "Description": "Monitor the sudo log file. If the system has been properly configured to disable the use \nof the su command and force all administrators to have to log in first and then use sudo \nto execute privileged commands, then all administrator commands will be logged to \n/var/log/sudo.log  . Any time a command is executed, an audit event will be triggered \nas the /var/log/sudo.log  file will be opened for write and the executed administration \ncommand will be written to the log.",
        "Rationale": "Changes in /var/log/sudo.log  indicate that an administrator has executed a command \nor the log file itself has been tampered with. Administrators will want to correlate the \nevents written to the audit trail with the records written to /var/log/sudo.log  to verify if \nunauthorized commands have been executed.  \n   \nInternal Only - General",
        "Remediation": "Note:  This recommendation requires that the sudo logfile is configured. See guidance \nprovided in the recommendation \"Ensure sudo log file exists\"  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify the sudo log file.  \nExample:  \n# { \nSUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? \n.*//' -e 's/\"//g')  \n[ -n \"${SUDO_LOG_FILE}\" ] && printf \"  \n-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file  \n\" >> /etc/audit/rules.d/50 -sudo.rules || printf \"ERROR: Variable \n'SUDO_LOG_F ILE' is unset. \\n\" \n} \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi \nAdditional Information:  \nPotential reboot required  \nIf the auditing configuration is locked ( -e 2), then augenrules  will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration.  \nSystem call structure  \nFor performance ( man 7 audit.rules ) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.4": {
        "Title": "Ensure events that modify date and time information are collected",
        "Description": "Capture events where the system date and/or time has been modified. The parameters \nin this section are set to determine if the;  \n• adjtimex  - tune kernel clock  \n• settimeofday  - set time using timeval  and timezone  structures  \n• stime  - using seconds since 1/1/1970  \n• clock_settime  - allows for the setting of several internal clocks and timers  \nsystem calls have been executed. Further, ensure to write an audit record to the \nconfigured audit log file upon exit, tagging the records with a unique identifier such as \n\"time -change\".",
        "Rationale": "Unexpected changes in system date and/or time could be a sign of malicious activity on \nthe system.  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify date and time information.  \nExample:  \n# printf \"  \n-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-\nchange \n-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-\nchange \n-w /etc/localtime -p wa -k time-change \n\" >> /etc/audit/rules.d/50 -time-change.rules  \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.5": {
        "Title": "Ensure events that modify the system's network environment are collected",
        "Description": "Record changes to network environment files or system calls. The below parameters \nmonitors the following system calls, and write an audit event on system call exit:  \n• sethostname  - set the systems host name  \n• setdomainname  - set the systems domain name  \nThe files being monitored are:  \n• /etc/issue  and /etc/issue.net  - messages displayed pre -login  \n• /etc/hosts  - file containing host names and associated IP addresses  \n• /etc/networks  - symbolic names for networks  \n• /etc/network/  - directory containing network interface scripts and configurations \nfiles \n• /etc/netplan/  - central location for YAML networking configurations files",
        "Rationale": "Monitoring system events that change network environments, such as sethostname  and \nsetdomainname , helps identify unauthorized alterations to host and domain names, \nwhich could compromise security settings reliant on these names. Changes to \n/etc/hosts  can signal unauthorized attempts to alter machine associations with IP \naddresses, potentially redirecting users and processes to unintended destinations. \nSurveillance of /etc/issue  and /etc/issue.net  is crucial to detect intruders inserting \nfalse information to  deceive users. Monitoring /etc/network/  reveals modifications to \nnetwork interfaces or scripts that may jeopardize system availability or security. \nAdditionally, tracking changes in the /etc/netplan/  directory ensures swift detection of \nunauthorized adjustments to network configurations. All audit records should be \nappropriately tagged for relevance  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify the system's network environment.  \nExample:  \n# printf \"  \n-a always,exit -F arch=b64 -S sethostname,setdomainname -k system -locale \n-a always,exit -F arch=b32 -S sethostname,setdomainname -k system -locale \n-w /etc/issue -p wa -k system -locale \n-w /etc/issue.net -p wa -k system -locale \n-w /etc/hosts -p wa -k system -locale \n-w /etc/networks -p wa -k system -locale \n-w /etc/network/ -p wa -k system -locale \n-w /etc/netplan/ -p wa -k system -locale \n\" >> /etc/audit/rules.d/50 -system_locale.rules  \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.6": {
        "Title": "Ensure use of privileged commands are collected",
        "Description": "Monitor privileged programs, those that have the setuid  and/or setgid  bit set on \nexecution, to determine if unprivileged users are running these commands.",
        "Rationale": "Execution of privileged commands by non -privileged users could be an indication of \nsomeone trying to gain unauthorized access to the system.  \nImpact:  \nBoth the audit and remediation section of this recommendation will traverse all mounted \nfile systems that is not mounted with either noexec  or nosuid  mount options. If there are \nlarge file systems without these mount options, such traversal will be significantly \ndetrimental to the performance of the system.  \nBefore running either the audit or remediation section, inspect the output of the following \ncommand to determine exactly which file systems will be traversed:  \n# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste \n-sd,) | grep -Pv \"noexec|nosuid\"  \nTo exclude a particular file system due to adverse performance impacts, update the \naudit and remediation sections by adding a sufficiently unique string to the grep \nstatement. The above command can be used to test the modified exclusions.  \n   \nInternal Only - General",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor the use of privileged commands.  \nExample script:  \n#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.7": {
        "Title": "Ensure unsuccessful file access attempts are collected",
        "Description": "Monitor for unsuccessful attempts to access files. The following parameters are \nassociated with system calls that control files:  \n• creation - creat   \n• opening - open , openat   \n• truncation - truncate  , ftruncate   \nAn audit log record will only be written if all of the following criteria is met for the user \nwhen trying to access a file:  \n• a non -privileged user (auid>=UID_MIN)  \n• is not a Daemon event (auid=4294967295/unset/ -1) \n• if the system call returned EACCES (permission denied) or EPERM (some other \npermanent error associated with the specific system call)",
        "Rationale": "Failed attempts to open, create or truncate files could be an indication that an individual \nor process is trying to gain unauthorized access to the system.  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor unsuccessful file access attempts.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-\nEACCES -F auid>=${UID_MIN} -F auid!=unset -k access  \n-a always,exit -F arch=b64 -S creat,ope n,openat,truncate,ftruncate -F exit=-\nEPERM -F auid>=${UID_MIN} -F auid!=unset -k access  \n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-\nEACCES -F auid>=${UID_MIN} -F auid!=unset -k access  \n-a always,exit -F arch=b32 -S creat,open ,openat,truncate,ftruncate -F exit=-\nEPERM -F auid>=${UID_MIN} -F auid!=unset -k access  \n\" >> /etc/audit/rules.d/50 -access.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.8": {
        "Title": "Ensure events that modify user/group information are collected",
        "Description": "Record events affecting the modification of user or group information, including that of \npasswords and old passwords if in use.  \n• /etc/group  - system groups  \n• /etc/passwd  - system users  \n• /etc/gshadow  - encrypted password for each group  \n• /etc/shadow  - system user passwords  \n• /etc/security/opasswd  - storage of old passwords if the relevant PAM module is \nin use  \n• /etc/nsswitch.conf  - file configures how the system uses various databases \nand name resolution mechanisms  \n• /etc/pam.conf  - file determines the authentication services to be used, and the \norder in which the services are used.  \n• /etc/pam.d  - directory contains the PAM configuration files for each PAM -aware \napplication.  \nThe parameters in this section will watch the files to see if they have been opened for \nwrite or have had attribute changes (e.g. permissions) and tag them with the identifier \n\"identity\" in the audit log file.",
        "Rationale": "Unexpected changes to these files could be an indication that the system has been \ncompromised and that an unauthorized user is attempting to hide their activities or \ncompromise additional accounts.",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify user/group information.  \nExample:  \n# printf \"  \n-w /etc/group -p wa -k identity  \n-w /etc/passwd -p wa -k identity  \n-w /etc/gshadow -p wa -k identity  \n-w /etc/shadow -p wa -k identity  \n-w /etc/security/opasswd -p wa -k identity  \n-w /etc/nsswitch.conf -p wa -k identity  \n-w /etc/pam.conf -p wa -k identity \n-w /etc/pam.d -p wa -k identity  \n\" >> /etc/audit/rules.d/50 -identity.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.3.9": {
        "Title": "Ensure discretionary access control permission modification events are collected",
        "Description": "Monitor changes to file permissions, attributes, ownership and group. The parameters in \nthis section track changes for system calls that affect file permissions and attributes. \nThe following commands and system calls effect the permissions, ownership and \nvarious attributes of files.  \n• chmod   \n• fchmod   \n• fchmodat   \n• chown   \n• fchown   \n• fchownat   \n• lchown   \n• setxattr   \n• lsetxattr   \n• fsetxattr   \n• removexattr   \n• lremovexattr   \n• fremovexattr   \nIn all cases, an audit record will only be written for non -system user ids and will ignore \nDaemon events. All audit records will be tagged with the identifier \"perm_mod.\"",
        "Rationale": "Monitoring for changes in file attributes could alert a system administrator to activity that \ncould indicate intruder activity or policy violation.  \n   \nInternal Only - General",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor discretionary access control permission modification \nevents.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F \nauid!=unset -F key=perm_mod  \n-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod  \n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F \nauid!=unset -F key=perm_mod  \n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F \nauid>=${UID_MIN} -F auid!=unset -F key=pe rm_mod \n-a always,exit -F arch=b64 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod  \n-a always,exit -F arch=b32 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod  \n\" >> /etc/audit/rules.d/50 -perm_mod.rules || printf \"ERROR: Variable \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.1": {
        "Title": "Ensure audit log files mode is configured",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.  \n   \nInternal Only - General",
        "Remediation": "Run the following command to remove more permissive mode than 0640 from audit log \nfiles: \n# [ -f /etc/audit/auditd.conf ] && find \"$(dirname $(awk -F \"=\" \n'/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))\" -type f -perm \n/0137 -exec chmod u -x,g-wx,o-rwx {} +#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.10": {
        "Title": "Ensure audit tools group owner is configured",
        "Description": "Audit tools include, but are not limited to, vendor -provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information.",
        "Remediation": "Run the following command to change group ownership to the groop root: \n# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.2": {
        "Title": "Ensure audit log files owner is configured",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.  \n   \nInternal Only - General",
        "Remediation": "Run the following command to configure the audit log files to be owned by the root \nuser:  \n# [ -f /etc/audit/auditd.conf ] && find \"$(dirname $(awk -F \"=\" \n'/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))\" -type f ! -user \nroot -exec chown root {} +#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.3": {
        "Title": "Ensure audit log files group owner is configured",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.",
        "Remediation": "",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.4": {
        "Title": "Ensure the audit log file directory mode is configured",
        "Description": "The audit log directory contains audit log files.",
        "Rationale": "Audit information includes all information including: audit records, audit settings and \naudit reports. This information is needed to successfully audit system activity. This \ninformation must be protected from unauthorized modification or deletion. If this \ninformation were to be compromised, forensic analysis and discovery of the true source \nof potentially malicious system activity is impossible to achieve.  \n   \nInternal Only - General",
        "Remediation": "Run the following command to configure the audit log files to be group owned by adm: \n# find $(dirname $(awk -F\"=\" '/^ \\s*log_file/ {print $2}' \n/etc/audit/auditd.conf | xargs)) -type f \\( ! -group adm -a ! -group root \\) \n-exec chgrp adm {} +  \nRun the following command to set the log_group  parameter in the audit configuration \nfile to log_group = adm : \n# sed -ri 's/^\\s*#?\\s*log_group \\s*=\\s*\\S+(\\s*#.*)?.*$/log_group = adm \\1/' \n/etc/audit/auditd.conf  \nRun the following command to restart the audit daemon to reload the configuration file:  \n# systemctl restart auditd#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.5": {
        "Title": "Ensure audit configuration files mode is configured",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events.  \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investi gate \nevents relating to an incident.",
        "Remediation": "",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.6": {
        "Title": "Ensure audit configuration files owner is configured",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events.  \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investi gate \nevents relating to an incident.",
        "Remediation": "Run the following command to remove more permissive mode than 0640 from the audit \nconfiguration files:  \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) -exec \nchmod u-x,g-wx,o-rwx {} +#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.7": {
        "Title": "Ensure audit configuration files group owner is configured",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events.  \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investi gate \nevents relating to an incident.",
        "Remediation": "Run the following command to change group to root: \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -group \nroot -exec chgrp root {} +#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.8": {
        "Title": "Ensure audit tools mode is configured",
        "Description": "Audit tools include, but are not limited to, vendor -provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information.  \n   \nInternal Only - General",
        "Remediation": "Run the following command to remove more permissive mode from the audit tools:  \n# chmod go -w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "6.3.4.9": {
        "Title": "Ensure audit tools owner is configured",
        "Description": "Audit tools include, but are not limited to, vendor -provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information.",
        "Remediation": "Run the following command to change the owner of the audit tools to the root user:  \n# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules#!/usr/bin/env bash",
        "L1": "FALSE",
        "L2": "TRUE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "TRUE"
    },
    "7.1.1": {
        "Title": "Ensure permissions on /etc/passwd are configured",
        "Description": "The /etc/passwd  file contains user account information that is used by many system \nutilities and therefore must be readable for these utilities to operate.",
        "Rationale": "It is critical to ensure that the /etc/passwd  file is protected from unauthorized write \naccess. Although it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/passwd : \n# chmod u -x,go-wx /etc/passwd  \n# chown root:root /etc/passwd  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.10": {
        "Title": "Ensure permissions on /etc/security/opasswd are configured",
        "Description": "/etc/security/opasswd  and it's backup /etc/security/opasswd.old  hold user's \nprevious passwords if pam_unix  or pam_pwhistory  is in use on the system",
        "Rationale": "It is critical to ensure that /etc/security/opasswd  is protected from unauthorized \naccess. Although it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.11": {
        "Title": "Ensure world writable files and directories are secured",
        "Description": "World writable files are the least secure. Data in world -writable files can be modified and \ncompromised by any user on the system. World writable files may also indicate an \nincorrectly written script or program that could potentially be the cause of a larg er \ncompromise to the system's integrity. See the chmod(2)  man page for more information.  \nSetting the sticky bit on world writable directories prevents users from deleting or \nrenaming files in that directory that are not owned by them.",
        "Rationale": "Data in world -writable files can be modified and compromised by any user on the \nsystem. World writable files may also indicate an incorrectly written script or program \nthat could potentially be the cause of a larger compromise to the system's integrity.  \nThis feature prevents the ability to delete or rename files in world writable directories \n(such as /tmp ) that are owned by another user.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/security/opasswd  and /etc/security/opasswd.old  is they exist:  \n# [ -e \"/etc/security/opasswd\" ] && chmod u -x,go-rwx /etc/security/opasswd  \n# [ -e \"/etc/security/opasswd\" ] && chown root:root /etc/security/opasswd  \n# [ -e \"/etc/security/opasswd.old\" ] && chmod u -x,go-rwx \n/etc/security/opasswd.old  \n# [ -e \"/etc/security/op asswd.old\" ] && chown root:root \n/etc/security/opasswd.old  \nDefault Value:  \n/etc/security/opasswd Access: (0600/ -rw------- ) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.12": {
        "Title": "Ensure no files or directories without an owner and a group exist",
        "Description": "Administrators may delete users or groups from the system and neglect to remove all \nfiles and/or directories owned by those users or groups.",
        "Rationale": "A new user or group who is assigned a deleted user's user ID or group ID may then end \nup \"owning\" a deleted user or group's files, and thus have more access on the system \nthan was intended.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.13": {
        "Title": "Ensure SUID and SGID files are reviewed (Manual)",
        "Description": "The owner of a file can set the file's permissions to run with the owner's or group's \npermissions, even if the user running the program is not the owner or a member of the \ngroup. The most common reason for a SUID or SGID program is to enable users to \nperfo rm functions (such as changing their password) that require root privileges.",
        "Rationale": "There are valid reasons for SUID and SGID programs, but it is important to identify and \nreview such programs to ensure they are legitimate. Review the files returned by the \naction in the audit section and check to see if system binaries have a different \nchecksum than what from the package. This is an indication that the binary may have \nbeen replaced.  \n   \nInternal Only - General",
        "Remediation": "Remove or set ownership and group ownership of these files and/or directories to an \nactive user on the system as appropriate.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.2": {
        "Title": "Ensure permissions on /etc/passwd - are configured",
        "Description": "The /etc/passwd - file contains backup user account information.",
        "Rationale": "It is critical to ensure that the /etc/passwd - file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/passwd -: \n# chmod u -x,go-wx /etc/passwd - \n# chown root:root /etc/passwd - \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: { 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.3": {
        "Title": "Ensure permissions on /etc/group are configured",
        "Description": "The /etc/group  file contains a list of all the valid groups defined in the system. The \ncommand below allows read/write access for root and read access for everyone else.",
        "Rationale": "The /etc/group  file needs to be protected from unauthorized changes by non -privileged \nusers, but needs to be readable as this information is used with many non -privileged \nprograms.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/group : \n# chmod u -x,go-wx /etc/group  \n# chown root:root /etc/group  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.4": {
        "Title": "Ensure permissions on /etc/group - are configured",
        "Description": "The /etc/group - file contains a backup list of all the valid groups defined in the system.",
        "Rationale": "It is critical to ensure that the /etc/group - file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/group -: \n# chmod u -x,go-wx /etc/group - \n# chown root:root /etc/group - \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.5": {
        "Title": "Ensure permissions on /etc/shadow are configured",
        "Description": "The /etc/shadow  file is used to store the information about user accounts that is critical \nto the security of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "If attackers can gain read access to the /etc/shadow  file, they can easily run a \npassword cracking program against the hashed password to break it. Other security \ninformation that is stored in the /etc/shadow  file (such as expiration) could also be \nuseful to subvert the user accounts.",
        "Remediation": "Run one of the following commands to set ownership of /etc/shadow  to root and group \nto either root or shadow : \n# chown root:shadow /etc/shadow  \n  -OR- \n# chown root:root /etc/shadow  \nRun the following command to remove excess permissions form /etc/shadow : \n# chmod u -x,g-wx,o-rwx /etc/shadow  \nDefault Value:  \nAccess: (0640/ -rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.6": {
        "Title": "Ensure permissions on /etc/shadow - are configured",
        "Description": "The /etc/shadow - file is used to store backup information about user accounts that is \ncritical to the security of those accounts, such as the hashed password and other \nsecurity information.",
        "Rationale": "It is critical to ensure that the /etc/shadow - file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.7": {
        "Title": "Ensure permissions on /etc/gshadow are configured",
        "Description": "The /etc/gshadow  file is used to store the information about groups that is critical to the \nsecurity of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "If attackers can gain read access to the /etc/gshadow  file, they can easily run a \npassword cracking program against the hashed password to break it. Other security \ninformation that is stored in the /etc/gshadow  file (such as group administrators) could \nalso be useful to subvert the group.",
        "Remediation": "Run one of the following commands to set ownership of /etc/gshadow  to root and \ngroup to either root or shadow : \n# chown root:shadow /etc/gshadow  \n  -OR- \n# chown root:root /etc/gshadow  \nRun the following command to remove excess permissions form /etc/gshadow : \n# chmod u -x,g-wx,o-rwx /etc/gshadow  \nDefault Value:  \nAccess: (0640/ -rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.8": {
        "Title": "Ensure permissions on /etc/gshadow - are configured",
        "Description": "The /etc/gshadow - file is used to store backup information about groups that is critical \nto the security of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "It is critical to ensure that the /etc/gshadow - file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.1.9": {
        "Title": "Ensure permissions on /etc/shells are configured",
        "Description": "/etc/shells  is a text file which contains the full pathnames of valid login shells. This file \nis consulted by chsh and available to be queried by other programs.",
        "Rationale": "It is critical to ensure that the /etc/shells  file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/shells : \n# chmod u -x,go-wx /etc/shells  \n# chown root:root /etc/shells  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.1": {
        "Title": "Ensure accounts in /etc/passwd use shadowed passwords",
        "Description": "Local accounts can uses shadowed passwords. With shadowed passwords, The \npasswords are saved in shadow password file, /etc/shadow , encrypted by a salted one -\nway hash. Accounts with a shadowed password have an x in the second field in \n/etc/passwd .",
        "Rationale": "The /etc/passwd  file also contains information like user ID's and group ID's that are \nused by many system programs. Therefore, the /etc/passwd  file must remain world \nreadable. In spite of encoding the password with a randomly -generated one -way hash \nfunction, an attacker could still break the system if they got access to the /etc/passwd  \nfile. This can be mitigated by using shadowed passwords, thus moving the passwords in \nthe /etc/passwd  file to /etc/shadow . The /etc/shadow  file is set so only root will be able \nto read and write. This helps mitigate the risk of an attacker gaining access to the \nencoded passwords with which to perform a dictionary at tack.  \nNote:  \n• All accounts must have passwords or be locked to prevent the account from \nbeing used by an unauthorized user.  \n• A user account with an empty second field in /etc/passwd  allows the account to \nbe logged into by providing only the username.",
        "Remediation": "Run the following command to set accounts to use shadowed passwords and migrate \npasswords in /etc/passwd  to /etc/shadow : \n# pwconv  \nInvestigate to determine if the account is logged in and what it is being used for, to \ndetermine if it needs to be forced off.   \nInternal Only - General#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.10": {
        "Title": "Ensure local interactive user dot files access is configured",
        "Description": "While the system administrator can establish secure permissions for users' \"dot\" files, \nthe users can easily override these.  \n• .forward  file specifies an email address to forward the user's mail to.  \n• .rhost  file provides the \"remote authentication\" database for the rcp, rlogin, and \nrsh commands and the rcmd() function. These files bypass the standard \npassword -based user authentication mechanism. They specify remote hosts and \nusers that are considered trusted  (i.e. are allowed to access the local system \nwithout supplying a password)  \n• .netrc  file contains data for logging into a remote host or passing authentication \nto an API.  \n• .bash_history  file keeps track of the user’s commands.",
        "Rationale": "User configuration files with excessive or incorrect access may enable malicious users \nto steal or modify other users' data or to gain another user's system privileges.",
        "Remediation": "",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.2": {
        "Title": "Ensure /etc/shadow password fields are not empty",
        "Description": "An account with an empty password field means that anybody may log in as that user \nwithout providing a password.",
        "Rationale": "All accounts must have passwords or be locked to prevent the account from being used \nby an unauthorized user.",
        "Remediation": "If any accounts in the /etc/shadow  file do not have a password, run the following \ncommand to lock the account until it can be determined why it does not have a \npassword:  \n# passwd -l <username>  \nAlso, check to see if the account is logged in and investigate what it is being used for to \ndetermine if it needs to be forced off.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.3": {
        "Title": "Ensure all groups in /etc/passwd exist in /etc/group",
        "Description": "Over time, system administration errors and changes can lead to groups being defined \nin /etc/passwd  but not in /etc/group  .",
        "Rationale": "Groups defined in the /etc/passwd  file but not in the /etc/group  file pose a threat to \nsystem security since group permissions are not properly managed.",
        "Remediation": "Analyze the output of the Audit step above and perform the appropriate action to correct \nany discrepancies found.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.4": {
        "Title": "Ensure shadow group is empty",
        "Description": "The shadow group allows system programs which require access the ability to read the \n/etc/shadow file. No users should be assigned to the shadow group.",
        "Rationale": "Any users assigned to the shadow group would be granted read access to the \n/etc/shadow file. If attackers can gain read access to the /etc/shadow  file, they can \neasily run a password cracking program against the hashed passwords to break them. \nOther security information that is stored in the /etc/shadow  file (such as expiration) \ncould also be useful to subvert additional user accounts.",
        "Remediation": "Run the following command to remove all users from the shadow group  \n# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/ \\1/' /etc/group  \nChange the primary group of any users with shadow as their primary group.  \n# usermod -g <primary group> <user>#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.5": {
        "Title": "Ensure no duplicate UIDs exist",
        "Description": "Although the useradd  program will not let you create a duplicate User ID (UID), it is \npossible for an administrator to manually edit the /etc/passwd  file and change the UID \nfield.",
        "Rationale": "Users must be assigned unique UIDs for accountability and to ensure appropriate \naccess protections.",
        "Remediation": "Based on the results of the audit script, establish unique UIDs and review all files owned \nby the shared UIDs to determine which UID they are supposed to belong to.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.7": {
        "Title": "Ensure no duplicate user names exist",
        "Description": "Although the useradd  program will not let you create a duplicate user name, it is \npossible for an administrator to manually edit the /etc/passwd  file and change the user \nname.",
        "Rationale": "If a user is assigned a duplicate user name, it will create and have access to files with \nthe first UID for that username in /etc/passwd  . For example, if \"test4\" has a UID of \n1000 and a subsequent \"test4\" entry has a UID of 2000, logging in as \"test4\" will use \nUID 1000. Effectively, the UID is shared, which is a security problem.",
        "Remediation": "Based on the results of the audit script, establish unique user names for the users. File \nownerships will automatically reflect the change as long as the users have unique UIDs.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.8": {
        "Title": "Ensure no duplicate group names exist",
        "Description": "Although the groupadd  program will not let you create a duplicate group name, it is \npossible for an administrator to manually edit the /etc/group  file and change the group \nname.",
        "Rationale": "If a group is assigned a duplicate group name, it will create and have access to files \nwith the first GID for that group in /etc/group  . Effectively, the GID is shared, which is a \nsecurity problem.",
        "Remediation": "Based on the results of the audit script, establish unique names for the user groups. File \ngroup ownerships will automatically reflect the change as long as the groups have \nunique GIDs.#!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    },
    "7.2.9": {
        "Title": "Ensure local interactive user home directories are configured",
        "Description": "The user home directory is space defined for the particular user to set local environment \nvariables and to store personal files. While the system administrator can establish \nsecure permissions for users' home directories, the users can easily override thes e. \nUsers can be defined in /etc/passwd  without a home directory or with a home directory \nthat does not actually exist.",
        "Rationale": "Since the user is accountable for files stored in the user home directory, the user must \nbe the owner of the directory. Group or world -writable user home directories may enable \nmalicious users to steal or modify other users' data or to gain another user's system \nprivileges. If the user's home directory does not exist or is unassigned, the user will be \nplaced in \"/\" and will not be able to write any files or have local environment variables \nset.",
        "Remediation": "If a local interactive users' home directory is undefined and/or doesn't exist, follow local \nsite policy and perform one of the following:  \n• Lock the user account  \n• Remove the user from the system  \n• create a directory for the user. If undefined, edit /etc/passwd  and add the \nabsolute path to the directory to the last field of the user.  \nRun the following script to:  \n• Remove excessive permissions from local interactive users home directories  \n• Update the home directory's owner   \nInternal Only - General  #!/usr/bin/env bash",
        "L1": "TRUE",
        "L2": "FALSE",
        "BL": "FALSE",
        "SL1": "TRUE",
        "SL2": "FALSE"
    }
}