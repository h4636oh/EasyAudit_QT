{
    "1.1.1.1": {
        "Title": "Ensure cramfs kernel module is not available",
        "Description": "The cramfs  filesystem type is a compressed read -only Linux filesystem embedded in \nsmall footprint systems. A cramfs  image can be used without having to first \ndecompress the image.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to unload and disable the cramfs  module:  \n- IF - the cramfs  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install cramfs /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist cramfs  in the /etc/modprobe.d/  \ndirectory  \n• Run modprobe -r cramfs 2>/dev/null; rmmod cramfs 2>/dev/null  to \nremove cramfs  from the kernel  \n- IF - the cramfs  kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.1.2": {
        "Title": "Ensure freevxfs kernel module is not available",
        "Description": "The freevxfs  filesystem type is a free version of the Veritas type filesystem. This is the \nprimary filesystem type for HP -UX operating systems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to unload and disable the freevxfs  module:  \n- IF - the freevxfs  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install freevxfs /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist freevxfs  in the \n/etc/modprobe.d/  directory  \n• Run modprobe -r freevxfs 2>/dev/null; rmmod freevxfs 2>/dev/null  \nto remove freevxfs  from the kernel  \n- IF - the freevxfs  kernel module is not available on the system, or pre -compiled into \nthe kernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.1.3": {
        "Title": "Ensure hfs kernel module is not available",
        "Description": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS \nfilesystems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to unload and disable the hfs module:  \n- IF - the hfs kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install hfs /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist hfs  in the /etc/modprobe.d/  \ndirectory  \n• Run modprobe -r hfs 2>/dev/null; rmmod hfs 2>/dev/null  to remove \nhfs from the kernel  \n- IF - the hfs kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.1.4": {
        "Title": "Ensure hfsplus kernel module is not available",
        "Description": "The hfsplus  filesystem type is a hierarchical filesystem designed to replace hfs that \nallows you to mount Mac OS filesystems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to unload and disable the hfsplus  module:  \n- IF - the hfsplus  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install hfsplus /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist hfsplus  in the \n/etc/modprobe.d/  directory  \n• Run modprobe -r hfsplus 2>/dev/null; rmmod hfsplus 2>/dev/null  to \nremove hfsplus  from the kernel  \n- IF - the hfsplus  kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.1.5": {
        "Title": "Ensure jffs2 kernel module is not available",
        "Description": "The jffs2  (journaling flash filesystem 2) filesystem type is a log -structured filesystem \nused in flash memory devices.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Remediation": "Run the following script to unload and disable the jffs2  module:  \n- IF - the jffs2  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install jffs2 /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist jffs2  in the /etc/modprobe.d/  \ndirectory  \n• Run modprobe -r jffs2 2>/dev/null; rmmod jffs2 2>/dev/null  to \nremove jffs2  from the kernel  \n- IF - the jffs2  kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.1.6": {
        "Title": "Ensure squashfs kernel module is not available",
        "Description": "The squashfs  filesystem type is a compressed read -only Linux filesystem embedded in \nsmall footprint systems. A squashfs  image can be used without having to first \ndecompress the image.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.  \nImpact:  \nAs Snap packages utilize squashfs  as a compressed filesystem, disabling squashfs  \nwill cause Snap packages to fail.  \nSnap  application packages of software are self -contained and work across a range of \nLinux distributions. This is unlike traditional Linux package management approaches, \nlike APT or RPM, which require specifically adapted packages per Linux distribution on \nan application update and delay therefore application deployment from developers to \ntheir software's end -user. Snaps themselves have no dependency on any external store \n(\"App store\"), can be obtained from any source and can be therefore used for upstream \nsoftware deployment.",
        "Remediation": "Run the following script to unload and disable the udf module:  \n- IF - the squashfs  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install squashfs /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist squashfs  in the \n/etc/modprobe.d/  directory  \n• Run modprobe -r squashfs 2>/dev/null; rmmod squashfs 2>/dev/null  \nto remove squashfs  from the kernel  \n- IF - the squashfs  kernel module is not available on the system, or pre -compiled into \nthe kernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.1.1.7": {
        "Title": "Ensure udf kernel module is not available",
        "Description": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 \nand ECMA -167 specifications. This is an open vendor filesystem type for data storage \non a broad range of media. This filesystem type is necessary to support writing DVDs \nand newe r optical disc formats.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.  \nImpact:  \nMicrosoft Azure requires the usage of udf. \nudf should not  be disabled on systems run on Microsoft Azure.",
        "Remediation": "Run the following script to unload and disable the udf module:  \n- IF - the udf kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install udf /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist udf  in the /etc/modprobe.d/  \ndirectory  \n• Run modprobe -r udf 2>/dev/null; rmmod udf 2>/dev/null  to remove \nudf from the kernel  \n- IF - the udf kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.1.1.8": {
        "Title": "Ensure usb -storage kernel module is not available",
        "Description": "USB storage provides a means to transfer and store files ensuring persistence and \navailability of the files independent of network connection status. Its popularity and utility \nhas led to USB -based malware being a simple and common means for network \ninfiltration and a first step to establishing a persistent threat within a networked \nenvironment.",
        "Rationale": "Restricting USB access on the system will decrease the physical attack surface for a \ndevice and diminish the possible vectors to introduce malware.  \nImpact:  \nDisabling the usb-storage  module will disable any usage of USB storage devices.  \nIf requirements and local site policy allow the use of such devices, other solutions \nshould be configured accordingly instead. One example of a commonly used solution is \nUSBGuard .",
        "Remediation": "Run the following script to unload and disable the usb-storage  module:  \n- IF - the usb-storage  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install usb -storage /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist usb -storage  in the \n/etc/modprobe.d/  directory  \n• Run modprobe -r usb-storage 2>/dev/null; rmmod usb -storage \n2>/dev/null  to remove usb-storage  from the kernel  \n- IF - the usb-storage  kernel module is not available on the system, or pre -compiled \ninto the kernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.1.9": {
        "Title": "Ensure unused filesystems kernel modules are not \navailable (Manual)",
        "Description": "Filesystem kernel modules are pieces of code that can be dynamically loaded into the \nLinux kernel to extend its filesystem capabilities, or so -called base kernel, of an \noperating system. Filesystem kernel modules are typically used to add support for new \nhardware (as device drivers), or for adding system calls.",
        "Rationale": "While loadable filesystem kernel modules are a convenient method of modifying the \nrunning kernel, this can be abused by attackers on a compromised system to prevent \ndetection of their processes or files, allowing them to maintain control over the system. \nMany rootkits make use of loadable filesystem kernel modules in this way.  \nRemoving support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it. The following filesystem kernel \nmodules have known CVE's and should be made unavailable if no dependencies exi st: \n• afs - CVE-2022 -37402  \n• ceph  - CVE-2022 -0670  \n• cifs  - CVE-2022 -29869  \n• exfat  CVE-2022 -29973  \n• ext CVE-2022 -1184  \n• fat CVE-2022 -22043  \n• fscache  CVE-2022 -3630  \n• fuse  CVE-2023 -0386  \n• gfs2  CVE-2023 -3212  \n• nfs_common  CVE-2023 -6660  \n• nfsd  CVE-2022 -43945  \n• smbfs_common  CVE-2022 -2585  \nImpact:  \nThis list may be quite extensive and covering all edges cases is difficult. Therefore, it's \ncrucial to carefully consider the implications and dependencies before making any \nchanges to the filesystem kernel module configurations.",
        "Remediation": "- IF - the module is available in the running kernel:  \n• Unload the filesystem kernel module from the kernel  \n• Create a file ending in .conf  with install filesystem kernel modules /bin/false  \nin the /etc/modprobe.d/  directory  \n• Create a file ending in .conf  with deny list filesystem kernel modules in the \n/etc/modprobe.d/  directory  \nWARNING : unloading, disabling or denylisting filesystem modules that are in use on the \nsystem maybe FATAL. It is extremely important to thoroughly review the filesystems \nreturned by the audit before following the remediation procedure.  \nExample of unloading the gfs2 kernel module:  \n# modprobe -r gfs2 2>/dev/null  \n# rmmod gfs2 2>/dev/null  \nExample of fully disabling the gfs2  kernel module:  \n# printf '%s \\n' \"blacklist gfs2\" \"install gfs2 /bin/false\" >> \n/etc/modprobe.d/gfs2.conf  \nNote:  \n• Disabling a kernel module by modifying the command above for each unused \nfilesystem kernel module  \n• The example gfs2  must be updated with the appropriate module name for the \ncommand or example script below  to run correctly.  \nBelow is an example Script that can be modified to use on various filesystem \nkernel modules manual remediation process:  \nExample Script   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.1.1": {
        "Title": "Ensure /tmp is a separate partition",
        "Description": "The /tmp  directory is a world -writable directory used for temporary storage by all users \nand some applications.  \n- IF - an entry for /tmp  exists in /etc/fstab  it will take precedence over entries in \nsystemd default unit file.  \nNote:  In an environment where the main system is diskless and connected to iSCSI, \nentries in /etc/fstab  may not take precedence.  \n/tmp  can be configured to use tmpfs . \ntmpfs  puts everything into the kernel internal caches and grows and shrinks to \naccommodate the files it contains and is able to swap unneeded pages out to swap \nspace. It has maximum size limits which can be adjusted on the fly via mount -o \nremount . \nSince tmpfs  lives completely in the page cache and on swap, all tmpfs  pages will be \nshown as \"Shmem\" in /proc/meminfo  and \"Shared\" in free . Notice that these \ncounters also include shared memory. The most reliable way to get the count is using \ndf and du. \ntmpfs  has three mount options for sizing:  \n• size : The limit of allocated bytes for this tmpfs  instance. The default is half of \nyour physical RAM without swap. If you oversize your tmpfs  instances the \nmachine will deadlock since the OOM handler will not be able to free that \nmemory.  \n• nr_blocks : The same as size, but in blocks of PAGE_SIZE.  \n• nr_inodes : The maximum number of inodes for this instance. The default is half \nof the number of your physical RAM pages, or (on a machine with highmem) the \nnumber of lowmem RAM pages, whichever is the lower.  \nThese parameters accept a suffix k, m or g and can be changed on remount. The size \nparameter also accepts a suffix % to limit this tmpfs  instance to that percentage of your \nphysical RAM. The default, when neither size  nor nr_blocks  is specified, is size=50% .",
        "Rationale": "Making /tmp  its own file system allows an administrator to set additional mount options \nsuch as the noexec  option on the mount, making /tmp  useless for an attacker to install \nexecutable code. It would also prevent an attacker from establishing a hard link to a \nsystem setuid  program and wait for it to be updated. Once the program was updated, \nthe hard link would be broken, and the attacker would have his own copy of the \nprogram. If the program happened to have a security vulnerability, the attacker could \ncontinue to exploit the known flaw.  \nThis can be accomplished by either mounting tmpfs  to /tmp , or creating a separate \npartition for /tmp . \nImpact:  \nBy design files saved to /tmp  should have no expectation of surviving a reboot of the \nsystem. tmpfs  is ram based and all files stored to tmpfs  will be lost when the system is \nrebooted.  \nIf files need to be persistent through a reboot, they should be saved to /var/tmp  not \n/tmp . \nSince the /tmp  directory is intended to be world -writable, there is a risk of resource \nexhaustion if it is not bound to tmpfs  or a separate partition.  \nRunning out of /tmp  space is a problem regardless of what kind of filesystem lies under \nit, but in a configuration where /tmp  is not a separate file system it will essentially have \nthe whole disk available, as the default installation only creates a single / partition. On \nthe other hand, a RAM -based /tmp  (as with tmpfs ) will almost certainly be much \nsmaller, which can lead to applications filling up the filesystem much more easily. \nAnother alternative is to create a dedicated partition for /tmp  from a separ ate volume or \ndisk. One of the downsides of a disk -based dedicated partition is that it will be slower \nthan tmpfs  which is RAM -based.",
        "Remediation": "First ensure that systemd is correctly configured to ensure that /tmp  will be mounted at \nboot time.  \n# systemctl unmask tmp.mount  \nFor specific configuration requirements of the /tmp  mount for your environment, modify \n/etc/fstab . \nExample of using tmpfs  with specific mount options:  \ntmpfs /tmp tmpfs     defaults,rw,nosuid,nodev,noexec,relatime,size=2G  0 \n0 \nNote:  the size=2G  is an example of setting a specific size for tmpfs . \nExample of using a volume or disk with specific mount options. The source location of \nthe volume or disk will vary depending on your environment:  \n<device> /tmp    <fstype>    defaults,nodev,nosuid,noexec   0 0#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.1.2": {
        "Title": "Ensure nodev option set on /tmp partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /tmp  filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /tmp .",
        "Remediation": "- IF - a separate partition exists for /tmp . \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the \n/tmp  partition.  \nExample:  \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /tmp  with the configured options:  \n# mount -o remount /tmp#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.1.3": {
        "Title": "Ensure nosuid option set on /tmp partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /tmp  filesystem is only intended for temporary file storage, set this option to \nensure that users cannot create setuid  files in /tmp .",
        "Remediation": "- IF - a separate partition exists for /tmp . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/tmp  partition.  \nExample:  \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /tmp  with the configured options:  \n# mount -o remount /tmp#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.1.4": {
        "Title": "Ensure noexec option set on /tmp partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /tmp  filesystem is only intended for temporary file storage, set this option to \nensure that users cannot run executable binaries from /tmp . \nImpact:  \nSetting the noexec  option on /tmp  may prevent installation and/or updating of some 3rd \nparty software.",
        "Remediation": "- IF - a separate partition exists for /tmp . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/tmp  partition.  \nExample:  \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /tmp  with the configured options:  \n# mount -o remount /tmp#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.2.1": {
        "Title": "Ensure /dev/shm is a separate partition",
        "Description": "The /dev/shm  directory is a world -writable directory that can function as shared \nmemory that facilitates inter process communication (IPC).",
        "Rationale": "Making /dev/shm  its own file system allows an administrator to set additional mount \noptions such as the noexec  option on the mount, making /dev/shm  useless for an \nattacker to install executable code. It would also prevent an attacker from establishing a \nhard link to a system setuid  program and wait for it to be updated. Once the program \nwas updated, the hard link would be broken and the attacker would have his own copy \nof the program. If the program happened to have a security vulnerability, the attacker \ncould continue to exploit the known flaw.  \nThis can be accomplished by mounting tmpfs  to /dev/shm . \nImpact:  \nSince the /dev/shm  directory is intended to be world -writable, there is a risk of resource \nexhaustion if it is not bound to a separate partition.  \n/dev/shm  utilizing tmpfs  can be resized using the size={size}  parameter in the \nrelevant entry in /etc/fstab .",
        "Remediation": "For specific configuration requirements of the /dev/shm  mount for your environment, \nmodify /etc/fstab . \nExample:  \ntmpfs /dev/shm  tmpfs     \ndefaults,rw,nosuid,nodev,noexec,relatime,size=2G  0 0#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.2.2": {
        "Title": "Ensure nodev option set on /dev/shm partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /dev/shm  filesystem is not intended to support devices, set this option to \nensure that users cannot attempt to create special devices in /dev/shm  partitions.",
        "Remediation": "- IF - a separate partition exists for /dev/shm . \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the \n/dev/shm  partition. See the fstab(5)  manual page for more information.  \nExample:  \ntmpfs /dev/shm    tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /dev/shm  with the configured options:  \n# mount -o remount /dev/shm  \nNote:  It is recommended to use tmpfs  as the device/filesystem type as /dev/shm  is \nused as shared memory space by applications.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.2.3": {
        "Title": "Ensure nosuid option set on /dev/shm partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Setting this option on a file system prevents users from introducing privileged programs \nonto the system and allowing non -root users to execute them.",
        "Remediation": "- IF - a separate partition exists for /dev/shm . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/dev/shm  partition. See the fstab(5)  manual page for more information.  \nExample:  \ntmpfs /dev/shm    tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /dev/shm  with the configured options:  \n# mount -o remount /dev/shm  \nNote:  It is recommended to use tmpfs  as the device/filesystem type as /dev/shm  is \nused as shared memory space by applications.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.2.4": {
        "Title": "Ensure noexec option set on /dev/shm partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Setting this option on a file system prevents users from executing programs from shared \nmemory. This deters users from introducing potentially malicious software on the \nsystem.",
        "Remediation": "- IF - a separate partition exists for /dev/shm . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/dev/shm  partition.  \nExample:  \ntmpfs /dev/shm    tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /dev/shm  with the configured options:  \n# mount -o remount /dev/shm  \nNote:  It is recommended to use tmpfs  as the device/filesystem type as /dev/shm  is \nused as shared memory space by applications.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.3.1": {
        "Title": "Ensure separate partition exists for /home",
        "Description": "The /home  directory is used to support disk storage needs of local users.",
        "Rationale": "The default installation only creates a single / partition. Since the /home  directory \ncontains user generated data, there is a risk of resource exhaustion. It will essentially \nhave the whole disk available to fill up and impact the system as a whole. In addition, \nother operations on the system could fill up the disk unrelated to /home  and impact all \nlocal users.  \nConfiguring /home  as its own file system allows an administrator to set additional mount \noptions such as noexec/nosuid/nodev . These options limit an attacker's ability to \ncreate exploits on the system. In the case of /home  options such as \nusrquota/grpquota  may be considered to limit the impact that users can have on each \nother with regards to disk resource exhaustion. Other options allow for specific \nbehavior. See man mount  for exact details regarding filesystem -independent and \nfilesystem -specific options.  \nAs /home  contains user data, care should be taken to ensure the security and integrity \nof the data and mount point.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional  tools may \nintroduce their own security considerations.",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /home . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.1.2.3.2": {
        "Title": "Ensure nodev option set on /home partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /home  filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /home .",
        "Remediation": "- IF - a separate partition exists for /home . \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the \n/home  partition.  \nExample:  \n<device> /home    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /home  with the configured options:  \n# mount -o remount /home#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.3.3": {
        "Title": "Ensure nosuid option set on /home partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /home  filesystem is only intended for user file storage, set this option to \nensure that users cannot create setuid  files in /home .",
        "Remediation": "- IF - a separate partition exists for /home . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/home  partition.  \nExample:  \n<device> /home    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /home  with the configured options:  \n# mount -o remount /home#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.4.1": {
        "Title": "Ensure separate partition exists for /var",
        "Description": "The /var  directory is used by daemons and other system services to temporarily store \ndynamic data. Some directories created by these processes may be world -writable.",
        "Rationale": "The reasoning for mounting /var  on a separate partition is as follows.  \nThe default installation only creates a single / partition. Since the /var  directory may \ncontain world writable files and directories, there is a risk of resource exhaustion. It will \nessentially have the whole disk available to fill up and impact the system. In addition, \nother operations on the system could fill up the disk unre lated to /var  and cause \nunintended behavior across the system as the disk is full. See man auditd.conf  for \ndetails.  \nConfiguring /var  as its own file system allows an administrator to set additional mount \noptions such as noexec/nosuid/nodev . These options limit an attacker's ability to \ncreate exploits on the system. Other options allow for specific behavior. See man mount  \nfor exact details regarding filesystem -independent and filesystem -specific options.  \nAn example of exploiting /var  may be an attacker establishing a hard -link to a system \nsetuid  program and waiting for it to be updated. Once the program is updated, the \nhard-link can be broken and the attacker would have their own copy of the program. If \nthe program happened to have a security vulnerability, the attacker could continue to \nexploit the known flaw.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional  tools may \nintroduce their own security considerations.",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.1.2.4.2": {
        "Title": "Ensure nodev option set on /var partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var  filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /var .",
        "Remediation": "- IF - a separate partition exists for /var . \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the \n/var  partition.  \nExample:  \n<device> /var    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var  with the configured options:  \n# mount -o remount /var#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.4.3": {
        "Title": "Ensure nosuid option set on /var partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /var  filesystem is only intended for variable files such as logs, set this option \nto ensure that users cannot create setuid  files in /var .",
        "Remediation": "- IF - a separate partition exists for /var . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/var  partition.  \nExample:  \n<device> /var    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var  with the configured options:  \n# mount -o remount /var#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.5.1": {
        "Title": "Ensure separate partition exists for /var/tmp",
        "Description": "The /var/tmp  directory is a world -writable directory used for temporary storage by all \nusers and some applications. Temporary files residing in /var/tmp  are to be preserved \nbetween reboots.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/tmp  directory is \nworld -writable, there is a risk of resource exhaustion. In addition, other operations on \nthe system could fill up the disk unrelated to /var/tmp  and cause potential disruption to \ndaemons as the disk is full.  \nConfiguring /var/tmp  as its own file system allows an administrator to set additional \nmount options such as noexec/nosuid/nodev . These options limit an attacker's ability \nto create exploits on the system.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional  tools may \nintroduce their own security considerations.",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/tmp . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.1.2.5.2": {
        "Title": "Ensure nodev option set on /var/tmp partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var/tmp  filesystem is not intended to support devices, set this option to \nensure that users cannot create a block or character special devices in /var/tmp .",
        "Remediation": "- IF - a separate partition exists for /var/tmp . \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the \n/var/tmp  partition.  \nExample:  \n<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/tmp  with the configured options:  \n# mount -o remount /var/tmp#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.5.3": {
        "Title": "Ensure nosuid option set on /var/tmp partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /var/tmp  filesystem is only intended for temporary file storage, set this option \nto ensure that users cannot create setuid  files in /var/tmp .",
        "Remediation": "- IF - a separate partition exists for /var/tmp . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/var/tmp  partition.  \nExample:  \n<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/tmp  with the configured options:  \n# mount -o remount /var/tmp#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.5.4": {
        "Title": "Ensure noexec option set on /var/tmp partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /var/tmp  filesystem is only intended for temporary file storage, set this option \nto ensure that users cannot run executable binaries from /var/tmp .",
        "Remediation": "- IF - a separate partition exists for /var/tmp . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/var/tmp  partition.  \nExample:  \n<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/tmp  with the configured options:  \n# mount -o remount /var/tmp#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.6.1": {
        "Title": "Ensure separate partition exists for /var/log",
        "Description": "The /var/log  directory is used by system services to store log data.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/log  directory \ncontains log files which can grow quite large, there is a risk of resource exhaustion. It \nwill essentially have the whole disk available to fill up and impact the system as a whole.  \nConfiguring /var/log  as its own file system allows an administrator to set additional \nmount options such as noexec/nosuid/nodev . These options limit an attackers ability \nto create exploits on the system. Other options allow for specific behavior. See man \nmount  for exact details regarding filesystem -independent and filesystem -specific \noptions.  \nAs /var/log  contains log files, care should be taken to ensure the security and integrity \nof the data and mount point.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing, or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additiona l tools may \nintroduce their own security considerations.",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/log  . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.1.2.6.2": {
        "Title": "Ensure nodev option set on /var/log partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var/log  filesystem is not intended to support devices, set this option to \nensure that users cannot create a block or character special devices in /var/log .",
        "Remediation": "- IF - a separate partition exists for /var/log . \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the \n/var/log  partition.  \nExample:  \n<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/log  with the configured options:  \n# mount -o remount /var/log#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.6.3": {
        "Title": "Ensure nosuid option set on /var/log partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /var/log  filesystem is only intended for log files, set this option to ensure \nthat users cannot create setuid  files in /var/log .",
        "Remediation": "- IF - a separate partition exists for /var/log . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/var/log  partition.  \nExample:  \n<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/log  with the configured options:  \n# mount -o remount /var/log#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.6.4": {
        "Title": "Ensure noexec option set on /var/log partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /var/log  filesystem is only intended for log files, set this option to ensure \nthat users cannot run executable binaries from /var/log .",
        "Remediation": "- IF - a separate partition exists for /var/log . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/var/log  partition.  \nExample:  \n<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/log  with the configured options:  \n# mount -o remount /var/log#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.7.1": {
        "Title": "Ensure separate partition exists for /var/log/audit",
        "Description": "The auditing daemon, auditd , stores log data in the /var/log/audit  directory.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/log/audit  \ndirectory contains the audit.log  file which can grow quite large, there is a risk of \nresource exhaustion. It will essentially have the whole disk available to fill up and impact \nthe system as a whole. In addition, other operations on the system could fill up the disk \nunrelated to /var/log/audit  and cause auditd  to trigger its space_left_action  as \nthe disk is full. See man auditd.conf  for details.  \nConfiguring /var/log/audit  as its own file system allows an administrator to set \nadditional mount options such as noexec/nosuid/nodev . These options limit an \nattacker's ability to create exploits on the system. Other options allow for specific \nbehavior. See man mount  for exact details regarding filesystem -independent and \nfilesystem -specific options.  \nAs /var/log/audit  contains audit logs, care should be taken to ensure the security \nand integrity of the data and mount point.  \nImpact:  \nResizing filesystems is a common activity in cloud -hosted servers. Separate filesystem \npartitions may prevent successful resizing or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional  tools may \nintroduce their own security considerations.",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/log/audit . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab  as appropriate.#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.1.2.7.2": {
        "Title": "Ensure nodev option set on /var/log/audit partition",
        "Description": "The nodev  mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var/log/audit  filesystem is not intended to support devices, set this option \nto ensure that users cannot create a block or character special devices in \n/var/log/audit .",
        "Remediation": "- IF - a separate partition exists for /var/log/audit . \nEdit the /etc/fstab  file and add nodev  to the fourth field (mounting options) for the \n/var/log/audit  partition.  \nExample:  \n<device> /var/log/audit    <fstype>     \ndefaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var/log/audit  with the configured options:  \n# mount -o remount /var/log/audit#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.7.3": {
        "Title": "Ensure nosuid option set on /var/log/audit partition",
        "Description": "The nosuid  mount option specifies that the filesystem cannot contain setuid  files.",
        "Rationale": "Since the /var/log/audit  filesystem is only intended for variable files such as logs, \nset this option to ensure that users cannot create setuid  files in /var/log/audit .",
        "Remediation": "- IF - a separate partition exists for /var/log/audit . \nEdit the /etc/fstab  file and add nosuid  to the fourth field (mounting options) for the \n/var/log/audit  partition.  \nExample:  \n<device> /var/log/audit    <fstype>     \ndefaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var/log/audit  with the configured options:  \n# mount -o remount /var/log/audit#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.1.2.7.4": {
        "Title": "Ensure noexec option set on /var/log/audit partition",
        "Description": "The noexec  mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /var/log/audit  filesystem is only intended for audit logs, set this option to \nensure that users cannot run executable binaries from /var/log/audit .",
        "Remediation": "- IF - a separate partition exists for /var/log/audit . \nEdit the /etc/fstab  file and add noexec  to the fourth field (mounting options) for the \n/var/log/audit  partition.  \nExample:  \n<device> /var/log/audit    <fstype>     \ndefaults,rw,nosuid,nodev,noexec,relatime  0 0  \nRun the following command to remount /var/log/audit  with the configured options:  \n# mount -o remount /var/log/audit#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.2.1.1": {
        "Title": "Ensure GPG keys are configured (Manual)",
        "Description": "The RPM Package Manager implements GPG key signing to verify package integrity \nduring and after installation.",
        "Rationale": "It is important to ensure that updates are obtained from a valid source to protect against \nspoofing that could lead to the inadvertent installation of malware on the system. To this \nend, verify that GPG keys are configured correctly for your system.",
        "Remediation": "Update your package manager GPG keys in accordance with site policy.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.2.1.2": {
        "Title": "Ensure gpgcheck is globally activated",
        "Description": "The gpgcheck  option, found in the main section of the /etc/dnf/dnf.conf  and \nindividual /etc/yum.repos.d/*  files, determines if an RPM package's signature is \nchecked prior to its installation.",
        "Rationale": "It is important to ensure that an RPM's package signature is always checked prior to \ninstallation to ensure that the software is obtained from a trusted source.",
        "Remediation": "Edit /etc/dnf/dnf.conf  and set gpgcheck=1 : \nExample  \n# sed -i 's/^gpgcheck \\s*=\\s*.*/gpgcheck=1/' /etc/dnf/dnf.conf  \nEdit any failing files in /etc/yum.repos.d/*  and set all instances starting with \ngpgcheck  to 1. \nExample:  \n# find /etc/yum.repos.d/ -name \"*.repo\" -exec echo \"Checking:\" {} \\; -exec \nsed -i 's/^gpgcheck \\s*=\\s*.*/gpgcheck=1/' {} \\;#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.2.1.3": {
        "Title": "Ensure repo_gpgcheck is globally activated (Manual)",
        "Description": "The repo_gpgcheck  option, found in the main section of the /etc/dnf/dnf.conf  and \nindividual /etc/yum.repos.d/*  files, will perform a GPG signature check on the \nrepodata.",
        "Rationale": "It is important to ensure that the repository data signature is always checked prior to \ninstallation to ensure that the software is not tampered with in any way.  \nImpact:  \nNot all repositories, notably RedHat, support repo_gpgcheck . Take care to set this \nvalue to false (default) for particular repositories that do not support it. If enabled on \nrepositories that do not support repo_gpgcheck  installation of packages will fail.  \nResearch is required by the user to determine which repositories is configured on the \nlocal system and, from that list, which support repo_gpgcheck .",
        "Remediation": "Global configuration  \nEdit /etc/dnf/dnf.conf  and set repo_gpgcheck=1  in the [main]  section.  \nExample:  \n[main] \nrepo_gpgcheck=1  \nPer repository configuration  \nFirst check that the particular repository support GPG checking on the repodata.  \nEdit any failing files in /etc/yum.repos.d/*  and set all instances starting with \nrepo_gpgcheck  to 1.#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.2.1.4": {
        "Title": "Ensure package manager repositories are configured \n(Manual)",
        "Description": "Systems need to have the respective package manager repositories configured to \nensure that the system is able to receive the latest patches and updates.",
        "Rationale": "If a system's package repositories are misconfigured, important patches may not be \nidentified or a rogue repository could introduce compromised software.",
        "Remediation": "Configure your package manager repositories according to site policy.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.2.2.1": {
        "Title": "Ensure updates, patches, and additional security software \nare installed (Manual)",
        "Description": "Periodically patches are released for included software either due to security flaws or to \ninclude additional functionality.",
        "Rationale": "Newer patches may contain security enhancements that would not be available through \nthe latest full update. As a result, it is recommended that the latest software patches be \nused to take advantage of the latest functionality. As with any software installa tion, \norganizations need to determine if a given update meets their requirements and verify \nthe compatibility and supportability of any additional software against the update \nrevision that is selected.",
        "Remediation": "Use your package manager to update all packages on the system according to site \npolicy.  \nThe following command will install all available updates:  \n# dnf update  \nOnce the update process is complete, verify if reboot is required to load changes.  \ndnf needs -restarting -r#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.3.1.1": {
        "Title": "Ensure SELinux is installed",
        "Description": "SELinux provides Mandatory Access Control.",
        "Rationale": "Without a Mandatory Access Control system installed only the default Discretionary \nAccess Control system will be available.",
        "Remediation": "Run the following command to install SELinux : \n# dnf install libselinux#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.3.1.2": {
        "Title": "Ensure SELinux is not disabled in bootloader configuration",
        "Description": "Configure SELINUX to be enabled at boot time and verify that it has not been \noverwritten by the grub boot parameters.",
        "Rationale": "SELinux must be enabled at boot time in your grub configuration to ensure that the \ncontrols it provides are not overridden.  \nImpact:  \nFiles created while SELinux is disabled are not labeled at all. This behavior causes \nproblems when changing to enforcing mode because files are labeled incorrectly or are \nnot labeled at all. To prevent incorrectly labeled and unlabeled files from causing \nproblems, file systems are automatically relabeled when changing from the disabled \nstate to permissive or enforcing mode. This can be a long running process that should \nbe accounted for as it may extend downtime during initial re -boot.",
        "Remediation": "Run the following command to remove the selinux=0  and enforcing=0  parameters:  \ngrubby --update-kernel ALL --remove-args \"selinux=0 enforcing=0\"  \nRun the following command to remove the selinux=0  and enforcing=0  parameters if \nthey were created by the deprecated grub2-mkconfig  command:  \n# grep -Prsq -- \n'\\h*([^#\\n\\r]+\\h+)?kernelopts=([^# \\n\\r]+\\h+)?(selinux|enforcing)=0 \\b' \n/boot/grub2 /boot/efi && grub2 -mkconfig -o \"$(grep -Prl -- \n'\\h*([^#\\n\\r]+\\h+)?kernelopts=([^# \\n\\r]+\\h+)?(selinux|enforcing)=0 \\b' \n/boot/grub2 /boot/efi)\"#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.3.1.3": {
        "Title": "Ensure SELinux policy is configured",
        "Description": "Configure SELinux to meet or exceed the default targeted policy, which constrains \ndaemons and system software only.",
        "Rationale": "Security configuration requirements vary from site to site. Some sites may mandate a \npolicy that is stricter than the default policy, which is perfectly acceptable. This item is \nintended to ensure that at least the default recommendations are met.",
        "Remediation": "Edit the /etc/selinux/config  file to set the SELINUXTYPE parameter:  \nSELINUXTYPE=targeted#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.3.1.4": {
        "Title": "Ensure the SELinux mode is not disabled",
        "Description": "SELinux can run in one of three modes: disabled, permissive, or enforcing:  \n• Enforcing  - Is the default, and recommended, mode of operation; in enforcing \nmode SELinux operates normally, enforcing the loaded security policy on the \nentire system.  \n• Permissive  - The system acts as if SELinux is enforcing the loaded security \npolicy, including labeling objects and emitting access denial entries in the logs, \nbut it does not actually deny any operations. While not recommended for \nproduction systems, permissive mode  can be helpful for SELinux policy \ndevelopment.  \n• Disabled  - Is strongly discouraged; not only does the system avoid enforcing the \nSELinux policy, it also avoids labeling any persistent objects such as files, \nmaking it difficult to enable SELinux in the future  \nNote:  You can set individual domains to permissive mode while the system runs in \nenforcing mode. For example, to make the httpd_t domain permissive:  \n# semanage permissive -a httpd_t",
        "Rationale": "Running SELinux in disabled mode is strongly discouraged; not only does the system \navoid enforcing the SELinux policy, it also avoids labeling any persistent objects such \nas files, making it difficult to enable SELinux in the future.",
        "Remediation": "Run one of the following commands to set SELinux's running mode:  \nTo set SELinux mode to Enforcing : \n# setenforce 1  \n- OR - \nTo set SELinux mode to Permissive : \n# setenforce 0  \nEdit the /etc/selinux/config  file to set the SELINUX parameter:  \nFor Enforcing mode:  \nSELINUX=enforcing  \n- OR - \nFor Permissive mode:  \nSELINUX=permissive#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.3.1.5": {
        "Title": "Ensure the SELinux mode is enforcing",
        "Description": "SELinux can run in one of three modes: disabled, permissive, or enforcing:  \n• Enforcing  - Is the default, and recommended, mode of operation; in enforcing \nmode SELinux operates normally, enforcing the loaded security policy on the \nentire system.  \n• Permissive  - The system acts as if SELinux is enforcing the loaded security \npolicy, including labeling objects and emitting access denial entries in the logs, \nbut it does not actually deny any operations. While not recommended for \nproduction systems, permissive mode  can be helpful for SELinux policy \ndevelopment.  \n• Disabled  - Is strongly discouraged; not only does the system avoid enforcing the \nSELinux policy, it also avoids labeling any persistent objects such as files, \nmaking it difficult to enable SELinux in the future  \nNote:  You can set individual domains to permissive mode while the system runs in \nenforcing mode. For example, to make the httpd_t domain permissive:  \n# semanage permissive -a httpd_t",
        "Rationale": "Running SELinux in disabled mode the system not only avoids enforcing the SELinux \npolicy, it also avoids labeling any persistent objects such as files, making it difficult to \nenable SELinux in the future.  \nRunning SELinux in Permissive mode, though helpful for developing SELinux policy, \nonly logs access denial entries, but does not deny any operations.  \nImpact:  \nRunning SELinux in Enforcing mode may block intended access to files or processes if \nthe SELinux policy is not correctly configured. If this occurs, review the system logs for \ndetails and update labels or policy as appropriate.",
        "Remediation": "Run the following command to set SELinux's running mode:  \n# setenforce 1  \nEdit the /etc/selinux/config  file to set the SELINUX parameter:  \nFor Enforcing mode:  \nSELINUX=enforcing#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.3.1.6": {
        "Title": "Ensure no unconfined services exist (Manual)",
        "Description": "Unconfined processes run in unconfined domains",
        "Rationale": "For unconfined processes, SELinux policy rules are applied, but policy rules exist that \nallow processes running in unconfined domains almost all access. Processes running in \nunconfined domains fall back to using DAC rules exclusively. If an unconfined proc ess \nis compromised, SELinux does not prevent an attacker from gaining access to system \nresources and data, but of course, DAC rules are still used. SELinux is a security \nenhancement on top of DAC rules – it does not replace them  \nImpact:  \nConfining a service that inherently requires unconfined access to function may disrupt \nits intended operations. This restriction may lead to downtime, degraded performance, \nor loss in functionality. It is crucial to analyze and adjust SELinux policies in a ccordance \nwith site security policies and operational requirements.",
        "Remediation": "Investigate any unconfined processes found during the audit action. If necessary create \na customize SELinux policy to allow necessary actions for the service.  \nWarning:  Knowledge about creating and configuring SELinux policies is needed. A \nBasic example on how to create a policy is included below.  \n1. Identify the unconfined service: determine the name and process of the service  \n2. Identify the functionality: determine if the functionality is required for operations  \n3. Create or add to the custom allow list in the SELinux policy configuration  \nExample SELinux policy configuration: service_allowlist_policy.te  \n# Example SELinux policy configuration for allowing access to specific \nactions and resources for a service  \n \nmodule my_service 1.0;  \n \nrequire {  \n    type my_service_t;  \n    type system_resource_t;  \n    class file { read write execute };  \n    class dir { read wri te add_name };  \n    class tcp_socket name_connect;  \n} \n \nallow my_service_t system_resource_t:file { read write execute }; # Allow \nmy_service_t to read, write, and execute files with the system_resource_t \ncontext \n \nallow my_service_t system_resource_t:dir { rea d write add_name }; # Allow \nmy_service_t to read and write to directories with the system_resource_t \ncontext \n \nallow my_service_t system_resource_t:tcp_socket name_connect; # Allow \nmy_service_t to establish TCP connections  \n4. Compile the policy  \n# checkmodule -M -, -o service_allowlist_policy.mod \nservice_allowlist_policy.te  \n5. Create the package  \n# semodule_package -o service_allowlist_policy.pp -m \nservice_allowlist_policy.mod  \n6. Load the policy  \n# semodule -i service_allowlist_policy.pp  \n7. Apply the policy to the service  \n# chcon -t se service_allowlist_policy /path/to/service_binary#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.3.1.7": {
        "Title": "Ensure the MCS Translation Service (mcstrans) is not \ninstalled",
        "Description": "The mcstransd  daemon provides category label information to client processes \nrequesting information. The label translations are defined in \n/etc/selinux/targeted/setrans.conf",
        "Rationale": "Since this service is not used very often, remove it to reduce the amount of potentially \nvulnerable code running on the system.",
        "Remediation": "Run the following command to uninstall mcstrans : \n# dnf remove mcstrans#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.3.1.8": {
        "Title": "Ensure SETroubleshoot is not installed",
        "Description": "The SETroubleshoot service notifies desktop users of SELinux denials through a user -\nfriendly interface. The service provides important information around configuration \nerrors, unauthorized intrusions, and other potential errors.",
        "Rationale": "The SETroubleshoot service is an unnecessary daemon to have running on a server, \nespecially if X Windows is disabled.",
        "Remediation": "Run the following command to uninstall setroubleshoot : \n# dnf remove setroubleshoot#!/usr/bin/env bash",
        "L1": "False",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.4.1": {
        "Title": "Ensure bootloader password is set",
        "Description": "Setting the boot loader password will require that anyone rebooting the system must \nenter a password before being able to set command line boot parameters.",
        "Rationale": "Requiring a boot password upon execution of the boot loader will prevent an \nunauthorized user from entering boot parameters or changing the boot partition. This \nprevents users from weakening security (e.g. turning off SELinux at boot time).  \nImpact:  \nIf password protection is enabled, only the designated superuser can edit a GRUB 2 \nmenu item by pressing e or access the GRUB 2 command line by pressing c \nIf GRUB 2 is set up to boot automatically to a password -protected menu entry the user \nhas no option to back out of the password prompt to select another menu entry. Holding \nthe SHIFT key will not display the menu in this case. The user must enter the corre ct \nusername and password. If unable, the configuration files will have to be edited via the \nLiveCD or other means to fix the problem",
        "Remediation": "Create an encrypted password with grub2-setpassword : \n# grub2-setpassword  \n \nEnter password: <password>  \nConfirm password: <password>#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.4.2": {
        "Title": "Ensure access to bootloader config is configured",
        "Description": "The grub files contain information on boot settings and passwords for unlocking boot \noptions.",
        "Rationale": "Setting the permissions to read and write for root only prevents non -root users from \nseeing the boot parameters or changing them. Non -root users who read the boot \nparameters may be able to identify weaknesses in security upon boot and be able to \nexploit th em.",
        "Remediation": "Run the following to update the mode, ownership, and group ownership of the grub \nconfiguration files:  \n- IF - the system uses UEFI (Files located in /boot/efi/EFI/* ) \nEdit /etc/fstab  and add the fmask=0077 , uid=0 , and gid=0  options:  \nExample:  \n<device> /boot/efi vfat defaults,umask=0027,fmask=0077,uid=0,gid=0 0 0  \nNote:  This may require a re -boot to enable the change  \n- OR - \n- IF - the system uses BIOS (Files located in /boot/grub2/* ) \nRun the following commands to set ownership and permissions on your grub \nconfiguration file(s):  \n# [ -f /boot/grub2/grub.cfg ] && chown root:root /boot/grub2/grub.cfg  \n# [ -f /boot/grub2/grub.cfg ] && chmod u -x,go-rwx /boot/grub2/grub.cfg  \n \n# [ -f /boot/grub2/grubenv ] && chown root:root /boot/grub2/grubenv  \n# [ -f /boot/grub2/grubenv ] && chmod u -x,go-rwx /boot/grub2/grubenv  \n \n# [ -f /boot/grub2/user.cfg ] && chown root:root /boot/grub2/user.cfg  \n# [ -f /boot/grub2/user.cfg ] && chmod u -x,go-rwx /boot/grub2/user.cfg#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.5.1": {
        "Title": "Ensure address space layout randomization is enabled",
        "Description": "Address space layout randomization (ASLR) is an exploit mitigation technique which \nrandomly arranges the address space of key data areas of a process.",
        "Rationale": "Randomly placing virtual memory regions will make it difficult to write memory page \nexploits as the memory placement will be consistently shifting.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• kernel.randomize_va_space = 2  \nExample:  \n# printf \"  \nkernel.randomize_va_space = 2  \n\" >> /etc/sysctl.d/60 -kernel_sysctl.conf  \nRun the following command to set the active kernel parameter:  \n# sysctl -w kernel.randomize_va_space=2  \nNote:  If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten  \nDefault Value:  \nkernel.randomize_va_space = 2#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.5.2": {
        "Title": "Ensure ptrace_scope is restricted",
        "Description": "The ptrace()  system call provides a means by which one process (the \"tracer\") may \nobserve and control the execution of another process (the \"tracee\"), and examine and \nchange the tracee's memory and registers.",
        "Rationale": "If one application is compromised, it would be possible for an attacker to attach to other \nrunning processes (e.g. Bash, Firefox, SSH sessions, GPG agent, etc) to extract \nadditional credentials and continue to expand the scope of their attack.  \nEnabling restricted mode will limit the ability of a compromised process to \nPTRACE_ATTACH on other processes running under the same user. With restricted \nmode, ptrace will continue to work with root user.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• kernel.yama.ptrace_scope = 1  \nExample:  \n# printf \"  \nkernel.yama.ptrace_scope = 1  \n\" >> /etc/sysctl.d/60 -kernel_sysctl.conf  \nRun the following command to set the active kernel parameter:  \n# sysctl -w kernel.yama.ptrace_scope=1  \nNote:  If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.5.3": {
        "Title": "Ensure core dump backtraces are disabled",
        "Description": "A core dump is the memory of an executable program. It is generally used to determine \nwhy a program aborted. It can also be used to glean confidential information from a core \nfile.",
        "Rationale": "A core dump includes a memory image taken at the time the operating system \nterminates an application. The memory image could contain sensitive data and is \ngenerally useful only for developers trying to debug problems, increasing the risk to the \nsystem.",
        "Remediation": "Create or edit the file /etc/systemd/coredump.conf , or a file in the \n/etc/systemd/coredump.conf.d  directory ending in .conf . \nEdit or add the following line in the [Coredump]  section:  \nProcessSizeMax=0  \nExample:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.5.4": {
        "Title": "Ensure core dump storage is disabled",
        "Description": "A core dump is the memory of an executable program. It is generally used to determine \nwhy a program aborted. It can also be used to glean confidential information from a core \nfile.",
        "Rationale": "A core dump includes a memory image taken at the time the operating system \nterminates an application. The memory image could contain sensitive data and is \ngenerally useful only for developers trying to debug problems.",
        "Remediation": "Create or edit the file /etc/systemd/coredump.conf , or a file in the \n/etc/systemd/coredump.conf.d  directory ending in .conf . \nEdit or add the following line in the [Coredump]  section:  \nStorage=none  \nExample:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.6.1": {
        "Title": "Ensure system wide crypto policy is not set to legacy",
        "Description": "When a system -wide policy is set up, the default behavior of applications will be to \nfollow the policy. Applications will be unable to use algorithms and protocols that do not \nmeet the policy, unless you explicitly request the application to do so.  \nThe system -wide crypto -policies followed by the crypto core components allow \nconsistently deprecating and disabling algorithms system -wide.  \nThe LEGACY  policy ensures maximum compatibility with version 5 of the operating \nsystem and earlier; it is less secure due to an increased attack surface. In addition to \nthe DEFAULT  level algorithms and protocols, it includes support for the TLS 1.0  and 1.1 \nprotocols. The algorithms DSA, 3DES , and RC4 are allowed, while RSA keys  and \nDiffie-Hellman  parameters are accepted if they are at least 1023 bits long.",
        "Rationale": "If the LEGACY  system -wide crypto policy is selected, it includes support for TLS 1.0, TLS \n1.1, and SSH2 protocols or later. The algorithms DSA, 3DES, and RC4 are allowed, \nwhile RSA and Diffie -Hellman parameters are accepted if larger than 1023 -bits. \nThese legacy protocols and algorithms can make the system vulnerable to attacks, \nincluding those listed in RFC 7457  \nImpact:  \nEnvironments that require compatibility with older insecure protocols may require the \nuse of the less secure LEGACY  policy level.",
        "Remediation": "Run the following command to change the system -wide crypto policy  \n# update -crypto-policies --set <CRYPTO POLICY>  \nExample:  \n# update -crypto-policies --set DEFAULT  \nRun the following to make the updated system -wide crypto policy active  \n# update -crypto-policies  \nDefault Value:  \nDEFAULT#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.6.2": {
        "Title": "Ensure system wide crypto policy is not set in sshd \nconfiguration",
        "Description": "System -wide Crypto policy can be over -ridden or opted out of for openSSH",
        "Rationale": "Over -riding or opting out of the system -wide crypto policy could allow for the use of less \nsecure Ciphers, MACs, KexAlgorithms and GSSAPIKexAlgorithm  \nNote:  If changes to the system -wide crypto policy are required to meet local site policy \nfor the openSSH server, these changes should be done with a sub-policy  assigned to \nthe system -wide crypto policy. For additional information see the CRYPTO -\nPOLICIES(7) man page",
        "Remediation": "Run the following commands:  \n# sed -ri \"s/^\\s*(CRYPTO_POLICY \\s*=.*)$/# \\1/\" /etc/sysconfig/sshd  \n \n# systemctl reload sshd#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.6.3": {
        "Title": "Ensure system wide crypto policy disables sha1 hash and \nsignature support",
        "Description": "SHA-1 (Secure Hash Algorithm) is a cryptographic hash function that produces a 160 bit \nhash value.",
        "Rationale": "The SHA -1 hash function has an inherently weak design, and advancing cryptanalysis \nhas made it vulnerable to attacks. The most significant danger for a hash algorithm is \nwhen a \"collision\" which happens when two different pieces of data produce the same \nhash value occurs. This hashing algorithm has been considered weak since 2005.  \nNote:  The use of SHA -1 with hashbased message authentication codes (HMAC) do not \nrely on the collision resistance of the corresponding hash function, and therefore the \nrecent attacks on SHA -1 have a significantly lower impact on the use of SHA -1 for \nHMAC. Becau se of this, the recommendation does not disable the hmac -sha1 MAC.",
        "Remediation": "Note:  \n• The commands below are written for the included DEFAULT  system -wide crypto \npolicy. If another policy is in use and follows local site policy, replace DEFAULT  \nwith the name of your system -wide crypto policy.  \n• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g. \nDEFAULT:NO -SHA1:NO-SSHCBC  \n• Subpolicies:  \no Not included in the update-crypto-policies --set command will not \nbe applied to the system wide crypto policy.  \no  \nmust exist  before they can be applied to the system wide crypto policy.  \no  \n.pmod  file filenames must be in all upper case, upper case, e.g. NO-\nSHA1.pmod , or they will not be read by the update-crypto-policies --\nset command.  \nCreate or edit a file in /etc/crypto -policies/policies/modules/  ending in .pmod  \nand add or modify the following lines:  \nhash = -SHA1 \nsign = -*-SHA1 \nsha1_in_certs = 0  \nExample:  \n# printf '%s \\n' \"# This is a subpolicy dropping the SHA1 hash and signature \nsupport\" \"hash = -SHA1\" \"sign = -*-SHA1\" \"sha1_in_certs = 0\" >> /etc/crypto -\npolicies/policies/modules/NO -SHA1.pmod  \nRun the following command to update the system -wide cryptographic policy  \n# update -crypto-policies --set \n<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>  \nExample:  \nupdate-crypto-policies --set DEFAULT:NO -SHA1 \nRun the following command to reboot the system to make your cryptographic settings \neffective for already running services and applications:  \n# reboot#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.6.4": {
        "Title": "Ensure system wide crypto policy disables macs less than \n128 bits",
        "Description": "Message Authentication Code (MAC) algorithm is a family of cryptographic functions \nthat is parameterized by a symmetric key. Each of the functions can act on input data \n(called a “message”) of variable length to produce an output value of a specified lengt h. \nThe output value is called the MAC of the input message.  \nA MAC algorithm can be used to provide data -origin authentication and data -integrity \nprotection",
        "Rationale": "Weak algorithms continue to have a great deal of attention as a weak spot that can be \nexploited with expanded computing power. An attacker that breaks the algorithm could \ntake advantage of a MiTM position to decrypt the tunnel and capture credentials and \ninformation.  \nA MAC algorithm must be computationally infeasible to determine the MAC of a \nmessage without knowledge of the key, even if one has already seen the results of \nusing that key to compute the MAC's of other messages.",
        "Remediation": "Note:  \n• The commands below are written for the included DEFAULT  system -wide crypto \npolicy. If another policy is in use and follows local site policy, replace DEFAULT  \nwith the name of your system -wide crypto policy.  \n• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g. \nDEFAULT:NO -SHA1:NO-SSHCBC  \n• Subpolicies:  \no Not included in the update-crypto-policies --set command will not \nbe applied to the system wide crypto policy.  \no must exist  before they can be applied to the system wide crypto policy.  \no .pmod  file filenames must be in all upper case, upper case, e.g. NO-\nWEAKMAC.pmod , or they will not be read by the update-crypto-policies \n--set command.  \nCreate or edit a file in /etc/crypto -policies/policies/modules/  ending in .pmod  \nand add or modify one of the following lines:  \nmac = -*-64* # Disables weak macs  \nExample:  \n# printf '%s \\n' \"# This is a subpolicy to disable weak macs\" \"mac = -*-64\" >> \n/etc/crypto -policies/policies/modules/NO -WEAKMAC.pmod  \nRun the following command to update the system -wide cryptographic policy  \n# update -crypto-policies --set \n<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>  \nExample:  \nupdate-crypto-policies --set DEFAULT:NO -SHA1:NO-WEAKMAC \nRun the following command to reboot the system to make your cryptographic settings \neffective for already running services and applications:  \n# reboot#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.6.5": {
        "Title": "Ensure system wide crypto policy disables cbc for ssh",
        "Description": "Cypher Block Chaining (CBC) is an algorithm that uses a block cipher.",
        "Rationale": "A vulnerability exists in SSH messages that employ CBC mode that may allow an \nattacker to recover plaintext from a block of ciphertext. If exploited, this attack can \npotentially allow an attacker to recover up to 32 bits of plaintext from an arbitrary bloc k \nof ciphertext from a connection secured using the SSH protocol.  \nImpact:  \nCBC ciphers might be the only common cyphers when connecting to older SSH clients \nand servers",
        "Remediation": "Note:  \n• The commands below are written for the included DEFAULT  system -wide crypto \npolicy. If another policy is in use and follows local site policy, replace DEFAULT  \nwith the name of your system -wide crypto policy.  \n• CBC can be turned off globally by using the argument cipher  opposed to \ncipher@SSH  \n• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g. \nDEFAULT:NO -SHA1:NO-SSHCBC  \n• Subpolicies:  \no Not included in the update-crypto-policies --set command will not \nbe applied to the system wide crypto policy.  \no must exist  before they can be applied to the system wide crypto policy.  \no .pmod  file filenames must be in all upper case, upper case, e.g. NO-\nSSHCBC.pmod , or they will not be read by the update-crypto-policies \n--set command.  \nCreate or edit a file in /etc/crypto -policies/policies/modules/  \nending in .pmod  and add or modify one of the the following lines:  \ncipher@SSH = -*-CBC # Disables the CBC cipher for SSH  \nExample:  \n# printf '%s \\n' \"# This is a subpolicy to disable all CBC mode ciphers\" \"# \nfor the SSH protocol (libssh and OpenSSH)\" \"cipher@SSH = -*-CBC\" >> \n/etc/crypto -policies/policies/modules/NO -SSHCBC.pmod  \nRun the following command to update the system -wide cryptographic policy  \n# update -crypto-policies --set \n<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>  \nExample:  \nupdate-crypto-policies --set DEFAULT:NO -SHA1:NO-WEAKMAC:NO -SSHCBC \nRun the following command to reboot the system to make your cryptographic settings \neffective for already running services and applications:  \n# reboot#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.6.6": {
        "Title": "Ensure system wide crypto policy disables chacha20 -\npoly1305 for ssh (Manual)",
        "Description": "ChaCha20 -Poly1305 is an authenticated encryption with additional data (AEAD) \nalgorithm, that combines the ChaCha20 stream cipher with the Poly1305 message \nauthentication code. Its usage in IETF protocols is standardized in RFC 8439.",
        "Rationale": "A vulnerability exists in ChaCha20 -Poly1305 as referenced in CVE-2023-48795",
        "Remediation": "Note:  \n• The commands below are written for the included DEFAULT  system -wide crypto \npolicy. If another policy is in use and follows local site policy, replace DEFAULT  \nwith the name of your system -wide crypto policy.  \n• chacha20 -poly1305  can be turned off globally by using the argument cipher  \nopposed to cipher@SSH  \n• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g. \nDEFAULT:NO -SHA1:NO-SSHCBC  \n• Subpolicies:  \no Not included in the update-crypto-policies --set command will not \nbe applied to the system wide crypto policy.  \no must exist  before they can be applied to the system wide crypto policy.  \no .pmod  file filenames must be in all upper case, upper case, e.g. NO-\nSSHCHACHA20.pmod , or they will not be read by the update-crypto-\npolicies --set command.  \n- IF - CVE-2023-48795  has been addressed, and it meets local site policy, this \nrecommendation may be skipped.  \nCreate or edit a file in /etc/crypto -policies/policies/modules/  ending in .pmod  \nand add or modify one of the the following lines:  \ncipher@SSH = -CHACHA20 -POLY1305 # Disables the chacha20 -poly1305 cipher for \nSSH \nExample:  \n# printf '%s \\n' \"# This is a subpolicy to disable the chacha20 -poly1305 \nciphers\" \"# for the SSH protocol (libssh and OpenSSH)\" \"cipher@SSH = -\nCHACHA20 -POLY1305\" >> /etc/crypto -policies/policies/modules/NO -\nSSHCHACHA20.pmod  \nRun the following command to update the system -wide cryptographic policy  \n# update -crypto-policies --set \n<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>  \nExample:  \n# update -crypto-policies --set DEFAULT:NO -SHA1:NO-WEAKMAC:NO -SSHCBC:NO -\nSSHCHACHA20  \nRun the following command to reboot the system to make your cryptographic settings \neffective for already running services and applications:  \n# reboot#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.6.7": {
        "Title": "Ensure system wide crypto policy disables EtM for ssh \n(Manual)",
        "Description": "Encrypt -then-MAC (EtM) - The ciphertext is generated by encrypting the plaintext and \nthen appending a MAC of the encrypted plaintext",
        "Rationale": "There is an effective attack against SSH's use of Cypher -Block -Chaining (CBC) with \nEncrypt -then-MAC as referenced in CVE-2023-48795",
        "Remediation": "Note:  \n• The commands below are written for the included DEFAULT  system -wide crypto \npolicy. If another policy is in use and follows local site policy, replace DEFAULT  \nwith the name of your system -wide crypto policy.  \n• EtM can be turned off globally by using the argument etm opposed to etm@SSH  \n• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g. \nDEFAULT:NO -SHA1:NO-SSHCBC  \n• Subpolicies:  \no Not included in the update-crypto-policies --set command will not \nbe applied to the system wide crypto policy.  \no must exist  before they can be applied to the system wide crypto policy.  \no .pmod  file filenames must be in all upper case, upper case, e.g. NO-\nSSHCHACHA20.pmod , or they will not be read by the update-crypto-\npolicies --set command.  \n- IF - CVE-2023-48795  has been addressed, and it meets local site policy, this \nrecommendation may be skipped.  \nCreate or edit a file in /etc/crypto -policies/policies/modules/  ending in .pmod  \nand add or modify the following line:  \netm@SSH = DISABLE_ETM # This disables EtM for openSSH and libssh  \nExample:  \n# printf '%s \\n' \"# This is a subpolicy to disable Encrypt then MAC\" \"# for \nthe SSH protocol (libssh and OpenSSH)\" \"etm@SSH = DISABLE_ETM\" >> \n/etc/crypto -policies/policies/modules/NO -SSHETM.pmod  \nRun the following command to update the system -wide cryptographic policy  \n# update -crypto-policies --set \n<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>  \nExample:  \n# update -crypto-policies --set DEFAULT:NO -SHA1:NO-WEAKMAC:NO -SSHCBC:NO -\nSSHCHACHA20:NO -SSHETM \nRun the following command to reboot the system to make your cryptographic settings \neffective for already running services and applications:  \n# reboot#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.7.1": {
        "Title": "Ensure message of the day is configured properly",
        "Description": "The contents of the /etc/motd  file are displayed to users after login and function as a \nmessage of the day for authenticated users.  \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8)  supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system \nversion",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch lev el \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once the y \nhave logged in.",
        "Remediation": "Edit the file found in /etc/motd.d/*  with the appropriate contents according to your \nsite policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform  \n- OR - \n- IF - the motd  is not used, this file can be removed.  \nRun the following command to remove the motd  file: \n# rm /etc/motd  \nRun the following script and review and/or update all returned files' contents to:  \n• Remove all system information ( \\v, \\r; \\m, \\s) \n• Remove any refence to the operating system  \n• Ensure contents follow local site policy  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.7.2": {
        "Title": "Ensure local login warning banner is configured properly",
        "Description": "The contents of the /etc/issue  file are displayed to users prior to login for local \nterminals.  \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8)  supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system \nversion - or the operating system's name",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch lev el \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once the y \nhave logged in.",
        "Remediation": "Edit the /etc/issue  file with the appropriate contents according to your site policy, \nremove any instances of \\m , \\r , \\s , \\v or references to the OS platform  \nExample:  \n# echo \"Authorized users only. All activity may be monitored and reported.\" > \n/etc/issue#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.7.3": {
        "Title": "Ensure remote login warning banner is configured properly",
        "Description": "The contents of the /etc/issue.net  file are displayed to users prior to login for remote \nconnections from configured services.  \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8)  supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system \nversion",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch lev el \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once the y \nhave logged in.",
        "Remediation": "Edit the /etc/issue.net  file with the appropriate contents according to your site policy, \nremove any instances of \\m , \\r , \\s , \\v or references to the OS platform  \nExample:  \n# echo \"Authorized users only. All activity may be monitored and reported.\" > \n/etc/issue.net#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.7.4": {
        "Title": "Ensure access to /etc/motd is configured",
        "Description": "The contents of the /etc/motd  file are displayed to users after login and function as a \nmessage of the day for authenticated users.",
        "Rationale": "- IF - the /etc/motd  file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/motd : \n# chown root:root $(readlink -e /etc/motd)  \n# chmod u -x,go-wx $(readlink -e /etc/motd)  \n- OR - \nRun the following command to remove the /etc/motd  file: \n# rm /etc/motd#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.7.5": {
        "Title": "Ensure access to /etc/issue is configured",
        "Description": "The contents of the /etc/issue  file are displayed to users prior to login for local \nterminals.",
        "Rationale": "- IF - the /etc/issue  file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/issue : \n# chown root:root $(readlink -e /etc/issue)  \n# chmod u -x,go-wx $(readlink -e /etc/issue)  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.7.6": {
        "Title": "Ensure access to /etc/issue.net is configured",
        "Description": "The contents of the /etc/issue.net  file are displayed to users prior to login for remote \nconnections from configured services.",
        "Rationale": "- IF - the /etc/issue.net  file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/issue.net : \n# chown root:root $(readlink -e /etc/issue.net)  \n# chmod u -x,go-wx $(readlink -e /etc/issue.net)  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.1": {
        "Title": "Ensure GNOME Display Manager is removed",
        "Description": "The GNOME Display Manager (GDM) is a program that manages graphical display \nservers and handles graphical user logins.",
        "Rationale": "If a Graphical User Interface (GUI) is not required, it should be removed to reduce the \nattack surface of the system.  \nImpact:  \nRemoving the GNOME Display manager will remove the Graphical User Interface (GUI) \nfrom the system.",
        "Remediation": "Run the following command to remove the gdm package  \n# dnf remove gdm#!/usr/bin/env bash",
        "L1": "False",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "1.8.10": {
        "Title": "Ensure XDMCP is not enabled",
        "Description": "X Display Manager Control Protocol (XDMCP) is designed to provide authenticated \naccess to display management services for remote displays",
        "Rationale": "XDMCP is inherently insecure.  \n• XDMCP is not a ciphered protocol. This may allow an attacker to capture \nkeystrokes entered by a user  \n• XDMCP is vulnerable to man -in-the-middle attacks. This may allow an attacker to \nsteal the credentials of legitimate users by impersonating the XDMCP server.",
        "Remediation": "Edit the file /etc/gdm/custom.conf  and remove the line:  \nEnable=true  \nDefault Value:  \nfalse (This is denoted by no Enabled= entry in the file /etc/gdm/custom.conf  in the \n[xdmcp] section  \n   CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software  \n Uninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction.   ● ● \nv7 9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running  \n Ensure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1040, T1040.000, T1056, \nT1056.001, T1557, \nT1557.000  TA0002  M1050#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.2": {
        "Title": "Ensure GDM login banner is configured",
        "Description": "GDM is the GNOME Display Manager which handles graphical login for GNOME based \nsystems.",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place.",
        "Remediation": "Run the following script to verify that the banner message is enabled and set:   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.3": {
        "Title": "Ensure GDM disable -user-list option is enabled",
        "Description": "GDM is the GNOME Display Manager which handles graphical login for GNOME based \nsystems.  \nThe disable-user-list  option controls if a list of users is displayed on the login \nscreen",
        "Rationale": "Displaying the user list eliminates half of the Userid/Password equation that an \nunauthorized person would need to log on.",
        "Remediation": "Run the following script to enable the disable-user-list  option:  \nNote:  the l_gdm_profile  variable in the script can be changed if a different profile \nname is desired in accordance with local site policy.  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.4": {
        "Title": "Ensure GDM screen locks when the user is idle",
        "Description": "GNOME Desktop Manager can make the screen lock automatically whenever the user \nis idle for some amount of time.  \n• idle-delay=uint32 {n}  - Number of seconds of inactivity before the screen \ngoes blank  \n• lock-delay=uint32 {n}  - Number of seconds after the screen is blank before \nlocking the screen  \nExample key file:  \n# Specify the dconf path  \n[org/gnome/desktop/session]  \n \n# Number of seconds of inactivity before the screen goes blank  \n# Set to 0 seconds if you want to deactivate the screensaver.  \nidle-delay=uint32 900  \n \n# Specify the dconf path  \n[org/gnome/desktop/screensaver]  \n \n# Number of seconds after the screen is blank before locking the screen  \nlock-delay=uint32 5",
        "Rationale": "Setting a lock -out value reduces the window of opportunity for unauthorized user access \nto another user's session that has been left unattended.",
        "Remediation": "Create or edit a file in the /etc/dconf/profile/  and verify it includes the following:  \nuser-db:user \nsystem-db:{NAME_OF_DCONF_DATABASE}  \nNote:  local  is the name of a dconf database used in the examples.  \nExample:  \n# echo -e '\\nuser-db:user\\nsystem-db:local' >> /etc/dconf/profile/user  \nCreate the directory /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/  if it doesn't \nalready exist:  \nExample:  \n# mkdir /etc/dconf/db/local.d  \nCreate the key file /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/{FILE_NAME}  to \nprovide information for the {NAME_OF_DCONF_DATABASE}  database:  \nExample script:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.5": {
        "Title": "Ensure GDM screen locks cannot be overridden",
        "Description": "GNOME Desktop Manager can make the screen lock automatically whenever the user \nis idle for some amount of time.  \nBy using the lockdown mode in dconf, you can prevent users from changing specific \nsettings.  \nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. \nThe files inside this directory contain a list of keys or subpaths to lock. Just as with the \nkeyfiles, you may add any number of files to this directory.  \nExample Lock File:  \n# Lock desktop screensaver settings  \n/org/gnome/desktop/session/idle -delay \n/org/gnome/desktop/screensaver/lock -delay",
        "Rationale": "Setting a lock -out value reduces the window of opportunity for unauthorized user access \nto another user's session that has been left unattended.  \nWithout locking down the system settings, user settings take precedence over the \nsystem settings.",
        "Remediation": "Run the following script to ensure screen locks cannot be overridden:   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.6": {
        "Title": "Ensure GDM automatic mounting of removable media is \ndisabled",
        "Description": "By default GNOME automatically mounts removable media when inserted as a \nconvenience to the user.",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in system even if they lacked permissions to mount \nit themselves.  \nImpact:  \nThe use of portable hard drives is very common for workstation users. If your \norganization allows the use of portable storage or media on workstations and physical \naccess controls to workstations is considered adequate there is little value add in \nturning off automounting.",
        "Remediation": "Run the following script to disable automatic mounting of media for all GNOME users:   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.7": {
        "Title": "Ensure GDM disabling automatic mounting of removable \nmedia is not overridden",
        "Description": "By default GNOME automatically mounts removable media when inserted as a \nconvenience to the user  \nBy using the lockdown mode in dconf, you can prevent users from changing specific \nsettings.  \nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. \nThe files inside this directory contain a list of keys or subpaths to lock. Just as with the \nkeyfiles, you may add any number of files to this directory.  \nExample Lock File:  \n# Lock automount settings  \n/org/gnome/desktop/media -handling/automount  \n/org/gnome/desktop/media -handling/automount -open",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in system even if they lacked permissions to mount \nit themselves.  \nImpact:  \nThe use of portable hard drives is very common for workstation users",
        "Remediation": "Run the following script to lock disable automatic mounting of media for all GNOME \nusers:   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.8": {
        "Title": "Ensure GDM autorun -never is enabled",
        "Description": "The autorun-never  setting allows the GNOME Desktop Display Manager to disable \nautorun through GDM.",
        "Rationale": "Malware on removable media may take advantage of Autorun features when the media \nis inserted into a system and execute.",
        "Remediation": "Run the following script to set autorun-never  to true  for GDM users:   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "1.8.9": {
        "Title": "Ensure GDM autorun -never is not overridden",
        "Description": "The autorun -never setting allows the GNOME Desktop Display Manager to disable \nautorun through GDM.  \nBy using the lockdown mode in dconf, you can prevent users from changing specific \nsettings.  \nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. \nThe files inside this directory contain a list of keys or subpaths to lock. Just as with the \nkeyfiles, you may add any number of files to this directory.  \nExample Lock File:  \n# Lock desktop media -handling settings  \n/org/gnome/desktop/media -handling/autorun -never",
        "Rationale": "Malware on removable media may take advantage of Autorun features when the media \nis inserted into a system and execute.",
        "Remediation": "Run the following script to ensure that autorun-never=true  cannot be overridden:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.1": {
        "Title": "Ensure autofs services are not in use",
        "Description": "autofs  allows automatic mounting of devices, typically including CD/DVDs and USB \ndrives.",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in system even if they lacked permissions to mount \nit themselves.  \nImpact:  \nThe use of portable hard drives is very common for workstation users. If your \norganization allows the use of portable storage or media on workstations and physical \naccess controls to workstations is considered adequate there is little value add in \nturning off automounting.  \nThere may be packages that are dependent on the autofs  package. If the autofs  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the autofs  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the autofs.service  leaving the \nautofs  package installed.",
        "Remediation": "Run the following commands to stop autofs.service  and remove autofs  package:  \n# systemctl stop autofs.service  \n# dnf remove autofs  \n- OR - \n- IF - the autofs  package is required as a dependency:  \nRun the following commands to stop and mask autofs.service : \n# systemctl stop autofs.service  \n# systemctl mask autofs.service#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.10": {
        "Title": "Ensure nis server services are not in use",
        "Description": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client -\nserver directory service protocol used to distribute system configuration files. The NIS \nclient ( ypbind  ) was used to bind a machine to an NIS server and receive the \ndistributed configuration files.",
        "Rationale": "The NIS service is inherently an insecure system that has been vulnerable to DOS \nattacks, buffer overflows and has poor authentication for querying NIS maps. NIS \ngenerally has been replaced by such protocols as Lightweight Directory Access \nProtocol (LDAP).  It is recommended that the service be removed.  \nImpact:  \nThere may be packages that are dependent on the ypserv  package. If the ypserv  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the ypserv  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the ypserv.service  leaving the \nypserv  package installed.",
        "Remediation": "Run the following commands to stop ypserv.service  and remove ypserv  package:  \n# systemctl stop ypserv.service  \n# dnf remove ypserv  \n- OR - \n- IF - the ypserv  package is required as a dependency:  \nRun the following commands to stop and mask ypserv.service : \n# systemctl stop ypserv.service  \n# systemctl mask ypserv.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.11": {
        "Title": "Ensure print server services are not in use",
        "Description": "The Common Unix Print System (CUPS) provides the ability to print to both local and \nnetwork printers. A system running CUPS can also accept print jobs from remote \nsystems and print them to local printers. It also provides a web based remote \nadministration capability.",
        "Rationale": "If the system does not need to print jobs or accept print jobs from other systems, it is \nrecommended that CUPS be removed to reduce the potential attack surface.  \nImpact:  \nRemoving the cups package, or disabling cups.socket  and/or cups.service  will \nprevent printing from the system, a common task for workstation systems.  \nThere may be packages that are dependent on the cups  package. If the cups  package \nis removed, these dependent packages will be removed as well. Before removing the \ncups  package, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask cups.socket  and \ncups.service  leaving the cups  package installed.",
        "Remediation": "Run the following commands to stop cups.socket  and cups.service , and remove the \ncups  package:  \n# systemctl stop cups.socket cups.service  \n# dnf remove cups  \n- OR - \n- IF - the cups  package is required as a dependency:  \nRun the following commands to stop and mask the cups.socket  and cups.service : \n# systemctl stop cups.socket cups.service  \n# systemctl mask cups.socket cups.service#!/usr/bin/env bash",
        "L1": "False",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.12": {
        "Title": "Ensure rpcbind services are not in use",
        "Description": "The rpcbind  utility maps RPC services to the ports on which they listen. RPC \nprocesses notify rpcbind  when they start, registering the ports they are listening on and \nthe RPC program numbers they expect to serve. The client system then contacts \nrpcbind  on the server with a particular RPC program number. The rpcbind.service  \nredirects the client to the proper port number so it can communicate with the requested \nservice.  \nPortmapper is an RPC service, which always listens on tcp and udp 111, and is used to \nmap other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their \ncorresponding port number on the server. When a remote host makes an RPC call to \nthat server , it first consults with portmap to determine where the RPC server is listening.",
        "Rationale": "A small request (~82 bytes via UDP) sent to the Portmapper generates a large \nresponse (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If \nrpcbind  is not required, it is recommended to remove rpcbind  package to reduce the \npotential attack surface.  \nImpact:  \nMany of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils  \npackage used for The Network File System (NFS), are dependent on the rpcbind  \npackage. If the rpcbind  package is removed, these dependent packages will be \nremoved as well. Before removing the rpcbind  package, review any dependent \npackages to determine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the rpcbind.socket  and \nrpcbind.service  leaving the rpcbind  package installed.",
        "Remediation": "Run the following commands to stop rpcbind.socket  and rpcbind.service , and \nremove the rpcbind  package:  \n# systemctl stop rpcbind.socket rpcbind.service  \n# dnf remove rpcbind  \n- OR - \n- IF - the rpcbind  package is required as a dependency:  \nRun the following commands to stop and mask the rpcbind.socket  and \nrpcbind.service : \n# systemctl stop rpcbind.socket rpcbind.service  \n# systemctl mask rpcbind.socket rpcbind.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.13": {
        "Title": "Ensure rsync services are not in use",
        "Description": "The rsyncd.service  can be used to synchronize files between systems over network \nlinks.",
        "Rationale": "Unless required, the rsync-daemon  package should be removed to reduce the potential \nattack surface.  \nThe rsyncd.service  presents a security risk as it uses unencrypted protocols for \ncommunication.  \nImpact:  \nThere may be packages that are dependent on the rsync-daemon  package. If the \nrsync-daemon  package is removed, these dependent packages will be removed as \nwell. Before removing the rsync-daemon  package, review any dependent packages to \ndetermine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the rsyncd.socket  and \nrsyncd.service  leaving the rsync-daemon  package installed.",
        "Remediation": "Run the following commands to stop rsyncd.socket  and rsyncd.service , and \nremove the rsync-daemon  package:  \n# systemctl stop rsyncd.socket rsyncd.service  \n# dnf remove rsync -daemon \n- OR - \n- IF - the rsync-daemon  package is required as a dependency:  \nRun the following commands to stop and mask the rsyncd.socket  and \nrsyncd.service : \n# systemctl stop rsyncd.socket rsyncd.service  \n# systemctl mask rsyncd.socket rsyncd.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.14": {
        "Title": "Ensure snmp services are not in use",
        "Description": "Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring \nthe health and welfare of network equipment, computer equipment and devices like \nUPSs.  \nNet-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 \n(RFCs 1901 -1908), and SNMPv3 (RFCs 3411 -3418) using both IPv4 and IPv6.  \nSupport for SNMPv2 classic (a.k.a. \"SNMPv2 historic\" - RFCs 1441 -1452) was dropped \nwith the 4.0 release of the UCD -snmp package.  \nThe Simple Network Management Protocol (SNMP) server is used to listen for SNMP \ncommands from an SNMP management system, execute the commands or collect the \ninformation and then send results back to the requesting system.",
        "Rationale": "The SNMP server can communicate using SNMPv1 , which transmits data in the clear \nand does not require authentication to execute commands. SNMPv3  replaces the \nsimple/clear text password sharing used in SNMPv2  with more securely encoded \nparameters. If the the SNMP service is not required, the net-snmp  package should be \nremoved to reduce the attack surface of the system.  \nNote:  If SNMP is required:  \n• The server should be configured for SNMP v3  only. User Authentication  and \nMessage Encryption  should be configured.  \n• If SNMP v2  is absolutely  necessary, modify the community strings' values.  \nImpact:  \nThere may be packages that are dependent on the net-snmp  package. If the net-snmp  \npackage is removed, these packages will be removed as well.  \nBefore removing the net-snmp  package, review any dependent packages to determine \nif they are required on the system. If a dependent package is required, stop and mask \nthe snmpd.service  leaving the net-snmp  package installed.",
        "Remediation": "Run the following commands to stop snmpd.service  and remove net-snmp  package:  \n# systemctl stop snmpd.service  \n# dnf remove net -snmp \n- OR - If the package is required for dependencies:  \nRun the following commands to stop and mask the snmpd.service : \n# systemctl stop snmpd.service  \n# systemctl mask snmpd.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.15": {
        "Title": "Ensure telnet server services are not in use",
        "Description": "The telnet-server  package contains the telnet  daemon, which accepts connections \nfrom users from other systems via the telnet  protocol.",
        "Rationale": "The telnet  protocol is insecure and unencrypted. The use of an unencrypted \ntransmission medium could allow a user with access to sniff network traffic the ability to \nsteal credentials. The ssh package provides an encrypted session and stronger \nsecurity.  \nImpact:  \nThere may be packages that are dependent on the telnet-server  package. If the \ntelnet-server  package is removed, these dependent packages will be removed as \nwell. Before removing the telnet-server  package, review any dependent packages to \ndetermine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the telnet.socket  leaving the \ntelnet-server  package installed.",
        "Remediation": "Run the following commands to stop telnet.socket  and remove the telnet-server  \npackage:  \n# systemctl stop telnet.socket  \n# dnf remove telnet -server \n- OR - \n- IF - a package is installed and is required for dependencies:  \nRun the following commands to stop and mask telnet.socket : \n# systemctl stop telnet.socket  \n# systemctl mask telnet.socket#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.16": {
        "Title": "Ensure tftp server services are not in use",
        "Description": "Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between \ntwo TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending \nand receiving files.",
        "Rationale": "Unless there is a need to run the system as a TFTP server, it is recommended that the \npackage be removed to reduce the potential attack surface.  \nTFTP does not have built -in encryption, access control or authentication. This makes it \nvery easy for an attacker to exploit TFTP to gain access to files  \nImpact:  \nTFTP is often used to provide files for network booting such as for PXE based \ninstallation of servers.  \nThere may be packages that are dependent on the tftp-server  package. If the tftp-\nserver  package is removed, these dependent packages will be removed as well. \nBefore removing the tftp-server  package, review any dependent packages to \ndetermine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the tftp.socket  and \ntftp.service  leaving the tftp-server  package installed.",
        "Remediation": "Run the following commands to stop tftp.socket  and tftp.service , and remove the \ntftp-server  package:  \n# systemctl stop tftp.socket tftp.service  \n# dnf remove tftp -server \n- OR - \n- IF - the tftp-server  package is required as a dependency:  \nRun the following commands to stop and mask tftp.socket  and tftp.service : \n# systemctl stop tftp.socket tftp.service  \n# systemctl mask tftp.socket tftp.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.17": {
        "Title": "Ensure web proxy server services are not in use",
        "Description": "Squid is a standard proxy server used in many distributions and environments.",
        "Rationale": "Unless a system is specifically set up to act as a proxy server, it is recommended that \nthe squid package be removed to reduce the potential attack surface.  \nNote:  Several HTTP proxy servers exist. These should be checked and removed unless \nrequired.  \nImpact:  \nThere may be packages that are dependent on the squid  package. If the squid  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the squid  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the squid.service  leaving the \nsquid  package installed.",
        "Remediation": "Run the following commands to stop squid.service  and remove the squid  package:  \n# systemctl stop squid.service  \n# dnf remove squid  \n- OR - If the squid  package is required as a dependency:  \nRun the following commands to stop and mask the squid.service : \n# systemctl stop squid.service  \n# systemctl mask squid.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.18": {
        "Title": "Ensure web server services are not in use",
        "Description": "Web servers provide the ability to host web site content.",
        "Rationale": "Unless there is a local site approved requirement to run a web server service on the \nsystem, web server packages should be removed to reduce the potential attack surface.  \nImpact:  \nRemoval of web server packages will remove that ability for the server to host web \nservices.  \n- IF - the web server package is required for a dependency, any related service or \nsocket should be stopped and masked.  \nNote:  If the remediation steps to mask a service are followed and that package is not \ninstalled on the system, the service and/or socket will still be masked. If the package is \ninstalled due to an approved requirement to host a web server, the associated servic e \nand/or socket would need to be unmasked before it could be enabled and/or started.",
        "Remediation": "Run the following commands to stop httpd.socket , httpd.service , and \nnginx.service , and remove httpd  and nginx  packages:  \n# systemctl stop httpd.socket httpd.service nginx.service  \n# dnf remove httpd nginx  \n- OR - \n- IF - a package is installed and is required for dependencies:  \nRun the following commands to stop and mask httpd.socket , httpd.service , and \nnginx.service : \n# systemctl stop httpd.socket httpd.service nginx.service  \n# systemctl mask httpd.socket httpd.service nginx.service  \nNote:  Other web server packages may exist. If not required and authorized by local site \npolicy, they should also be removed. If the package is required for a dependency, the \nservice and socket should be stopped and masked.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.19": {
        "Title": "Ensure xinetd services are not in use",
        "Description": "The eXtended InterNET Daemon ( xinetd ) is an open source super daemon that \nreplaced the original inetd  daemon. The xinetd  daemon listens for well known \nservices and dispatches the appropriate daemon to properly respond to service \nrequests.",
        "Rationale": "If there are no xinetd  services required, it is recommended that the package be \nremoved to reduce the attack surface are of the system.  \nNote:  If an xinetd  service or services are required, ensure that any xinetd  service not \nrequired is stopped and masked  \nImpact:  \nThere may be packages that are dependent on the xinetd  package. If the xinetd  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the xinetd  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the avahi -daemon.socket and \navahi -daemon.service leaving the avahi package installed.",
        "Remediation": "Run the following commands to stop xinetd.service , and remove the xinetd  \npackage:  \n# systemctl stop xinetd.service  \n# dnf remove xinetd  \n- OR - \n- IF - the xinetd  package is required as a dependency:  \nRun the following commands to stop and mask the xinetd.service : \n# systemctl stop xinetd.service  \n# systemctl mask xinetd.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.2": {
        "Title": "Ensure avahi daemon services are not in use",
        "Description": "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS -SD \nservice discovery. Avahi allows programs to publish and discover services and hosts \nrunning on a local network with no specific configuration. For example, a user can plug  \na computer into a network and Avahi automatically finds printers to print to, files to look \nat and people to talk to, as well as network services running on the machine.",
        "Rationale": "Automatic discovery of network services is not normally required for system \nfunctionality. It is recommended to remove this package to reduce the potential attack \nsurface.  \nImpact:  \nThere may be packages that are dependent on the avahi  package. If the avahi  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the avahi  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the avahi-daemon.socket  and \navahi-daemon.service  leaving the avahi  package installed.",
        "Remediation": "Run the following commands to stop avahi-daemon.socket  and avahi-\ndaemon.service , and remove the avahi  package:  \n# systemctl stop avahi -daemon.socket avahi -daemon.service  \n# dnf remove avahi  \n- OR - \n- IF - the avahi  package is required as a dependency:  \nRun the following commands to stop and mask the avahi-daemon.socket  and avahi-\ndaemon.service : \n# systemctl stop avahi -daemon.socket avahi -daemon.service  \n# systemctl mask avahi -daemon.socket avahi -daemon.service#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.20": {
        "Title": "Ensure X window server services are not in use",
        "Description": "The X Window System provides a Graphical User Interface (GUI) where users can have \nmultiple windows in which to run programs and various add on. The X Windows system \nis typically used on workstations where users login, but not on servers where users \ntypica lly do not login.",
        "Rationale": "Unless your organization specifically requires graphical login access via X Windows, \nremove it to reduce the potential attack surface.  \nImpact:  \nIf a Graphical Desktop Manager (GDM) is in use on the system, there may be a \ndependency on the xorg-x11-server-common  package. If the GDM is required and \napproved by local site policy, the package should not be removed.  \nMany Linux systems run applications which require a Java runtime. Some Linux Java \npackages have a dependency on specific X Windows xorg -x11-fonts. One workaround \nto avoid this dependency is to use the \"headless\" Java packages for your specific Java \nruntime .",
        "Remediation": "- IF - a Graphical Desktop Manager or X -Windows server is not required and approved \nby local site policy:  \nRun the following command to remove the X Windows Server packages:  \n# dnf remove xorg -x11-server-common#!/usr/bin/env bash",
        "L1": "False",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "2.1.21": {
        "Title": "Ensure mail transfer agents are configured for local -only \nmode",
        "Description": "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for \nincoming mail and transfer the messages to the appropriate user or mail server. If the \nsystem is not intended to be a mail server, it is recommended that the MTA be \nconfigured  to only process local mail.",
        "Rationale": "The software for all Mail Transfer Agents is complex and most have a long history of \nsecurity issues. While it is important to ensure that the system can process local mail \nmessages, it is not necessary to have the MTA's daemon listening on a port unless t he \nserver is intended to be a mail server that receives and processes mail from other \nsystems.",
        "Remediation": "Edit /etc/postfix/main.cf  and add the following line to the RECEIVING MAIL \nsection. If the line already exists, change it to look like the line below:  \ninet_interfaces = loopback -only \nRun the following command to restart postfix : \n# systemctl restart postfix  \nNote:  \n• This remediation is designed around the postfix mail server.  \n• Depending on your environment you may have an alternative MTA installed such \nas sendmail. If this is the case consult the documentation for your installed MTA \nto configure the recommended state.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.22": {
        "Title": "Ensure only approved services are listening on a network \ninterface (Manual)",
        "Description": "A network port is identified by its number, the associated IP address, and the type of the \ncommunication protocol such as TCP or UDP.  \nA listening port is a network port on which an application or process listens on, acting as \na communication endpoint.  \nEach listening port can be open or closed (filtered) using a firewall. In general terms, an \nopen port is a network port that accepts incoming packets from remote locations.",
        "Rationale": "Services listening on the system pose a potential risk as an attack vector. These \nservices should be reviewed, and if not required, the service should be stopped, and the \npackage containing the service should be removed. If required packages have a \ndepende ncy, the service should be stopped and masked to reduce the attack surface of \nthe system.  \nImpact:  \nThere may be packages that are dependent on the service's package. If the service's \npackage is removed, these dependent packages will be removed as well. Before \nremoving the service's package, review any dependent packages to determine if they \nare required  on the system.  \n- IF - a dependent package is required: stop and mask the <service_name>.socket  \nand <service_name>.service  leaving the service's package installed.",
        "Remediation": "Run the following commands to stop the service and remove the package containing \nthe service:  \n# systemctl stop <service_name>.socket <service_name>.service  \n# dnf remove <package_name>  \n- OR - If required packages have a dependency:  \nRun the following commands to stop and mask the service and socket:  \n# systemctl stop <service_name>.socket <service_name>.service  \n# systemctl mask <service_name>.socket <service_name>.service  \nNote:  replace <service_name>  with the appropriate service name.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.3": {
        "Title": "Ensure dhcp server services are not in use",
        "Description": "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to \nbe dynamically assigned IP addresses. There are two versions of the DHCP protocol \nDHCPv4  and DHCPv6 . At startup the server may be started for one or the other via the -4 \nor -6 arguments.",
        "Rationale": "Unless a system is specifically set up to act as a DHCP server, it is recommended that \nthe dhcp-server  package be removed to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the dhcp-server  package. If the dhcp-\nserver  package is removed, these dependent packages will be removed as well. \nBefore removing the dhcp-server  package, review any dependent packages to \ndetermine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the dhcpd.service  and \ndhcpd6.service  leaving the dhcp-server  package installed.",
        "Remediation": "Run the following commands to stop dhcpd.service  and dhcpd6.service  and \nremove dhcp-server  package:  \n# systemctl stop dhcpd.service dhcpd6.service  \n# dnf remove dhcp -server \n- OR - \n- IF - the dhcp-server  package is required as a dependency:  \nRun the following commands to stop and mask dhcpd.service  and dhcpd6.service : \n# systemctl stop dhcpd.service dhcpd6.service  \n# systemctl mask dhcpd.service dhcpd6.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.4": {
        "Title": "Ensure dns server services are not in use",
        "Description": "The Domain Name System (DNS) is a hierarchical naming system that maps names to \nIP addresses for computers, services and other resources connected to a network.",
        "Rationale": "Unless a system is specifically designated to act as a DNS server, it is recommended \nthat the package be removed to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the bind  package. If the bind  package \nis removed, these dependent packages will be removed as well. Before removing the \nbind  package, review any dependent packages to determine if they are required on the \nsystem.  \n- IF - a dependent package is required: stop and mask the named.service  leaving the \nbind  package installed.",
        "Remediation": "Run the following commands to stop named.service  and remove bind  package:  \n# systemctl stop named.service  \n# dnf remove bind  \n- OR - \n- IF - the bind  package is required as a dependency:  \nRun the following commands to stop and mask named.service : \n# systemctl stop named.service  \n# systemctl mask named.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.5": {
        "Title": "Ensure dnsmasq services are not in use",
        "Description": "dnsmasq  is a lightweight tool that provides DNS caching, DNS forwarding and DHCP \n(Dynamic Host Configuration Protocol) services.",
        "Rationale": "Unless a system is specifically designated to act as a DNS caching, DNS forwarding \nand/or DHCP server, it is recommended that the package be removed to reduce the \npotential attack surface.  \nImpact:  \nThere may be packages that are dependent on the dnsmasq  package. If the dnsmasq  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the dnsmasq  package, review any dependent packages to determine if they \nare required on the system.  \n- IF - a dependent package is required: stop and mask the dnsmasq.service  leaving \nthe dnsmasq  package installed.",
        "Remediation": "Run the following commands to stop dnsmasq.service  and remove dnsmasq  package:  \n# systemctl stop dnsmasq.service  \n# dnf remove dnsmasq  \n- OR - \n- IF - the dnsmasq  package is required as a dependency:  \nRun the following commands to stop and mask the dnsmasq.service : \n# systemctl stop dnsmasq.service  \n# systemctl mask dnsmasq.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "CIS": {
        "Title": "Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software  \n Uninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction.   ● ● \nv7 9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running  \n Ensure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002  TA0008  M1042   2.1.6 Ensure samba file server services are not in use",
        "Description": "The Samba daemon allows system administrators to configure their Linux systems to \nshare file systems and directories with Windows desktops. Samba will advertise the file \nsystems and directories via the Server Message Block (SMB) protocol. Windows \ndesktop u sers will be able to mount these directories and file systems as letter drives on \ntheir systems.",
        "Rationale": "If there is no need to mount directories and file systems to Windows systems, then this \npackage can be removed to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the samba  package. If the samba  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the samba  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the smb.service  leaving the \nsamba  package installed.",
        "Remediation": "Run the following command to stop smb.service  and remove samba  package:  \n# systemctl stop smb.service  \n# dnf remove samba  \n- OR - \n- IF - the samba  package is required as a dependency:  \nRun the following commands to stop and mask the smb.service : \n# systemctl stop smb.service  \n# systemctl mask smb.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.7": {
        "Title": "Ensure ftp server services are not in use",
        "Description": "FTP (File Transfer Protocol) is a traditional and widely used standard tool for \ntransferring files between a server and clients over a network, especially where no \nauthentication is necessary (permits anonymous users to connect to a server).",
        "Rationale": "Unless there is a need to run the system as a FTP server, it is recommended that the \npackage be removed to reduce the potential attack surface.  \nImpact:  \nThere may be packages that are dependent on the vsftpd  package. If the vsftpd  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the vsftpd  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask the vsftpd.service  leaving the \nvsftpd  package installed.",
        "Remediation": "Run the following commands to stop vsftpd.service  and remove vsftpd  package:  \n# systemctl stop vsftpd.service  \n# dnf remove vsftpd  \n- OR - \n- IF - the vsftpd  package is required as a dependency:  \nRun the following commands to stop and mask the vsftpd.service : \n# systemctl stop vsftpd.service  \n# systemctl mask vsftpd.service  \nNote:  Other ftp server packages may exist. If not required and authorized by local site \npolicy, they should also be removed. If the package is required for a dependency, the \nservice should be stopped and masked.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.8": {
        "Title": "Ensure message access server services are not in use",
        "Description": "dovecot  and cyrus-imapd  are open source IMAP and POP3 server packages for Linux \nbased systems.",
        "Rationale": "Unless POP3 and/or IMAP servers are to be provided by this system, it is \nrecommended that the package be removed to reduce the potential attack surface.  \nNote:  Several IMAP/POP3 servers exist and can use other service names. These \nshould also be audited and the packages removed if not required.  \nImpact:  \nThere may be packages that are dependent on dovecot  and cyrus-imapd  packages. If \ndovecot  and cyrus-imapd  packages are removed, these dependent packages will be \nremoved as well. Before removing dovecot  and cyrus-imapd  packages, review any \ndependent packages to determine if they are required on the system.  \n- IF - a dependent package is required: stop and mask dovecot.socket , \ndovecot.service  and cyrus-imapd.service  leaving dovecot  and cyrus-imapd  \npackages installed.",
        "Remediation": "Run the following commands to stop dovecot.socket , dovecot.service , and cyrus-\nimapd.service , and remove dovecot  and cyrus-imapd  packages:  \n# systemctl stop dovecot.socket dovecot.service cyrus -imapd.service  \n# dnf remove dovecot cyrus -imapd \n- OR - \n- IF - a package is installed and is required for dependencies:  \nRun the following commands to stop and mask dovecot.socket , dovecot.service , \nand cyrus-imapd.service : \n# systemctl stop dovecot.socket dovecot.service cyrus -imapd.service  \n# systemctl mask dovecot.socket dovecot.service cyrus -imapd.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.1.9": {
        "Title": "Ensure network file system services are not in use",
        "Description": "The Network File System (NFS) is one of the first and most widely distributed file \nsystems in the UNIX environment. It provides the ability for systems to mount file \nsystems of other servers through the network.",
        "Rationale": "If the system does not require access to network shares or the ability to provide network \nfile system services for other host's network shares, it is recommended that the nfs-\nutils  package be removed to reduce the attack surface of the system.  \nImpact:  \nMany of the libvirt  packages used by Enterprise Linux virtualization are dependent \non the nfs-utils  package. If the nfs-utils  package is removed, these dependent \npackages will be removed as well. Before removing the nfs-utils  package, review \nany dependent packages to determine if they are required on the system.  \n- IF - a dependent package is required: stop and mask the nfs-server.service  \nleaving the nfs-utils  package installed.",
        "Remediation": "Run the following command to stop nfs-server.service  and remove nfs-utils  \npackage:  \n# systemctl stop nfs -server.service  \n# dnf remove nfs -utils \n- OR - \n- IF - the nfs-utils  package is required as a dependency:  \nRun the following commands to stop and mask the nfs-server.service : \n# systemctl stop nfs -server.service  \n# systemctl mask nfs -server.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.2.1": {
        "Title": "Ensure ftp client is not installed",
        "Description": "FTP (File Transfer Protocol) is a traditional and widely used standard tool for \ntransferring files between a server and clients over a network, especially where no \nauthentication is necessary (permits anonymous users to connect to a server).",
        "Rationale": "FTP does not protect the confidentiality of data or authentication credentials. It is \nrecommended SFTP be used if file transfer is required. Unless there is a need to run \nthe system as a FTP server (for example, to allow anonymous downloads), it is \nrecomme nded that the package be removed to reduce the potential attack surface.",
        "Remediation": "Run the following command to remove ftp: \n# dnf remove ftp#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.2.2": {
        "Title": "Ensure ldap client is not installed",
        "Description": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for \nNIS/YP. It is a service that provides a method for looking up information from a central \ndatabase.",
        "Rationale": "If the system will not need to act as an LDAP client, it is recommended that the software \nbe removed to reduce the potential attack surface.  \nImpact:  \nRemoving the LDAP client will prevent or inhibit using LDAP for authentication in your \nenvironment.",
        "Remediation": "Run the following command to remove the openldap -clients  package:  \n# dnf remove openldap -clients#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "2.2.3": {
        "Title": "Ensure nis client is not installed",
        "Description": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client -\nserver directory service protocol used to distribute system configuration files. The NIS \nclient ( ypbind  ) was used to bind a machine to an NIS server and receive the \ndistributed configuration files.",
        "Rationale": "The NIS service is inherently an insecure system that has been vulnerable to DOS \nattacks, buffer overflows and has poor authentication for querying NIS maps. NIS \ngenerally has been replaced by such protocols as Lightweight Directory Access \nProtocol (LDAP).  It is recommended that the service be removed.  \nImpact:  \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Remediation": "Run the following command to remove the ypbind package:  \n# dnf remove ypbind#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.2.4": {
        "Title": "Ensure telnet client is not installed",
        "Description": "The telnet  package contains the telnet  client, which allows users to start \nconnections to other systems via the telnet protocol.",
        "Rationale": "The telnet  protocol is insecure and unencrypted. The use of an unencrypted \ntransmission medium could allow an unauthorized user to steal credentials. The ssh \npackage provides an encrypted session and stronger security and is included in most \nLinux distributions.  \nImpact:  \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Remediation": "Run the following command to remove the telnet  package:  \n# dnf remove telnet#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.2.5": {
        "Title": "Ensure tftp client is not installed",
        "Description": "Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between \ntwo TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending \nand receiving files.",
        "Rationale": "TFTP does not have built -in encryption, access control or authentication. This makes it \nvery easy for an attacker to exploit TFTP to gain access to files",
        "Remediation": "Run the following command to remove tftp : \n# dnf remove tftp#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.3.1": {
        "Title": "Ensure time synchronization is in use",
        "Description": "System time should be synchronized between all systems in an environment. This is \ntypically done by establishing an authoritative time server or set of servers and having \nall systems synchronize their clocks to them.  \nNote:  If another method for time synchronization is being used, this section may be \nskipped.",
        "Rationale": "Time synchronization is important to support time sensitive security mechanisms like \nKerberos and also ensures log files have consistent time records across the enterprise, \nwhich aids in forensic investigations.",
        "Remediation": "Run the following command to install chrony : \n# dnf install chrony#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.3.2": {
        "Title": "Ensure chrony is configured",
        "Description": "chrony  is a daemon which implements the Network Time Protocol (NTP) and is \ndesigned to synchronize system clocks across a variety of systems and use a source \nthat is highly accurate. More information on chrony  can be found at \nhttp://chrony.tuxfamily.org/ . chrony  can be configured to be a client and/or a server.",
        "Rationale": "If chrony  is in use on the system proper configuration is vital to ensuring time \nsynchronization is working properly.",
        "Remediation": "Add or edit server or pool lines to /etc/chrony.conf  or a file in the /etc/chrony.d  \ndirectory as appropriate:  \nExample:  \nserver <remote -server>#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.3.3": {
        "Title": "Ensure chrony is not run as the root user",
        "Description": "The file /etc/sysconfig/chronyd  allows configuration of options for chrony  to include \nthe user chrony  is run as. By default, this is set to the user chrony",
        "Rationale": "Services should not be set to run as the root user",
        "Remediation": "Edit the file /etc/sysconfig/chronyd  and add or modify the following line to remove \n\"-u root \" from any OPTIONS=  argument:  \nExample:  \nOPTIONS=\" -F 2\" \nRun the following command to reload the chronyd.service  configuration:  \n# systemctl reload -or-restart chronyd.service  \nDefault Value:  \nOPTIONS=\" -F 2\"#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.1.1": {
        "Title": "Ensure cron daemon is enabled and active",
        "Description": "The cron  daemon is used to execute batch jobs on the system.",
        "Rationale": "While there may not be user jobs that need to be run on the system, the system does \nhave maintenance jobs that may include security monitoring that have to run, and cron  \nis used to execute them.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to unmask, enable, and start cron : \n# systemctl unmask \"$(systemctl list -unit-files | awk \n'$1~/^crond? \\.service/{print $1}')\"  \n# systemctl --now enable \"$(systemctl list -unit-files | awk \n'$1~/^crond? \\.service/{print $1}')\"#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.1.2": {
        "Title": "Ensure permissions on /etc/crontab are configured",
        "Description": "The /etc/crontab  file is used by cron  to control its own jobs. The commands in this \nitem make sure that root is the user and group owner of the file and that only the owner \ncan access the file.",
        "Rationale": "This file contains information on what system jobs are run by cron. Write access to \nthese files could provide unprivileged users with the ability to elevate their privileges. \nRead access to these files could provide users with the ability to gain insight o n system \njobs that run on the system and could provide them a way to gain unauthorized \nprivileged access.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on /etc/crontab : \n# chown root:root /etc/crontab  \n# chmod og -rwx /etc/crontab  \nDefault Value:  \nAccess: (644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.1.3": {
        "Title": "Ensure permissions on /etc/cron.hourly are configured",
        "Description": "This directory contains system cron  jobs that need to run on an hourly basis. The files \nin this directory cannot be manipulated by the crontab  command, but are instead \nedited by system administrators using a text editor. The commands below restrict \nread/write and search access to user and group root, preventing regular users from \naccessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the \n/etc/cron.hourly  directory:  \n# chown root:root /etc/cron.hourly/  \n# chmod og -rwx /etc/cron.hourly/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.1.4": {
        "Title": "Ensure permissions on /etc/cron.daily are configured",
        "Description": "The /etc/cron.daily  directory contains system cron jobs that need to run on a daily \nbasis. The files in this directory cannot be manipulated by the crontab  command, but \nare instead edited by system administrators using a text editor. The commands below \nrestrict read/write and search access to user and group root, preventing regular users \nfrom accessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the \n/etc/cron.daily  directory:  \n# chown root:root /etc/cron.daily/  \n# chmod og -rwx /etc/cron.daily/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.1.5": {
        "Title": "Ensure permissions on /etc/cron.weekly are configured",
        "Description": "The /etc/cron.weekly  directory contains system cron jobs that need to run on a \nweekly basis. The files in this directory cannot be manipulated by the crontab  \ncommand but are instead edited by system administrators using a text editor. The \ncommands below restrict read/write and search access to user and group root, \npreventing regular users from accessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the \n/etc/cron.weekly  directory:  \n# chown root:root /etc/cron.weekly/  \n# chmod og -rwx /etc/cron.weekly/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.1.6": {
        "Title": "Ensure permissions on /etc/cron.monthly are configured",
        "Description": "The /etc/cron.monthly  directory contains system cron jobs that need to run on a \nmonthly basis. The files in this directory cannot be manipulated by the crontab  \ncommand but are instead edited by system administrators using a text editor. The \ncommands below restrict read/write and search access to user and group root, \npreventing regular users from accessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the \n/etc/cron.monthly  directory:  \n# chown root:root /etc/cron.monthly/  \n# chmod og -rwx /etc/cron.monthly/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.1.7": {
        "Title": "Ensure permissions on /etc/cron.d are configured",
        "Description": "The /etc/cron.d  directory contains system cron  jobs that need to run in a similar \nmanner to the hourly, daily weekly and monthly jobs from /etc/crontab , but require \nmore granular control as to when they run. The files in this directory cannot be \nmanipulated by the crontab  command but are instead edited by system administrators \nusing a text editor. The commands below restrict read/write and search access to user \nand group root, preventing regular users from accessing this directory.",
        "Rationale": "Granting write access to this directory for non -privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or  \ncircumvent auditing controls.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following commands to set ownership and permissions on the /etc/cron.d  \ndirectory:  \n# chown root:root /etc/cron.d/  \n# chmod og -rwx /etc/cron.d/  \nDefault Value:  \nAccess: (755/drwxr -xr-x) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.1.8": {
        "Title": "Ensure crontab is restricted to authorized users",
        "Description": "crontab  is the program used to install, deinstall, or list the tables used to drive the cron \ndaemon. Each user can have their own crontab, and though these are files in \n/var/spool/cron/crontabs , they are not intended to be edited directly.  \nIf the /etc/cron.allow  file exists, then you must be listed (one user per line) therein in \norder to be allowed to use this command. If the /etc/cron.allow  file does not exist but \nthe /etc/cron.deny  file does exist, then you must not be listed in the /etc/cron.deny  \nfile in order to use this command.  \nIf neither of these files exists, then depending on site -dependent configuration \nparameters, only the super user will be allowed to use this command, or all users will be \nable to use this command.  \nIf both files exist then /etc/cron.allow  takes precedence. Which means that \n/etc/cron.deny  is not considered and your user must be listed in /etc/cron.allow  \nin order to be able to use the crontab.  \nRegardless of the existence of any of these files, the root administrative user is always \nallowed to setup a crontab.  \nThe files /etc/cron.allow  and /etc/cron.deny , if they exist, must be either world -\nreadable, or readable by group crontab . If they are not, then cron will deny access to \nall users until the permissions are fixed.  \nThere is one file for each user's crontab under the /var/spool/cron/crontabs  \ndirectory. Users are not allowed to edit the files under that directory directly to ensure \nthat only users allowed by the system to run periodic tasks can add them, and only \nsyntactically correct crontabs will be written there. This is enforced by having t he \ndirectory writable only by the crontab  group and configuring crontab command with the \nsetgid bid set for that specific group.  \nNote:  \n• Even though a given user is not listed in cron.allow , cron jobs can still be run \nas that user  \n• The files /etc/cron.allow  and /etc/cron.deny , if they exist, only controls \nadministrative access to the crontab command for scheduling and modifying cron \njobs",
        "Rationale": "On many systems, only the system administrator is authorized to schedule cron  jobs. \nUsing the cron.allow  file to control who can run cron  jobs enforces this policy. It is \neasier to manage an allow list than a deny list. In a deny list, you could potentially add a \nuser ID to the system and forget to add it to the deny files.",
        "Remediation": "- IF - cron is installed on the system:  \nRun the following script to:  \n• Create /etc/cron.allow  if it doesn't exist  \n• Change owner to user root  \n• Change group owner to group root  \n• Change mode to 640 or more restrictive  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "2.4.2.1": {
        "Title": "Ensure at is restricted to authorized users",
        "Description": "at allows fairly complex time specifications, extending the POSIX.2 standard. It accepts \ntimes of the form HH:MM to run a job at a specific time of day. (If that time is already \npast, the next day is assumed.) You may also specify midnight, noon, or teatime (4pm) \nand you can have a time -of-day suffixed with AM or PM for running in the morning or \nthe evening. You can also say what day the job will be run, by giving a date in the form \nmonth -name day with an optional year, or giving a date of the form MMDD[CC] YY, \nMM/DD/[CC]YY, DD.MM.[CC]YY or [CC]YY -MM-DD. The specification of a date must \nfollow the specification of the time of day. You can also give times like now + count \ntime-units, where the time -units can be minutes, hours, days, or weeks and you can tell \nat to run the job today by suffixing the time with today and to run the job tomorrow by \nsuffixing the time with tomorrow.  \nThe /etc/at.allow  and /etc/at.deny  files determine which user can submit \ncommands for later execution via at or batch. The format of the files is a list of \nusernames, one on each line. Whitespace is not permitted. If the file /etc/at.allow  \nexists, only usernames mentioned in it are allowed to use at. If /etc/at.allow  does \nnot exist, /etc/at.deny  is checked, every username not mentioned in it is then allowed \nto use at. An empty /etc/at.deny  means that every user may use at. If neither file \nexists, only the s uperuser is allowed to use at.",
        "Rationale": "On many systems, only the system administrator is authorized to schedule at jobs. \nUsing the at.allow  file to control who can run at jobs enforces this policy. It is easier \nto manage an allow list than a deny list. In a deny list, you could potentially add a user \nID to the system and forget to add it to the deny files.",
        "Remediation": "- IF - at is installed on the system:  \nRun the following script to:  \n• /etc/at.allow : \no Create the file if it doesn't exist  \no Change owner or user root  \no If group daemon  exists, change to group daemon , else change group to \nroot  \no Change mode to 640 or more restrictive  \n• - IF - /etc/at.deny  exists:  \no Change owner or user root  \no If group daemon  exists, change to group daemon , else change group to \nroot  \no Change mode to 640 or more restrictive  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.1.1": {
        "Title": "Ensure IPv6 status is identified (Manual)",
        "Description": "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's \ndesigned to supply IP addressing and additional security to support the predicted \ngrowth of connected devices. IPv6 is based on 128 -bit addressing and can support  340 \nundecillion, which is 340,282,366,920,938,463,463,374,607,431,768,211,456 unique \naddresses.  \nFeatures of IPv6  \n• Hierarchical addressing and routing infrastructure  \n• Statefull and Stateless configuration  \n• Support for quality of service (QoS)  \n• An ideal protocol for neighboring node interaction",
        "Rationale": "IETF RFC 4038 recommends that applications are built with an assumption of dual \nstack. It is recommended that IPv6 be enabled and configured in accordance with \nBenchmark recommendations.  \n- IF - dual stack and IPv6 are not used in your environment, IPv6 may be disabled to \nreduce the attack surface of the system, and recommendations pertaining to IPv6 can \nbe skipped.  \nNote:  It is recommended that IPv6 be enabled and configured unless this is against \nlocal site policy  \nImpact:  \nIETF RFC 4038 recommends that applications are built with an assumption of dual \nstack.  \nWhen enabled, IPv6 will require additional configuration to reduce risk to the system.",
        "Remediation": "Enable or disable IPv6 in accordance with system requirements and local site policy  \nDefault Value:  \nIPv6 is enabled#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.1.2": {
        "Title": "Ensure wireless interfaces are disabled",
        "Description": "Wireless networking is used when wired networks are unavailable.",
        "Rationale": "- IF - wireless is not to be used, wireless devices can be disabled to reduce the potential \nattack surface.  \nImpact:  \nMany if not all laptop workstations and some desktop workstations will connect via \nwireless requiring these interfaces be enabled.",
        "Remediation": "Run the following script to disable any wireless interfaces:  \n#!/usr/bin/env bash",
        "L1": "False",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.1.3": {
        "Title": "Ensure bluetooth services are not in use",
        "Description": "Bluetooth is a short -range wireless technology standard that is used for exchanging \ndata between devices over short distances. It employs UHF radio waves in the ISM \nbands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire \nconnections.",
        "Rationale": "An attacker may be able to find a way to access or corrupt your data. One example of \nthis type of activity is bluesnarfing , which refers to attackers using a Bluetooth \nconnection to steal information off of your Bluetooth device. Also, viruses or other \nmalicious code can take advantage of Bluetooth technology to infect other devices. If \nyou are infected, your data may be corr upted, compromised, stolen, or lost.  \nImpact:  \nMany personal electronic devices (PEDs) use Bluetooth technology. For example, you \nmay be able to operate your computer with a wireless keyboard. Disabling Bluetooth will \nprevent these devices from connecting to the system.  \nThere may be packages that are dependent on the bluez  package. If the bluez  \npackage is removed, these dependent packages will be removed as well. Before \nremoving the bluez  package, review any dependent packages to determine if they are \nrequired on the system.  \n- IF - a dependent package is required: stop and mask bluetooth.service  leaving the \nbluez  package installed.",
        "Remediation": "Run the following commands to stop bluetooth.service , and remove the bluez  \npackage:  \n# systemctl stop bluetooth.service  \n# dnf remove bluez  \n- OR - \n- IF - the bluez  package is required as a dependency:  \nRun the following commands to stop and mask bluetooth.service : \n# systemctl stop bluetooth.service  \n# systemctl mask bluetooth.service  \nNote:  A reboot may be required#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.2.1": {
        "Title": "Ensure dccp kernel module is not available",
        "Description": "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that \nsupports streaming media and telephony. DCCP provides a way to gain access to \ncongestion control, without having to do it at the application layer, but does not provide \nin-sequence delivery.",
        "Rationale": "- IF - the protocol is not required, it is recommended that the drivers not be installed to \nreduce the potential attack surface.",
        "Remediation": "Run the following script to unload and disable the dccp  module:  \n- IF - the dccp  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install dccp /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist dccp  in the /etc/modprobe.d/  \ndirectory  \n• Run modprobe -r dccp 2>/dev/null; rmmod dccp 2>/dev/null  to remove \ndccp  from the kernel  \n- IF - the dccp  kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "3.2.2": {
        "Title": "Ensure tipc kernel module is not available",
        "Description": "The Transparent Inter -Process Communication (TIPC) protocol is designed to provide \ncommunication between cluster nodes.",
        "Rationale": "- IF - the protocol is not being used, it is recommended that kernel module not be \nloaded, disabling the service to reduce the potential attack surface.",
        "Remediation": "Run the following script to unload and disable the tipc  module:  \n- IF - the tipc  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install tipc /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist tipc  in the /etc/modprobe.d/  \ndirectory  \n• Run modprobe -r tipc 2>/dev/null; rmmod tipc 2>/dev/null  to remove \ntipc  from the kernel  \n- IF - the tipc  kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "3.2.3": {
        "Title": "Ensure rds kernel module is not available",
        "Description": "The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to \nprovide low -latency, high -bandwidth communications between cluster nodes. It was \ndeveloped by the Oracle Corporation.",
        "Rationale": "- IF - the protocol is not being used, it is recommended that kernel module not be \nloaded, disabling the service to reduce the potential attack surface.",
        "Remediation": "Run the following script to unload and disable the rds module:  \n- IF - the rds kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install rds /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist rds  in the /etc/modprobe.d/  \ndirectory  \n• Run modprobe -r rds 2>/dev/null; rmmod rds 2>/dev/null  to remove \nrds from the kernel  \n- IF - the rds kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "3.2.4": {
        "Title": "Ensure sctp kernel module is not available",
        "Description": "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to \nsupport message oriented communication, with several streams of messages in one \nconnection. It serves a similar function as TCP and UDP, incorporating features of both. \nIt is message -oriented like UDP, and ensures reliable in -sequence transport of \nmessages with congestion control like TCP.",
        "Rationale": "- IF - the protocol is not being used, it is recommended that kernel module not be \nloaded, disabling the service to reduce the potential attack surface.",
        "Remediation": "Run the following script to unload and disable the sctp  module:  \n- IF - the sctp  kernel module is available in ANY installed kernel:  \n• Create a file ending in .conf  with install sctp /bin/false  in the \n/etc/modprobe.d/  directory  \n• Create a file ending in .conf  with blacklist sctp  in the /etc/modprobe.d/  \ndirectory  \n• Run modprobe -r sctp 2>/dev/null; rmmod sctp 2>/dev/null  to remove \nsctp  from the kernel  \n- IF - the sctp  kernel module is not available on the system, or pre -compiled into the \nkernel, no remediation is necessary   #!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "3.3.1": {
        "Title": "Ensure ip forwarding is disabled",
        "Description": "The net.ipv4.ip_forward  and net.ipv6.conf.all.forwarding  flags are used to \ntell the system whether it can forward packets or not.",
        "Rationale": "Setting net.ipv4.ip_forward  and net.ipv6.conf.all.forwarding  to 0 ensures \nthat a system with multiple interfaces (for example, a hard proxy), will never be able to \nforward packets, and therefore, never serve as a router.  \nImpact:  \nIP forwarding is required on systems configured to act as a router. If these parameters \nare disabled, the system will not be able to perform as a router.  \nMany Cloud Service Provider (CSP) hosted systems require IP forwarding to be \nenabled. If the system is running on a CSP platform, this requirement should be \nreviewed before disabling IP forwarding.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.ip_forward = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.ip_forward = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.10": {
        "Title": "Ensure tcp syn cookies is enabled",
        "Description": "When tcp_syncookies  is set, the kernel will handle TCP SYN packets normally until \nthe half -open connection queue is full, at which time, the SYN cookie functionality kicks \nin. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply \nreplies to the SYN w ith a SYN/ACK, but will include a specially crafted TCP sequence \nnumber that encodes the source and destination IP address and port number and the \ntime the packet was sent. A legitimate connection would send the ACK packet of the \nthree w ay handshake with the specially crafted sequence number. This allows the \nsystem to verify that it has received a valid response to a SYN cookie and allow the \nconnection, even though there is no corresponding SYN in the queue.",
        "Rationale": "Attackers use SYN flood attacks to perform a denial of service attacked on a system by \nsending many SYN packets without completing the three way handshake. This will \nquickly use up slots in the kernel's half -open connection queue and prevent legitimate \nconnections from succeeding. Setting net.ipv4.tcp_syncookies  to 1 enables SYN \ncookies, allowing the system to keep accepting valid connections, even if under a denial \nof service attack.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.tcp_syncookies = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.tcp_syncookies = 1\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.11": {
        "Title": "Ensure ipv6 router advertisements are not accepted",
        "Description": "Routers periodically multicast Router Advertisement messages to announce their \navailability and convey information to neighboring nodes that enable them to be \nautomatically configured on the network.  \nnet.ipv6.conf.all.accept_ra  and net.ipv6.conf.default.accept_ra  determine \nthe systems ability to accept these advertisements",
        "Rationale": "It is recommended that systems do not accept router advertisements as they could be \ntricked into routing traffic to compromised machines. Setting hard routes within the \nsystem (usually a single default route to a trusted router) protects the system from ba d \nroutes. Setting net.ipv6.conf.all.accept_ra  and \nnet.ipv6.conf.default.accept_ra  to 0 disables the system's ability to accept IPv6 \nrouter advertisements.",
        "Remediation": "- IF - IPv6 is enabled on the system:  \nSet the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv6.conf.all.accept_ra = 0  \n• net.ipv6.conf.default.accept_ra = 0  \nExample:  \n# printf '%s \\n' \"net.ipv6.conf.all.accept_ra = 0\" \n\"net.ipv6.conf.default.accept_ra = 0\" >> /etc/sysctl.d/60 -netipv6_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.2": {
        "Title": "Ensure packet redirect sending is disabled",
        "Description": "ICMP Redirects are used to send routing information to other hosts. As a host itself \ndoes not act as a router (in a host only configuration), there is no need to send \nredirects.",
        "Rationale": "An attacker could use a compromised host to send invalid ICMP redirects to other \nrouter devices in an attempt to corrupt routing and have users access a system set up \nby the attacker as opposed to a valid system.  \nImpact:  \nIP forwarding is required on systems configured to act as a router. If these parameters \nare disabled, the system will not be able to perform as a router.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.conf.all.send_redirects = 0  \n• net.ipv4.conf.default.send_redirects = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.send_redirects = 0\" \n\"net.ipv4.conf.default.send_redirects = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.3": {
        "Title": "Ensure bogus icmp responses are ignored",
        "Description": "Setting net.ipv4.icmp_ignore_bogus_error_responses  to 1 prevents the kernel \nfrom logging bogus responses (RFC -1122 non -compliant) from broadcast reframes, \nkeeping file systems from filling up with useless log messages.",
        "Rationale": "Some routers (and some attackers) will send responses that violate RFC -1122 and \nattempt to fill up a log file system with many useless error messages.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.icmp_ignore_bogus_error_responses = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.icmp_ignore_bogus_error_responses = 1\" >> \n/etc/sysctl.d/60 -netipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.4": {
        "Title": "Ensure broadcast icmp requests are ignored",
        "Description": "Setting net.ipv4.icmp_echo_ignore_broadcasts  to 1 will cause the system to \nignore all ICMP echo and timestamp requests to broadcast and multicast addresses.",
        "Rationale": "Accepting ICMP echo and timestamp requests with broadcast or multicast destinations \nfor your network could be used to trick your host into starting (or participating) in a \nSmurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP \nbroadcast messages with a spoofed source address. All hosts receiving this message \nand responding would send echo -reply messages back to the spoofed address, which is \nprobably not routable. If many hosts respond to the packets, the amount of traffic on the \nnetwork could be significantly multiplied.",
        "Remediation": "Set the following parameter in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.icmp_echo_ignore_broadcasts = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.icmp_echo_ignore_broadcasts = 1\" >> \n/etc/sysctl.d/60 -netipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.5": {
        "Title": "Ensure icmp redirects are not accepted",
        "Description": "ICMP redirect messages are packets that convey routing information and tell your host \n(acting as a router) to send packets via an alternate path. It is a way of allowing an \noutside routing device to update your system routing tables.",
        "Rationale": "ICMP redirect messages are packets that convey routing information and tell your host \n(acting as a router) to send packets via an alternate path. It is a way of allowing an \noutside routing device to update your system routing tables. By setting \nnet.ipv4.conf.all.accept_redirects , \nnet.ipv4.conf.default.accept_redirects , \nnet.ipv6.conf.all.accept_redirects , and \nnet.ipv6.conf.default.accept_redirects  to 0, the system will not accept any \nICMP redirect messages, and therefore, won't allow outsiders to update the system's \nrouting tables.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.conf.all.accept_redirects = 0  \n• net.ipv4.conf.default.accept_redirects = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.accept_redirects = 0\" \n\"net.ipv4.conf.default.accept_redirects = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.6": {
        "Title": "Ensure secure icmp redirects are not accepted",
        "Description": "Secure ICMP redirects are the same as ICMP redirects, except they come from \ngateways listed on the default gateway list. It is assumed that these gateways are \nknown to your system, and that they are likely to be secure.",
        "Rationale": "It is still possible for even known gateways to be compromised. Setting \nnet.ipv4.conf.all.secure_redirects  and \nnet.ipv4.conf.default.secure_redirects  to 0 protects the system from routing \ntable updates by possibly compromised known gateways.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.conf.all.secure_redirects = 0  \n• net.ipv4.conf.default.secure_redirects = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.secure_redirects = 0\" \n\"net.ipv4.conf.default.secure_redirects = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.7": {
        "Title": "Ensure reverse path filtering is enabled",
        "Description": "Setting net.ipv4.conf.all.rp_filter  and net.ipv4.conf.default.rp_filter  to \n1 forces the Linux kernel to utilize reverse path filtering on a received packet to \ndetermine if the packet was valid. Essentially, with reverse path filtering, if the return \npacket does not go out the same interface that the corresponding source packet cam e \nfrom, the packet is dropped (and logged if log_martians  is set).",
        "Rationale": "Setting net.ipv4.conf.all.rp_filter  and net.ipv4.conf.default.rp_filter  to \n1 is a good way to deter attackers from sending your system bogus packets that cannot \nbe responded to. One instance where this feature breaks down is if asymmetrical \nrouting is employed. This would occur when using dynamic routing protocols (bgp, ospf, \netc) on your system. If you are using asymmetrical routing on your system, you will not \nbe able to enable this feature without breaking the routing.  \nImpact:  \nIf you are using asymmetrical routing on your system, you will not be able to enable this \nfeature without breaking the routing.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.conf.all.rp_filter = 1  \n• net.ipv4.conf.default.rp_filter = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.rp_filter = 1\" \n\"net.ipv4.conf.default.rp_filter = 1\" >> /etc/sysctl.d/60 -netipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.8": {
        "Title": "Ensure source routed packets are not accepted",
        "Description": "In networking, source routing allows a sender to partially or fully specify the route \npackets take through a network. In contrast, non -source routed packets travel a path \ndetermined by routers in the network. In some cases, systems may not be routable or \nreachable from some locations (e.g. private addresses vs. Internet routable), and so \nsource routed packets would need to be used.",
        "Rationale": "Setting net.ipv4.conf.all.accept_source_route , \nnet.ipv4.conf.default.accept_source_route , \nnet.ipv6.conf.all.accept_source_route  and \nnet.ipv6.conf.default.accept_source_route  to 0 disables the system from \naccepting source routed packets. Assume this system was capable of routing packets to \nInternet routable addresses on one interface and private addresses on another \ninterface. Assume that the private addresses were not routable to the Internet routable \naddresses and vice versa. Under normal routing circumsta nces, an attacker from the \nInternet routable addresses could not use the system as a way to reach the private \naddress systems. If, however, source routed packets were allowed, they could be used \nto gain access to the private address systems as the route co uld be specified, rather \nthan rely on routing protocols that did not allow this routing.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.conf.all.accept_source_route = 0  \n• net.ipv4.conf.default.accept_source_route = 0  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.accept_source_route = 0\" \n\"net.ipv4.conf.default.accept_source_route = 0\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "3.3.9": {
        "Title": "Ensure suspicious packets are logged",
        "Description": "When enabled, this feature logs packets with un -routable source addresses to the \nkernel log.",
        "Rationale": "Setting net.ipv4.conf.all.log_martians  and \nnet.ipv4.conf.default.log_martians  to 1 enables this feature. Logging these \npackets allows an administrator to investigate the possibility that an attacker is sending \nspoofed packets to their system.",
        "Remediation": "Set the following parameters in /etc/sysctl.conf  or a file in /etc/sysctl.d/  ending \nin .conf : \n• net.ipv4.conf.all.log_martians = 1  \n• net.ipv4.conf.default.log_martians = 1  \nExample:  \n# printf '%s \\n' \"net.ipv4.conf.all.log_martians = 1\" \n\"net.ipv4.conf.default.log_martians = 1\" >> /etc/sysctl.d/60 -\nnetipv4_sysctl.conf  \nRun the following script to set the active kernel parameters:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "4.1.1": {
        "Title": "Ensure nftables is installed",
        "Description": "nftables provides a new in -kernel packet classification framework that is based on a \nnetwork -specific Virtual Machine (VM) and a new nft userspace command line tool.  \nnftables reuses the existing Netfilter subsystems such as the existing hook \ninfrastructure, the connection tracking system, NAT, userspace queuing and logging \nsubsystem.",
        "Rationale": "nftables is a subsystem of the Linux kernel that can protect against threats originating \nfrom within a corporate network to include malicious mobile code and poorly configured \nsoftware on a host.  \nImpact:  \nChanging firewall settings while connected over the network can result in being locked \nout of the system.",
        "Remediation": "Run the following command to install nftables  \n# dnf install nftables#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "4.1.2": {
        "Title": "Ensure a single firewall configuration utility is in use",
        "Description": "In Linux security, employing a single, effective firewall configuration utility is crucial. \nFirewalls act as digital gatekeepers by filtering network traffic based on rules. Proper \nfirewall configurations ensure that only legitimate traffic gets processed,  reducing the \nsystem’s exposure to potential threats. The choice between FirewallD and NFTables \ndepends on organizational specific needs:  \nFirewallD  - Is a firewall service daemon that provides a dynamic customizable host -\nbased firewall with a D -Bus interface. Being dynamic, it enables creating, changing, and \ndeleting the rules without the necessity to restart the firewall daemon each time the \nrules a re changed.  \nNFTables  - Includes the nft utility for configuration of the nftables subsystem of the \nLinux kernel.  \nNotes:  \n• firewalld with nftables backend does not support passing custom nftables rules to \nfirewalld, using the --direct  option.  \n• In order to configure firewall rules for nftables, a firewall utility needs to be \ninstalled and active of the system. The use of more than one firewall utility may \nproduce unexpected results.  \n• Allow port 22(ssh) needs to be updated to only allow systems requiring ssh \nconnectivity to connect, as per site policy.",
        "Rationale": "Proper configuration of a single firewall utility minimizes cyber threats and protects \nservices and data, while avoiding vulnerabilities like open ports or exposed services. \nStandardizing on a single tool simplifies management, reduces errors, and fortifie s \nsecurity across Linux systems.",
        "Remediation": "Run the following script to ensure that a single firewall utility is in use on the system:   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "4.2.1": {
        "Title": "Ensure firewalld drops unnecessary services and ports \n(Manual)",
        "Description": "Services and ports can be accepted or explicitly rejected or dropped by a zone.  \nFor every zone, you can set a default behavior that handles incoming traffic that is not \nfurther specified. Such behavior is defined by setting the target of the zone. There are \nthree options - default, ACCEPT, REJECT, and DROP.  \n• ACCEPT - you accept all incoming packets except those disabled by a specific \nrule. \n• REJECT - you disable all incoming packets except those that you have allowed \nin specific rules and the source machine is informed about the rejection.  \n• DROP - you disable all incoming packets except those that you have allowed in \nspecific rules and no information sent to the source machine.  \nNote:  \n• - IF - NFTables  is being used, this recommendation can be skipped.  \n• Allow port 22(ssh) needs to be updated to only allow systems requiring ssh \nconnectivity to connect, as per site policy.",
        "Rationale": "To reduce the attack surface of a system, all services and ports should be blocked \nunless required",
        "Remediation": "If Firewalld is in use on the system:  \nRun the following command to remove an unnecessary service:  \n# firewall -cmd --remove-service=<service>  \nExample:  \n# firewall -cmd --remove-service=cockpit  \nRun the following command to remove an unnecessary port:  \n# firewall -cmd --remove-port=<port -number>/<port -type> \nExample:  \n# firewall -cmd --remove-port=25/tcp  \nRun the following command to make new settings persistent:  \n# firewall -cmd --runtime-to-permanent#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "4.2.2": {
        "Title": "Ensure firewalld loopback traffic is configured",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \ntraffic should be seen, all other interfaces should ignore traffic on this netwo rk as an \nanti-spoofing measure.",
        "Remediation": "Run the following script to implement the loopback rules:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "4.3.1": {
        "Title": "Ensure nftables base chains exist",
        "Description": "Chains are containers for rules. They exist in two kinds, base chains and regular chains. \nA base chain is an entry point for packets from the networking stack, a regular chain \nmay be used as jump target and is used for better rule organization.  \nNote:  - IF - Firewalld  is in use, this recommendation can be skipped.",
        "Rationale": "If a base chain doesn't exist with a hook for input, forward, and delete, packets that \nwould flow through those chains will not be touched by nftables.  \nImpact:  \nIf configuring over ssh, creating  a base chain  with a policy of drop  will cause loss of \nconnectivity.  \nEnsure that a rule allowing ssh has been added to the base chain prior to setting the \nbase chain's policy to drop",
        "Remediation": "- IF - NFTables  utility is in use on your system:  \nRun the following command to create the base chains:  \n# nft create chain inet <table name> <base chain name> { type filter hook \n<(input|forward|output)> priority 0 \\; } \nExample:  \n# nft create chain inet filter input { type filter hook input priority 0 \\; } \n# nft create chain inet filter forward { type filter hook forward priority 0 \n\\; } \n# nft create chain inet filter output { type filter hook output priority 0 \\; \n} \nNote:  use the add command if the create  command returns an error due to the chain \nalready existing.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "4.3.2": {
        "Title": "Ensure nftables established connections are configured \n(Manual)",
        "Description": "Configure the firewall rules for new outbound and established connections  \nNote:  - IF - Firewalld  is in use, this recommendation can be skipped.",
        "Rationale": "If rules are not in place for established connections, all packets will be dropped by the \ndefault policy preventing network usage.",
        "Remediation": "- IF - NFTables  utility is in use on your system:  \nConfigure nftables in accordance with site policy. The following commands will \nimplement a policy to allow all established connections:  \n# systemctl is -enabled nftables.service | grep -q 'enabled' && nft add rule \ninet filter input ip protocol tcp ct state established accept  \n# systemctl is -enabled nftables.service | grep -q 'enabled' && nft add rule \ninet filter input ip protocol udp ct state  established accept  \n# systemctl is -enabled nftables.service | grep -q 'enabled' && nft add rule \ninet filter input ip protocol icmp ct state established accept#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "4.3.3": {
        "Title": "Ensure nftables default deny firewall policy",
        "Description": "Base chain policy is the default verdict that will be applied to packets reaching the end \nof the chain.",
        "Rationale": "There are two policies: accept (Default) and drop. If the policy is set to accept , the \nfirewall will accept any packet that is not configured to be denied and the packet will \ncontinue traversing the network stack.  \nIt is easier to explicitly permit acceptable usage than to deny unacceptable usage.  \nNote:  \n• - IF - Firewalld  is in use, this recommendation can be skipped.  \n• Changing firewall settings while connected over the network can result in being \nlocked out of the system.  \nImpact:  \nIf configuring nftables over ssh, creating a base chain with a policy of drop will cause \nloss of connectivity.  \nEnsure that a rule allowing ssh has been added to the base chain prior to setting \nthe base chain's policy to drop",
        "Remediation": "- IF - NFTables  utility is in use on your system:  \nRun the following command for the base chains with the input, forward, and output \nhooks to implement a default DROP policy:  \n# nft chain <table family> <table name> <chain name> { policy drop \\; } \nExample:  \n# nft chain inet filter input { policy drop \\; } \n# nft chain inet filter forward { policy drop \\; } \nDefault Value:  \naccept#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "4.3.4": {
        "Title": "Ensure nftables loopback traffic is configured",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \ntraffic should be seen, all other interfaces should ignore traffic on this netwo rk as an \nanti-spoofing measure.",
        "Remediation": "Run the following script to implement the loopback rules:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.1": {
        "Title": "Ensure permissions on /etc/ssh/sshd_config are configured",
        "Description": "The file /etc/ssh/sshd_config , and files ending in .conf  in the \n/etc/ssh/sshd_config.d  directory, contain configuration specifications for sshd .",
        "Rationale": "configuration specifications for sshd  need to be protected from unauthorized changes \nby non -privileged users.",
        "Remediation": "Run the following script to set ownership and permissions on /etc/ssh/sshd_config  \nand files ending in .conf  in the /etc/ssh/sshd_config.d  directory:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.10": {
        "Title": "Ensure sshd DisableForwarding is enabled",
        "Description": "The DisableForwarding  parameter disables all forwarding features, including X11, \nssh-agent(1), TCP and StreamLocal. This option overrides all other forwarding -related \noptions and may simplify restricted configurations.  \n• X11Forwarding provides the ability to tunnel X11 traffic through the connection to \nenable remote graphic connections.  \n• ssh-agent is a program to hold private keys used for public key authentication. \nThrough use of environment variables the agent can be located and \nautomatically used for authentication when logging in to other machines using \nssh. \n• SSH port forwarding is a mechanism in SSH for tunneling application ports from \nthe client to the server, or servers to clients. It can be used for adding encryption \nto legacy applications, going through firewalls, and some system administrators \nand IT prof essionals use it for opening backdoors into the internal network from \ntheir home machines.",
        "Rationale": "Disable X11 forwarding unless there is an operational requirement to use X11 \napplications directly. There is a small risk that the remote X11 servers of users who are \nlogged in via SSH with X11 forwarding could be compromised by other users on the \nX11 serv er. Note that even if X11 forwarding is disabled, users can always install their \nown forwarders.  \nanyone with root privilege on the the intermediate server can make free use of ssh -\nagent to authenticate them to other servers  \nLeaving port forwarding enabled can expose the organization to security risks and \nbackdoors. SSH connections are protected with strong encryption. This makes their \ncontents invisible to most deployed network monitoring and traffic filtering solutions. \nThis invisibility carries considerable risk potential if it is used for malicious purposes \nsuch as data exfiltration. Cybercriminals or malware could exploit SSH to hide their \nunauthorized communications, or to exfiltrate stolen data from the target network.   Impact:  \nSSH tunnels are widely used in many corporate environments. In some environments \nthe applications themselves may have very limited native support for security. By \nutilizing tunneling, compliance with SOX, HIPAA, PCI -DSS, and other standards can be \nachieved  without having to modify the applications.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the DisableForwarding  parameter to yes \nabove any Include  entry as follows:  \nDisableForwarding yes  \nNote:  First occurrence of a option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "5.1.11": {
        "Title": "Ensure sshd GSSAPIAuthentication is disabled",
        "Description": "The GSSAPIAuthentication  parameter specifies whether user authentication based on \nGSSAPI is allowed",
        "Rationale": "Allowing GSSAPI authentication through SSH exposes the system's GSSAPI to remote \nhosts, and should be disabled to reduce the attack surface of the system",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the GSSAPIAuthentication  parameter to \nno above any Include  and Match  entries as follows:  \nGSSAPIAuthentication no  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.   Default Value:  \nGSSAPIAuthentication no#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "5.1.12": {
        "Title": "Ensure sshd HostbasedAuthentication is disabled",
        "Description": "The HostbasedAuthentication  parameter specifies if authentication is allowed \nthrough trusted hosts via the user of .rhosts , or /etc/hosts.equiv , along with \nsuccessful public key client host authentication.",
        "Rationale": "Even though the .rhosts  files are ineffective if support is disabled in /etc/pam.conf , \ndisabling the ability to use .rhosts  files in SSH provides an additional layer of \nprotection.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the HostbasedAuthentication  parameter \nto no above any Include  and Match  entries as follows:  \nHostbasedAuthentication no  \nNote:  First occurrence of a option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.  \nDefault Value:  \nHostbasedAuthentication no#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.13": {
        "Title": "Ensure sshd IgnoreRhosts is enabled",
        "Description": "The IgnoreRhosts  parameter specifies that .rhosts  and .shosts  files will not be used \nin RhostsRSAAuthentication  or HostbasedAuthentication .",
        "Rationale": "Setting this parameter forces users to enter a password when authenticating with SSH.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the IgnoreRhosts  parameter to yes above \nany Include  and Match  entries as follows:  \nIgnoreRhosts yes  \nNote:  First occurrence of a option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.  \nDefault Value:  \nIgnoreRhosts yes#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.14": {
        "Title": "Ensure sshd LoginGraceTime is configured",
        "Description": "The LoginGraceTime  parameter specifies the time allowed for successful \nauthentication to the SSH server. The longer the Grace period is the more open \nunauthenticated connections can exist. Like other session controls in this session the \nGrace Period should be limited to app ropriate organizational limits to ensure the service \nis available for needed access.",
        "Rationale": "Setting the LoginGraceTime  parameter to a low number will minimize the risk of \nsuccessful brute force attacks to the SSH server. It will also limit the number of \nconcurrent unauthenticated connections While the recommended setting is 60 seconds \n(1 Minute), set the number based on s ite policy.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the LoginGraceTime  parameter to 60 \nseconds or less above any Include  entry as follows:  \nLoginGraceTime 60  \nNote:  First occurrence of a option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location.  \nDefault Value:  \nLoginGraceTime 120#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.15": {
        "Title": "Ensure sshd LogLevel is configured",
        "Description": "SSH provides several logging levels with varying amounts of verbosity. The DEBUG  \noptions are specifically not recommended other than strictly for debugging SSH \ncommunications. These levels provide so much data that it is difficult to identify \nimportant security information, and may violate the privacy of users.",
        "Rationale": "The INFO  level is the basic level that only records login activity of SSH users. In many \nsituations, such as Incident Response, it is important to determine when a particular \nuser was active on a system. The logout record can eliminate those users who \ndisconnected , which helps narrow the field.  \nThe VERBOSE  level specifies that login and logout activity as well as the key fingerprint \nfor any SSH key used for login will be logged. This information is important for SSH key \nmanagement, especially in legacy environments.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the LogLevel  parameter to VERBOSE  or \nINFO  above any Include  and Match  entries as follows:  \nLogLevel VERBOSE  \n   - OR - \nLogLevel INFO  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.  \nDefault Value:  \nLogLevel INFO#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.16": {
        "Title": "Ensure sshd MaxAuthTries is configured",
        "Description": "The MaxAuthTries  parameter specifies the maximum number of authentication \nattempts permitted per connection. When the login failure count reaches half the \nnumber, error messages will be written to the syslog  file detailing the login failure.",
        "Rationale": "Setting the MaxAuthTries  parameter to a low number will minimize the risk of \nsuccessful brute force attacks to the SSH server. While the recommended setting is 4, \nset the number based on site policy.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the MaxAuthTries  parameter to 4 or less \nabove any Include  and Match  entries as follows:  \nMaxAuthTries 4  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.   Default Value:  \nMaxAuthTries 6#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.17": {
        "Title": "Ensure sshd MaxStartups is configured",
        "Description": "The MaxStartups  parameter specifies the maximum number of concurrent \nunauthenticated connections to the SSH daemon.",
        "Rationale": "To protect a system from denial of service due to a large number of pending \nauthentication connection attempts, use the rate limiting function of MaxStartups to \nprotect availability of sshd logins and prevent overwhelming the daemon.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the MaxStartups  parameter to 10:30:60  or \nmore restrictive above any Include  entries as follows:  \nMaxStartups 10:30:60  \nNote:  First occurrence of a option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location.  \nDefault Value:  \nMaxStartups 10:30:100#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.18": {
        "Title": "Ensure sshd MaxSessions is configured",
        "Description": "The MaxSessions  parameter specifies the maximum number of open sessions \npermitted from a given connection.",
        "Rationale": "To protect a system from denial of service due to a large number of concurrent \nsessions, use the rate limiting function of MaxSessions to protect availability of sshd \nlogins and prevent overwhelming the daemon.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the MaxSessions  parameter to 10 or less \nabove any Include  and Match  entries as follows:  \nMaxSessions 10  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.  \nDefault Value:  \nMaxSessions 10#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.19": {
        "Title": "Ensure sshd PermitEmptyPasswords is disabled",
        "Description": "The PermitEmptyPasswords  parameter specifies if the SSH server allows login to \naccounts with empty password strings.",
        "Rationale": "Disallowing remote shell access to accounts that have an empty password reduces the \nprobability of unauthorized access to the system.",
        "Remediation": "Edit /etc/ssh/sshd_config  and set the PermitEmptyPasswords  parameter to no \nabove any Include  and Match  entries as follows:  \nPermitEmptyPasswords no  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.   Default Value:  \nPermitEmptyPasswords no#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.2": {
        "Title": "Ensure permissions on SSH private host key files are \nconfigured",
        "Description": "An SSH private key is one of two files used in SSH public key authentication. In this \nauthentication method, the possession of the private key is proof of identity. Only a \nprivate key that corresponds to a public key will be able to authenticate successful ly. \nThe private keys need to be stored and handled carefully, and no copies of the private \nkey should be distributed.",
        "Rationale": "If an unauthorized user obtains the private SSH host key file, the host could be \nimpersonated",
        "Remediation": "Run the following script to set mode, ownership, and group on the private SSH host key \nfiles: \n{ \n   l_output=\"\" l_output2=\"\"  \n   l_ssh_group_name=\"$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)\"  \n   f_file_access_fix()  \n   { \n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do  \n         echo \"File: \\\"$l_file \\\" mode: \\\"$l_file_mode \\\" owner \\\"$l_file_owner \\\" group \n\\\"$l_file_group \\\"\" \n         l_out2=\"\"  \n         [ \"$l_file_group\" = \"$l_ssh_group_name\" ] && l_pmask=\"0137\" || l_pmask=\"0177\"  \n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"  \n         if [ $(( $l_file_mo de & $l_pmask )) -gt 0 ]; then  \n            l_out2=\"$l_out2 \\n  - Mode: \\\"$l_file_mode \\\" should be mode: \\\"$l_maxperm \\\" \nor more restrictive \\n   - updating to mode: \\:$l_maxperm \\\"\" \n            if [ \"l_file_group\" = \"$l_ssh_group_name\" ]; then  \n               chmod u-x,g-wx,o-rwx \"$l_file\"  \n            else \n               chmod u-x,go-rwx \"$l_file\"  \n            fi \n         fi \n         if [ \"$l_file_owner\" != \"root\" ]; then  \n            l_out2=\"$l_out2 \\n  - Owned by: \\\"$l_file_owner \\\" should be owned by \n\\\"root\\\"\\n   - Changing ownership to \\\"root\\\"\" \n            chown root \"$l_file\"  \n         fi \n         if [[ ! \"$l_file_group\" =~ ($l_ssh_group_name|root) ]]; then  \n            [ -n \"$l_ssh_group_name\" ] && l_new_group=\"$l_ssh_group_name\" || \nl_new_group=\"root\"  \n            l_out2=\"$l_out2 \\n  - Owned by group \\\"$l_file_group \\\" should be group \nowned by: \\\"$l_ssh_group_name \\\" or \\\"root\\\"\\n   - Changing group ownership to \n\\\"$l_new_group \\\"\" \n            chgrp \"$l_new_group\" \"$l_file\"  \n         fi \n         if [ -n \"$l_out2\" ]; the n \n            l_output2=\"$l_output2 \\n - File: \\\"$l_file \\\"$l_out2\"  \n         else \n            l_output=\"$l_output \\n - File: \\\"$l_file \\\"\\n  - Correct: mode: \n\\\"$l_file_mode \\\", owner: \\\"$l_file_owner \\\", and group owner: \\\"$l_file_group \\\" \nconfigured\"  \n         fi \n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\")  \n   } \n   while IFS= read -r -d $'\\0' l_file; do  \n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then  \n         file \"$l_file\" | grep -Piq -- '\\bopenssh \\h+([^#\\n\\r]+\\h+)?private \\h+key\\b' && \nf_file_access_fix  \n      fi \n   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)  \n   if [ -z \"$l_output2\" ]; then  \n      echo -e \"\\n- No access changes required \\n\" \n   else \n      echo -e \"\\n- Remediation results: \\n$l_output2 \\n\" \n   fi \n}#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.20": {
        "Title": "Ensure sshd PermitRootLogin is disabled",
        "Description": "The PermitRootLogin  parameter specifies if the root user can log in using SSH. The \ndefault is prohibit -password .",
        "Rationale": "Disallowing root  logins over SSH requires system admins to authenticate using their \nown individual account, then escalating to root . This limits opportunity for non -\nrepudiation and provides a clear audit trail in the event of a security incident.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the PermitRootLogin  parameter to no \nabove any Include  and Match  entries as follows:  \nPermitRootLogin no  \nNote:  First occurrence of an option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include  location.   Default Value:  \nPermitRootLogin without -password#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.21": {
        "Title": "Ensure sshd PermitUserEnvironment is disabled",
        "Description": "The PermitUserEnvironment  option allows users to present environment options to \nthe SSH daemon.",
        "Rationale": "Permitting users the ability to set environment variables through the SSH daemon could \npotentially allow users to bypass security controls (e.g. setting an execution path that \nhas SSH executing trojan'd programs)",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the PermitUserEnvironment  parameter to \nno above any Include  entries as follows:  \nPermitUserEnvironment no  \nNote:  First occurrence of an option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location.  \nDefault Value:  \nPermitUserEnvironment no#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.22": {
        "Title": "Ensure sshd UsePAM is enabled",
        "Description": "The UsePAM  directive enables the Pluggable Authentication Module (PAM) interface. If \nset to yes this will enable PAM authentication using \nChallengeResponseAuthentication  and PasswordAuthentication  directives in \naddition to PAM account and session module processing for all authentication types.",
        "Rationale": "When usePAM  is set to yes, PAM runs through account and session types properly. This \nis important if you want to restrict access to services based off of IP, time or other \nfactors of the account. Additionally, you can make sure users inherit certain \nenvironment variables on login or disallow access to the server",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the UsePAM  parameter to yes above any \nInclude  entries as follows:  \nUsePAM yes  \nNote:  First occurrence of an option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location.  \nDefault Value:  \nUsePAM yes#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.3": {
        "Title": "Ensure permissions on SSH public host key files are \nconfigured",
        "Description": "An SSH public key is one of two files used in SSH public key authentication. In this \nauthentication method, a public key is a key that can be used for verifying digital \nsignatures generated using a corresponding private key. Only a public key that \ncorrespo nds to a private key will be able to authenticate successfully.",
        "Rationale": "If a public host key file is modified by an unauthorized user, the SSH service may be \ncompromised.",
        "Remediation": "Run the following script to set mode, ownership, and group on the public SSH host key \nfiles: \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.4": {
        "Title": "Ensure sshd Ciphers are configured",
        "Description": "This variable limits the ciphers that SSH can use during communication.  \nNotes:  \n• Some organizations may have stricter requirements for approved ciphers.  \n• Ensure that ciphers used are in compliance with site policy.  \n• The only \"strong\" ciphers currently FIPS 140 compliant are:  \no aes256 -gcm@openssh.com   \no aes128 -gcm@openssh.com   \no aes256 -ctr \no aes192 -ctr \no aes128 -ctr",
        "Rationale": "Weak ciphers that are used for authentication to the cryptographic module cannot be \nrelied upon to provide confidentiality or integrity, and system data may be compromised.  \n• The Triple DES ciphers, as used in SSH, have a birthday bound of approximately \nfour billion blocks, which makes it easier for remote attackers to obtain clear text \ndata via a birthday attack against a long -duration encrypted session, aka a \n\"Sweet32\" attack . \n• Error handling in the SSH protocol; Client and Server, when using a block cipher \nalgorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote \nattackers to recover certain plain text data from an arbitrary block of cipher text in \nan SSH session  via unknown vectors.",
        "Remediation": "Note:  \n• First occurrence of an option takes precedence.  \n• Though ciphers may be configured through the Ciphers  option in the \n/etc/ssh/sshd_config  file, it is recommended that the ciphers available to \nopenSSH server are configured through system -wide-crypto -policy  \n• If the recommendations in the subsection \"Configure system wide crypto policy\" \nhave been followed, this Audit should be in a passing state. Please review that \nsection before following this Remediation Procedure  \n• By default, system -wide-crypto -policy is applied to the openSSH server. If the \nfollowing defaults don't exist due to modifications or upgrade from a earlier \nrelease, the system -wide-crypto -policy may not be included by the openSSH \nserver. It is recommended  that these defaults be restored, created, or the line \nInclude /etc/crypto -policies/back -ends/opensshserver.config  be \nadded before any lines containing the Cipher  argument.  \n• Defaults:  \no The file /etc/ssh/sshd_config  includes the line: Include \n/etc/ssh/sshd_config.d/*.conf . This line must appear before any \nlines containing the Cipher  argument  \no This directory /etc/ssh/sshd_config.d/  includes a file \n/etc/ssh/sshd_config.d/50 -redhat.conf  \no The file /etc/ssh/sshd_config.d/50 -redhat.conf  includes the line \nInclude /etc/crypto -policies/back -ends/opensshserver.config  \no The file /etc/crypto -policies/back -ends/opensshserver.config  is \ngenerated by system -wide-crypto -policy   - IF - CVE-2023-48795  has been addressed, and it meets local site policy, chacha20 -\npoly1305  may be removed from the list of excluded ciphers.  \nCreate or edit a file in /etc/crypto -policies/policies/modules/  ending in .pmod  \nand add or modify the the following line:  \ncipher@SSH = -3DES-CBC -AES-128-CBC -AES-192-CBC -AES-256-CBC -CHACHA20 -\nPOLY1305  \nExample:  \n# printf '%s \\n' \"# This is a subpolicy to disable weak ciphers\" \"# for the \nSSH protocol (libssh and OpenSSH)\" \"cipher@SSH = -3DES-CBC -AES-128-CBC -AES-\n192-CBC -AES-256-CBC -CHACHA20 -POLY1305\" >> /etc/crypto -\npolicies/policies/modules/NO -SSHWEAKCIPHERS.pmod  \nRun the following command to update the system -wide cryptographic policy  \n# update -crypto-policies --set \n<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>  \nExample:  \n# update -crypto-policies --set DEFAULT:NO -SHA1:NO-WEAKMAC:NO -SSHCBC:NO -\nSSHCHACHA20:NO -SSHWEAKCIPHERS  \nRun the following command to reload the openSSH server to make your cryptographic \nsettings effective:  \n# systemctl reload -or-restart sshd  \n- OR - If system -wide-crypto -policy is not being used to configure available ciphers \n(This is not recommended ) \nEdit the /etc/ssh/sshd_config file and add/modify the Ciphers  line to contain a comma \nseparated list of the site unapproved (weak) Ciphers preceded with a - above any \nInclude  entries:  \nExample:  \nCiphers -3des-cbc,aes128 -cbc,aes192 -cbc,aes256 -cbc,chacha20 -\npoly1305@openssh.com  \nDefault Value:  \nCiphers chacha20 -poly1305@openssh.com ,aes128 -ctr,aes192 -ctr,aes256 -ctr,aes128 -\ngcm@openssh.com ,aes256 -gcm@openssh.com#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.5": {
        "Title": "Ensure sshd KexAlgorithms is configured",
        "Description": "Key exchange is any method in cryptography by which cryptographic keys are \nexchanged between two parties, allowing use of a cryptographic algorithm. If the sender \nand receiver wish to exchange encrypted messages, each must be equipped to encrypt \nmessages t o be sent and decrypt messages received  \nNotes:  \n• Kex algorithms have a higher preference the earlier they appear in the list  \n• Some organizations may have stricter requirements for approved Key exchange \nalgorithms  \n• Ensure that Key exchange algorithms used are in compliance with site policy  \n• The only Key Exchange Algorithms currently FIPS 140 approved are:  \no ecdh -sha2 -nistp256  \no ecdh -sha2 -nistp384  \no ecdh -sha2 -nistp521  \no diffie -hellman -group -exchange -sha256  \no diffie -hellman -group16 -sha512  \no diffie -hellman -group18 -sha512  \no diffie -hellman -group14 -sha256",
        "Rationale": "Key exchange methods that are considered weak should be removed. A key exchange \nmethod may be weak because too few bits are used, or the hashing algorithm is \nconsidered too weak. Using weak algorithms could expose connections to man -in-the-\nmiddle attacks",
        "Remediation": "Note:  \n• First occurrence of an option takes precedence.  \n• Though key_exchange may be configured through the KexAlgorithms  option in \nthe /etc/ssh/sshd_config  file, it is recommended that the key_exchange \navailable to openSSH server are configured through system -wide-crypto -policy  \n• If the recommendations in the subsection \"Configure system wide crypto policy\" \nhave been followed, this Audit should be in a passing state. Please review that \nsection before following this Remediation Procedure  \n• By default, system -wide-crypto -policy is applied to the openSSH server. If the \nfollowing defaults don't exist due to modifications or upgrade from a earlier \nrelease, the system -wide-crypto -policy may not be included by the openSSH \nserver. It is recommended  that these defaults be restored, created, or the line \nInclude /etc/crypto -policies/back -ends/opensshserver.config  be \nadded before any lines containing the KexAlgorithms  argument.  \n• Defaults:  \no The file /etc/ssh/sshd_config  includes the line: Include \n/etc/ssh/sshd_config.d/*.conf . This line must appear before any \nlines containing the KexAlgorithms  argument  \no This directory /etc/ssh/sshd_config.d/  includes a file \n/etc/ssh/sshd_config.d/50 -redhat.conf  \no The file /etc/ssh/sshd_config.d/50 -redhat.conf  includes the line \nInclude /etc/crypto -policies/back -ends/opensshserver.config  \no The file /etc/crypto -policies/back -ends/opensshserver.config  is \ngenerated by system -wide-crypto -policy   Follow the Remediation Procedure in \"Ensure system wide crypto policy disables sha1 \nhash and signature support\"  \nThis is and excerpt of the Remediation Procedure from \" Ensure system wide \ncrypto policy disables sha1 hash and signature support\":  \nCreate or edit a file in /etc/crypto -policies/policies/modules/  ending in .pmod  \nand add or modify the following lines:  \nhash = -SHA1 \nsign = -*-SHA1 \nsha1_in_certs = 0  \nExample:  \n# printf '%s \\n' \"# This is a subpolicy dropping the SHA1 hash and signature \nsupport\" \"hash = -SHA1\" \"sign = -*-SHA1\" \"sha1_in_certs = 0\" >> /etc/crypto -\npolicies/policies/modules/NO -SHA1.pmod  \nRun the following command to update the system -wide cryptographic policy  \n# update -crypto-policies --set \n<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>  \nExample:  \n# update -crypto-policies --set DEFAULT:NO -SHA1:NO-WEAKMAC:NO -SSHCBC:NO -\nSSHCHACHA20:NO -SSHETM:NO -SSHWEAKCIPHERS  \nRun the following command to reload the openSSH server to make your cryptographic \nsettings effective:  \n# systemctl reload -or-restart sshd  \n- OR - If system -wide-crypto -policy is not being used to configure available \nKexAlgorithms ( This is not recommended ) \nEdit the /etc/ssh/sshd_config  file and add/modify the KexAlgorithms  line to contain \na comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - \nabove any Include  entries:  \nExample:  \nKexAlgorithms -diffie-hellman-group1-sha1,diffie -hellman-group14-sha1,diffie -\nhellman-group-exchange -sha1 \nDefault Value:  \nKexAlgorithms sntrup761x25519 -sha512@openssh.com ,curve25519 -\nsha256, curve25519 -sha256@libssh.org ,ecdh -sha2 -nistp256,ecdh -sha2 -nistp384,ecdh -\nsha2 -nistp521,diffie -hellman -group -exchange -sha256,diffie -hellman -group16 -\nsha512,diffie -hellman -group18 -sha512,diffie -hellman -group14 -sha256#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.6": {
        "Title": "Ensure sshd MACs are configured",
        "Description": "This variable limits the types of MAC algorithms that SSH can use during \ncommunication.  \nNotes:  \n• Some organizations may have stricter requirements for approved MACs.  \n• Ensure that MACs used are in compliance with site policy.  \n• The only \"strong\" MACs currently FIPS 140 approved are:  \no HMAC -SHA1  \no HMAC -SHA2 -256 \no HMAC -SHA2 -384 \no HMAC -SHA2 -512",
        "Rationale": "MD5 and 96 -bit MAC algorithms are considered weak and have been shown to increase \nexploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal \nof attention as a weak spot that can be exploited with expanded computing power. An \nattacker that breaks the algorithm could take advantage of a MiTM position to decrypt \nthe SSH tunnel and capture credentials and information.",
        "Remediation": "Note:  \n• First occurrence of an option takes precedence.  \n• Though MACs may be configured through the MACs  option in the \n/etc/ssh/sshd_config  file, it is recommended that the MACs available to \nopenSSH server are configured through system -wide-crypto -policy  \n• If the recommendations in the subsection \"Configure system wide crypto policy\" \nhave been followed, this Audit should be in a passing state. Please review that \nsection before following this Remediation Procedure  \n• By default, system -wide-crypto -policy is applied to the openSSH server. If the \nfollowing defaults don't exist due to modifications or upgrade from a earlier \nrelease, the system -wide-crypto -policy may not be included by the openSSH \nserver. It is recommended  that these defaults be restored, created, or the line \nInclude /etc/crypto -policies/back -ends/opensshserver.config  be \nadded before any lines containing the MACs  argument.  \n• Defaults:  \no The file /etc/ssh/sshd_config  includes the line: Include \n/etc/ssh/sshd_config.d/*.conf . This line must appear before any \nlines containing the MACs  argument  \no This directory /etc/ssh/sshd_config.d/  includes a file \n/etc/ssh/sshd_config.d/50 -redhat.conf  \no The file /etc/ssh/sshd_config.d/50 -redhat.conf  includes the line \nInclude /etc/crypto -policies/back -ends/opensshserver.config  \no The file /etc/crypto -policies/back -ends/opensshserver.config  is \ngenerated by system -wide-crypto -policy   - IF - CVE-2023-48795  has not been reviewed and addressed, Recommendation \n\"Ensure system wide crypto policy disables EtM for ssh\"  should be followed.  \nCreate or edit a file in /etc/crypto -policies/policies/modules/  ending in .pmod  \nand add or modify the the following line:  \nmac@SSH = -HMAC-MD5* -UMAC-64* -UMAC-128* \nExample:  \n# printf '%s \\n' \"# This is a subpolicy to disable weak MACs\" \"# for the SSH \nprotocol (libssh and OpenSSH)\" \"mac@SSH = -HMAC-MD5* -UMAC-64* -UMAC-128*\" >> \n/etc/crypto -policies/policies/modules/NO -SSHWEAKMACS.pmod  \nRun the following command to update the system -wide cryptographic policy  \n# update -crypto-policies --set \n<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>  \nExample:  \n# update -crypto-policies --set DEFAULT:NO -SHA1:NO-WEAKMAC:NO -SSHCBC:NO -\nSSHCHACHA20:NO -SSHETM:NO -SSHWEAKCIPHERS:NO -SSHWEAKMACS  \nRun the following command to reload the openSSH server to make your cryptographic \nsettings effective:  \n# systemctl reload -or-restart sshd  \n- OR - If system -wide-crypto -policy is not being used to configure available ciphers \n(This is not recommended ) \nEdit the /etc/ssh/sshd_config  file and add/modify the MACs  line to contain a comma \nseparated list of the site unapproved (weak) MACs preceded with a - above any \nInclude  entries:  \nExample:  \nMACs -hmac-md5,hmac -md5-96,hmac-ripemd160,hmac -sha1-96,umac-\n64@openssh.com,hmac -md5-etm@openssh.com,hmac -md5-96-etm@openssh.com,hmac -\nripemd160 -etm@openssh.com,hmac -sha1-96-etm@openssh.com,umac -64-\netm@openssh.com,umac -128-etm@openssh.com  \n- IF - CVE-2023-48795  has not been reviewed and addressed, the following etm MACs \nshould be added to the exclude list: hmac -sha1 -etm@openssh.com ,hmac -sha2 -256-\netm@openssh.com ,hmac -sha2 -512-etm@openssh.com  \nDefault Value:  \nMACs umac -64-etm@openssh.com ,umac -128-etm@openssh.com ,hmac -sha2 -256-\netm@openssh.com ,hmac -sha2 -512-etm@openssh.com ,hmac -sha1 -\netm@openssh.com ,umac -64@openssh.com ,umac -128@openssh.com ,hmac -sha2 -\n256,hmac -sha2 -512,hmac -sha1#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.7": {
        "Title": "Ensure sshd access is configured",
        "Description": "There are several options available to limit which users and group can access the \nsystem via SSH. It is recommended that at least one of the following options be \nleveraged:  \n• AllowUsers :  \no The AllowUsers  variable gives the system administrator the option of \nallowing specific users to ssh into the system. The list consists of space \nseparated user names. Numeric user IDs are not recognized with this \nvariable. If a system administrator wants to restrict user access further by \nonly allowing the allowed users to log in from a particular host, the entry \ncan be specified in the form of user@host.  \n• AllowGroups :  \no The AllowGroups  variable gives the system administrator the option of \nallowing specific groups of users to ssh into the system. The list consists \nof space separated group names. Numeric group IDs are not recognized \nwith this variable.  \n• DenyUsers :  \no The DenyUsers  variable gives the system administrator the option of \ndenying specific users to ssh into the system. The list consists of space \nseparated user names. Numeric user IDs are not recognized with this \nvariable. If a system administrator wants to restrict user access further by \nspecifically denying a user's access from a particular host, the e ntry can \nbe specified in the form of user@host.  \n• DenyGroups :  \no The DenyGroups  variable gives the system administrator the option of \ndenying specific groups of users to ssh into the system. The list consists \nof space separated group names. Numeric group IDs are not recognized \nwith this variable.",
        "Rationale": "Restricting which users can remotely access the system via SSH will help ensure that \nonly authorized users access the system.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set one or more of the parameters above any \nInclude  and Match  set statements as follows:  \nAllowUsers <userlist>  \n - AND/OR - \nAllowGroups <grouplist>  \nNote:  \n• First occurrence of a option takes precedence, Match  set statements \nwithstanding. If Include  locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a .conf  file in a \nInclude  directory.  \n•  \nBe advised  that these options are \"ANDed\" together. If both AllowUsers  and \nAllowGroups  are set, connections will be limited to the list of users that are also \na member of an allowed group. It is recommended that only one be set for clarity \nand ease of administration.  \n• It is easier to manage an allow list than a deny list. In a deny list, you could \npotentially add a user or group and forget to add it to the deny list.   Default Value:  \nNone#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.8": {
        "Title": "Ensure sshd Banner is configured",
        "Description": "The Banner  parameter specifies a file whose contents must be sent to the remote user \nbefore authentication is permitted. By default, no banner is displayed.",
        "Rationale": "Banners are used to warn connecting users of the particular site's policy regarding \nconnection. Presenting a warning message prior to the normal user login may assist the \nprosecution of trespassers on the computer system.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the Banner  parameter above any Include  \nand Match  entries as follows:  \nBanner /etc/issue.net  \nNote:  First occurrence of a option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location.  \nEdit the file bein g called by the Banner  argument with the appropriate contents \naccording to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to \nthe OS platform  \nExample:  \n# printf '%s \\n' \"Authorized users only. All activity may be monitored and \nreported.\" > \"$(sshd -T | awk '$1 == \"banner\" {print $2}')\"#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.1.9": {
        "Title": "Ensure sshd ClientAliveInterval and ClientAliveCountMax \nare configured",
        "Description": "Note:  To clarify, the two settings described below are only meant for idle connections \nfrom a protocol perspective and are not meant to check if the user is active or not. An \nidle user does not mean an idle connection. SSH does not and never had, intentionally,  \nthe capability to drop idle users. In SSH versions before 8.2p1  there was a bug that \ncaused these values to behave in such a manner that they were abused to disconnect \nidle users. This bug has been resolved in 8.2p1  and thus it can no longer be abuse d \ndisconnect idle users.  \nThe two options ClientAliveInterval  and ClientAliveCountMax  control the timeout \nof SSH sessions. Taken directly from man 5 sshd_config : \n• ClientAliveInterval  Sets a timeout interval in seconds after which if no data \nhas been received from the client, sshd(8) will send a message through the \nencrypted channel to request a response from the client. The default is 0, \nindicating that these messages will not be sent  to the client.  \n• ClientAliveCountMax  Sets the number of client alive messages which may be \nsent without sshd(8) receiving any messages back from the client. If this \nthreshold is reached while client alive messages are being sent, sshd will \ndisconnect the client, terminating the session. It is  important to note that the use \nof client alive messages is very different from TCPKeepAlive. The client alive \nmessages are sent through the encrypted channel and therefore will not be \nspoofable. The TCP keepalive option en ‐abled by TCPKeepAlive is spoofable. \nThe client alive mechanism is valuable when the client or server depend on \nknowing when a connection has become unresponsive. The default value is 3. If \nClientAliveInterval is set to 15, and ClientAliveCountMax is left a t the default, \nunresponsive SSH clients will be disconnected after approximately 45 seconds. \nSetting a zero ClientAliveCountMax disables connection termination.",
        "Rationale": "In order to prevent resource exhaustion, appropriate values should be set for both \nClientAliveInterval  and ClientAliveCountMax . Specifically, looking at the source \ncode, ClientAliveCountMax  must be greater than zero in order to utilize the ability of \nSSH to drop idle connections. If connections are allowed to stay open indefinitely, this \ncan potentially be used as a DDOS attack or simple resource exhaustion could occur \nover unreliable networ ks. \nThe example set here is a 45 second timeout. Consult your site policy for network \ntimeouts and apply as appropriate.",
        "Remediation": "Edit the /etc/ssh/sshd_config  file to set the ClientAliveInterval  and \nClientAliveCountMax  parameters above any Include  and Match  entries according to \nsite policy.  \nExample:  \nClientAliveInterval 15  \nClientAliveCountMax 3  \nNote:  First occurrence of a option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location.   Default Value:  \nClientAliveInterval 0  \nClientAliveCountMax 3#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.2.1": {
        "Title": "Ensure sudo is installed",
        "Description": "sudo  allows a permitted user to execute a command as the superuser or another user, \nas specified by the security policy. The invoking user's real (not effective) user ID is \nused to determine the user name with which to query the security policy.",
        "Rationale": "sudo  supports a plug -in architecture for security policies and input/output logging. Third \nparties can develop and distribute their own policy and I/O logging plug -ins to work \nseamlessly with the sudo  front end. The default security policy is sudoers , which is \nconfigured via the file /etc/sudoers  and any entries in /etc/sudoers.d . \nThe security policy determines what privileges, if any, a user has to run sudo . The policy \nmay require that users authenticate themselves with a password or another \nauthentication mechanism. If authentication is required, sudo  will exit if the user's \npassword is not entered within a configurable time limit. This limit is policy -specific.",
        "Remediation": "Run the following command to install sudo  \n# dnf install sudo#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.2.2": {
        "Title": "Ensure sudo commands use pty",
        "Description": "sudo  can be configured to run only from a pseudo terminal ( pseudo-pty).",
        "Rationale": "Attackers can run a malicious program using sudo  which would fork a background \nprocess that remains even when the main program has finished executing.  \nImpact:  \nWARNING:  Editing the sudo  configuration incorrectly can cause sudo  to stop \nfunctioning. Always use visudo  to modify sudo  configuration files.",
        "Remediation": "Edit the file /etc/sudoers  with visudo  or a file in /etc/sudoers.d/  with visudo -f \n<PATH TO FILE>  and add the following line:  \nDefaults use_pty  \nEdit the file /etc/sudoers  with visudo  and any files in /etc/sudoers.d/  with visudo \n-f <PATH TO FILE>  and remove any occurrence of !use_pty  \nNote:  \n• sudo will read each file in /etc/sudoers.d , skipping file names that end in ~ or \ncontain a . character to avoid causing problems with package manager or editor \ntemporary/backup files.  \n• Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first  will \nbe parsed before /etc/sudoers.d/10_second . \n• Be aware that because the sorting is lexical, not numeric, \n/etc/sudoers.d/1_whoops  would be loaded after \n/etc/sudoers.d/10_second . \n• Using a consistent number of leading zeroes in the file names can be used to \navoid such problems.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.2.3": {
        "Title": "Ensure sudo log file exists",
        "Description": "The Defaults logfile  entry sets the path to the sudo log file. Setting a path turns on \nlogging to a file; negating this option turns it off. By default, sudo logs via syslog.",
        "Rationale": "Defining a dedicated log file for sudo simplifies auditing of sudo commands and creation \nof auditd rules for sudo.  \nImpact:  \nWARNING:  Editing the sudo  configuration incorrectly can cause sudo  to stop \nfunctioning. Always use visudo  to modify sudo  configuration files.  \nCreation of additional log files can cause disk space exhaustion if not correctly \nmanaged. You should configure logrotate  to manage the sudo log in accordance with \nyour local policy.",
        "Remediation": "Edit the file /etc/sudoers  or a file in /etc/sudoers.d/  with visudo -f <PATH TO \nFILE>  and add the following line:  \nDefaults  logfile=\"<PATH TO CUSTOM LOG FILE>\"  \nExample  \nDefaults logfile=\"/var/log/sudo.log\"  \nNotes:  \n• sudo will read each file in /etc/sudoers.d , skipping file names that end in ~ or \ncontain a . character to avoid causing problems with package manager or editor \ntemporary/backup files.  \n• Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first  will \nbe parsed before /etc/sudoers.d/10_second . \n• Be aware that because the sorting is lexical, not numeric, \n/etc/sudoers.d/1_whoops  would be loaded after \n/etc/sudoers.d/10_second . \n• Using a consistent number of leading zeroes in the file names can be used to \navoid such problems.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.2.4": {
        "Title": "Ensure users must provide password for escalation",
        "Description": "The operating system must be configured so that users must provide a password for \nprivilege escalation.",
        "Rationale": "Without re -authentication, users may access resources or perform tasks for which they \ndo not have authorization.  \nWhen operating systems provide the capability to escalate a functional capability, it is \ncritical the user re -authenticate.  \nImpact:  \nThis will prevent automated processes from being able to elevate privileges.",
        "Remediation": "Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE>  to edit \nthe relevant sudoers file.  \nRemove any line with occurrences of NOPASSWD  tags in the file.#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "5.2.5": {
        "Title": "Ensure re -authentication for privilege escalation is not \ndisabled globally",
        "Description": "The operating system must be configured so that users must re -authenticate for \nprivilege escalation.",
        "Rationale": "Without re -authentication, users may access resources or perform tasks for which they \ndo not have authorization.  \nWhen operating systems provide the capability to escalate a functional capability, it is \ncritical the user re -authenticate.",
        "Remediation": "Configure the operating system to require users to reauthenticate for privilege \nescalation.  \nBased on the outcome of the audit procedure, use visudo -f <PATH TO FILE>  to edit \nthe relevant sudoers file.  \nRemove any occurrences of !authenticate  tags in the file(s).#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.2.6": {
        "Title": "Ensure sudo authentication timeout is configured correctly",
        "Description": "sudo  caches used credentials for a default of 5 minutes. This is for ease of use when \nthere are multiple administrative tasks to perform. The timeout can be modified to suit \nlocal security policies.",
        "Rationale": "Setting a timeout value reduces the window of opportunity for unauthorized privileged \naccess to another user.",
        "Remediation": "If the currently configured timeout is larger than 15 minutes, edit the file listed in the \naudit section with visudo -f <PATH TO FILE>  and modify the entry \ntimestamp_timeout=  to 15 minutes or less as per your site policy. The value is in \nminutes. This particular entry may appear on its own, or on the same line as \nenv_reset . See the following two examples:  \nDefaults    env_reset, timestamp_timeout=15  \nDefaults    timestamp_timeout=15  \nDefaults    env_reset#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.2.7": {
        "Title": "Ensure access to the su command is restricted",
        "Description": "The su command allows a user to run a command or shell as another user. The \nprogram has been superseded by sudo , which allows for more granular control over \nprivileged access. Normally, the su command can be executed by any user. By \nuncommenting the pam_wheel.so  statement in /etc/pam.d/su , the su command will \nonly allow users in a specific groups to execute su. This group should be empty to \nreinforce the use of sudo  for privileged access.",
        "Rationale": "Restricting the use of su , and using sudo  in its place, provides system administrators \nbetter control of the escalation of user privileges to execute privileged commands. The \nsudo utility also provides a better logging and audit mechanism, as it can log each \ncommand executed via sudo  , whereas su can only record that a user executed the su \nprogram.",
        "Remediation": "Create an empty group that will be specified for use of the su command. The group \nshould be named according to site policy.  \nExample:  \n# groupadd sugroup  \nAdd the following line to the /etc/pam.d/su  file, specifying the empty group:  \nauth required pam_wheel.so use_uid group=sugroup#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.1.1": {
        "Title": "Ensure latest version of pam is installed",
        "Description": "Updated versions of PAM include additional functionality",
        "Rationale": "To ensure the system has full functionality and access to the options covered by this \nBenchmark, pam -1.5.1 -19 or latter is required",
        "Remediation": "- IF - the version of PAM on the system is less that version pam-1.5.1-19: \nRun the following command to update to the latest version of PAM: \n# dnf upgrade pam#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.1.2": {
        "Title": "Ensure latest version of authselect is installed",
        "Description": "Authselect is a utility that simplifies the configuration of user authentication. Authselect \noffers ready -made profiles that can be universally used with all modern identity \nmanagement systems  \nYou can create and deploy a custom profile by customizing one of the default profiles, \nthe sssd, winbind, or the nis profile. This is particularly useful if Modifying a ready -made \nauthselect profile is not enough for your needs. When you deploy a custom pr ofile, the \nprofile is applied to every user logging into the given host. This would be the \nrecommended method, so that the existing profiles can remain unmodified.  \nUpdated versions of authselect  include additional functionality",
        "Rationale": "Authselect makes testing and troubleshooting easy because it only modifies files in \nthese directories:  \n• /etc/nsswitch.conf   \n• /etc/pam.d/*   \n• /etc/dconf/db/distro.d/*   \nTo ensure the system has full functionality and access to the options covered by this \nBenchmark, authselect -1.2.6-2 or latter is required",
        "Remediation": "",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.1.3": {
        "Title": "Ensure latest version of libpwquality is installed",
        "Description": "libpwquality  provides common functions for password quality checking and scoring \nthem based on their apparent randomness. The library also provides a function for \ngenerating random passwords with good pronounceability.  \nThis module can be plugged into the password stack of a given service to provide some \nplug-in strength -checking for passwords. The code was originally based on \npam_cracklib  module and the module is backwards compatible with its options.",
        "Rationale": "Strong passwords reduce the risk of systems being hacked through brute force \nmethods.",
        "Remediation": "Run the following command to install libpwquality : \n# dnf install libpwquality  \n- IF - the version of libpwquality  on the system is less that version libpwquality -\n1.4.4-8: \nRun the following command to update to the latest version of libpwquality : \n# dnf upgrade libpwquality#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.2.1": {
        "Title": "Ensure active authselect profile includes pam modules",
        "Description": "A custom profile can be created by copying and customizing one of the default profiles. \nThe default profiles include: sssd, winbind, and nis. These profile can be customized to \nfollow site specific requirements.  \nYou can select a profile for the authselect utility for a specific host. The profile will be \napplied to every user logging into the host.",
        "Rationale": "A custom profile is required to customize many of the pam options.  \nModifications made to a default profile may be overwritten during an update.  \nWhen you deploy a profile, the profile is applied to every user logging into the given host  \nImpact:  \nIf local site customizations have been made to the authselect template or files in \n/etc/pam.d  these custom entries should be added to the newly created custom profile \nbefore it's applied to the system.  \nNote:  The order within the pam stacks is important when adding these entries. \nSpecifically for the password stack, the use_authtok  option is important, and should \nappear on all modules except for the first entry.  \nExample:  \npassword   requisite   pam_pwquality.so local_users_only #< -- Top of password \nstack, doesn't include use_authtok  \npassword   required    pam_pwhistory.so use_authtok #< -- subsequent entry in \npassword stack, includes use_authtok",
        "Remediation": "Perform the following to create a custom authselect profile, with the modules covered in \nthis Benchmark correctly included in the custom profile template files  \nRun the following command to create a custom authselect profile:  \n# authselect create -profile <custom -profile name> <options>  \nExample:  \n# authselect create -profile custom -profile -b sssd \nRun the following command to select a custom authselect profile:  \n# authselect select custom/<CUSTOM PROFILE NAME> {with -<OPTIONS>} { --force} \nExample:  \n# authselect select custom/custom -profile --backup=PAM_CONFIG_BACKUP --force \nNotes:  \n• The PAM and authselect packages must be versions pam-1.3.1-25 and \nauthselect -1.2.6-1 or newer  \n• The example is based on a custom profile built (copied) from the the SSSD  default \nauthselect profile.  \n• The example does not include the symlink  option for the PAM or Metadata  files. \nThis is due to the fact that by linking the PAM files future updates to authselect  \nmay overwrite local site customizations to the custom profile  \n• The --backup=PAM_CONFIG_BACKUP  option will create a backup of the current \nconfig. The backup will be stored at \n/var/lib/authselect/backups/PAM_CONFIG_BACKUP  \n• The --force  option will force the overwrite of the existing files and automatically \nbackup system files before writing any change unless the --nobackup  option is \nset. \no On a new system where authselect has not been configured. In this case, \nthe --force  option will force the selected authselect profile to be active \nand overwrite the existing files with files generated from the selected \nauthselect profile's templates  \no On an existing system with a custom configuration. The --force  option \nmay be used, but ensure that you note the backup location included \nas your custom files will be overwritten.  This will allow you to review \nthe changes and add any necessary customizations to the template files \nfor the authselect profile. After updating the templates, run the command \nauthselect apply -changes  to add these custom entries to the files in \n/etc/pam.d/  \n- IF - you receive an error ending with a message similar to:   [error] Refusing to activate profile unless those changes are removed or \noverwrite is requested.  \nSome unexpected changes to the configuration were detected. Use 'select' \ncommand instead.  \nThis error is caused when the previous configuration was not created by authselect but \nby other tool or by manual changes and the --force  option will be required to enable \nthe authselect profile.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.2.2": {
        "Title": "Ensure pam_faillock module is enabled",
        "Description": "The pam_faillock.so  module maintains a list of failed authentication attempts per \nuser during a specified interval and locks the account in case there were more than the \nconfigured number of consecutive failed authentications (this is defined by the deny  \nparameter in the faillock configuration). It stores the failure records into per -user files in \nthe tally directory.",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.",
        "Remediation": "Run the following script to verify the pam_faillock.so  lines exist in the profile \ntemplates:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.2.3": {
        "Title": "Ensure pam_pwquality module is enabled",
        "Description": "The pam_pwquality.so  module performs password quality checking. This module can \nbe plugged into the password stack of a given service to provide strength -checking for \npasswords. The code was originally based on pam_cracklib module and the module is \nbackwards compatible with i ts options.  \nThe action of this module is to prompt the user for a password and check its strength \nagainst a system dictionary and a set of rules for identifying poor choices.  \nThe first action is to prompt for a single password, check its strength and then, if it is \nconsidered strong, prompt for the password a second time (to verify that it was typed \ncorrectly on the first occasion). All being well, the password is passed on to subsequent \nmodules to be installed as the new authentication token.",
        "Rationale": "Use of a unique, complex passwords helps to increase the time and resources required \nto compromise the password.",
        "Remediation": "Review the authselect profile templates:  \nRun the following script to verify the pam_pwquality.so  lines exist in the active profile \ntemplates:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.2.4": {
        "Title": "Ensure pam_pwhistory module is enabled",
        "Description": "The pam_history.so  module saves the last passwords for each user in order to force \npassword change history and keep the user from alternating between the same \npassword too frequently.",
        "Rationale": "Requiring users not to reuse their passwords make it less likely that an attacker will be \nable to guess the password or use a compromised password.",
        "Remediation": "Run the following script to verify the pam_pwhistory.so  lines exist in the profile \ntemplates:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.2.5": {
        "Title": "Ensure pam_unix module is enabled",
        "Description": "The pam_unix.so  module is the standard Unix authentication module. It uses standard \ncalls from the system's libraries to retrieve and set account information as well as \nauthentication. Usually this is obtained from the /etc/passwd  and the /etc/shadow  file \nas well if shadow is enabled.",
        "Rationale": "Requiring users to use authentication make it less likely that an attacker will be able to \naccess the system.",
        "Remediation": "Run the following script to verify the pam_unix.so  lines exist in the profile templates:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.1.1": {
        "Title": "Ensure password failed attempts lockout is configured",
        "Description": "The deny=<n>  option will deny access if the number of consecutive authentication \nfailures for this user during the recent interval exceeds .",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.",
        "Remediation": "Create or edit the following line in /etc/security/faillock.conf  setting the deny  \noption to 5 or less:  \ndeny = 5  \nRun the following script to remove the deny  argument from the pam_faillock.so  \nmodule in the PAM files:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.1.2": {
        "Title": "Ensure password unlock time is configured",
        "Description": "unlock_time=<n>  - The access will be re -enabled after seconds after the lock out. The \nvalue 0 has the same meaning as value never - the access will not be re -enabled \nwithout resetting the faillock entries by the faillock(8) command.  \nNotes:  \n• The default directory that pam_faillock uses is usually cleared on system boot so \nthe access will be also re -enabled after system reboot. If that is undesirable a \ndifferent tally directory must be set with the dir option.  \n• It is usually undesirable to permanently lock out users as they can become easily \na target of denial of service attack unless the usernames are random and kept \nsecret to potential attackers.  \n• The maximum configurable value for unlock_time  is 604800",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.  \nImpact:  \nUse of unlock_time=0  may allow an attacker to cause denial of service to legitimate \nusers. This will also require a systems administrator with elevated privileges to unlock \nthe account.",
        "Remediation": "Set password unlock time to conform to site policy. unlock_time  should be 0 (never), \nor 900 seconds or greater.  \nEdit /etc/security/faillock.conf  and update or add the following line:  \nunlock_time = 900  \nRun the following script to remove the unlock_time  argument from the \npam_faillock.so  module in the PAM files:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.1.3": {
        "Title": "Ensure password failed attempts lockout includes root \naccount",
        "Description": "even_deny_root  - Root account can become locked as well as regular accounts  \nroot_unlock_time=n  - This option implies even_deny_root option. Allow access after n \nseconds to root account after the account is locked. In case the option is not specified \nthe value is the same as of the unlock_time option.",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.  \nImpact:  \nUse of unlock_time=0  or root_unlock_time=0  may allow an attacker to cause denial \nof service to legitimate users.",
        "Remediation": "Edit /etc/security/faillock.conf : \n• Remove or update any line containing root_unlock_time , - OR - set it to a \nvalue of 60 or more  \n• Update or add the following line:  \neven_deny_root  \nRun the following script to remove the even_deny_root  and root_unlock_time  \narguments from the pam_faillock.so  module in the PAM files:  \n#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "5.3.3.2.1": {
        "Title": "Ensure password number of changed characters is \nconfigured",
        "Description": "The pwquality  difok  option sets the number of characters in a password that must not \nbe present in the old password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute -force attacks.  \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.",
        "Remediation": "Create or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following \nline to set difok  to 2 or more. Ensure setting conforms to local site policy:  \ndifok = 2  \nExample:  \n# sed -ri 's/^\\s*difok\\s*=/# &/' /etc/security/pwquality.conf  \n# printf ' \\n%s' \"difok = 2\" >> /etc/security/pwquality.conf.d/50 -pwdifok.conf  \nRun the following script to remove setting difok  on the pam_pwquality.so  module in \nthe PAM files:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.2.2": {
        "Title": "Ensure password length is configured",
        "Description": "minlen  - Minimum acceptable size for the new password (plus one if credits are not \ndisabled which is the default). Cannot be set to lower value than 6.",
        "Rationale": "Strong passwords protect systems from being hacked through brute force methods.",
        "Remediation": "Create or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following \nline to set password length of 14 or more characters. Ensure that password length \nconforms to local site policy:  \nExample:  \n# sed -ri 's/^\\s*minlen \\s*=/# &/' /etc/security/pwquality.conf  \n# printf ' \\n%s' \"minlen = 14\" >> /etc/security/pwquality.conf.d/50 -\npwlength.conf  \nRun the following script to remove setting minlen  on the pam_pwquality.so  module in \nthe PAM files:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.2.3": {
        "Title": "Ensure password complexity is configured (Manual)",
        "Description": "Password complexity can be set through:  \n• minclass  - The minimum number of classes of characters required in a new \npassword. (digits, uppercase, lowercase, others). e.g. minclass = 4  requires \ndigits, uppercase, lower case, and special characters.  \n• dcredit  - The maximum credit for having digits in the new password. If less than \n0 it is the minimum number of digits in the new password. e.g. dcredit = -1 \nrequires at least one digit  \n• ucredit  - The maximum credit for having uppercase characters in the new \npassword. If less than 0 it is the minimum number of uppercase characters in the \nnew password. e.g. ucredit = -1 requires at least one uppercase character  \n• ocredit  - The maximum credit for having other characters in the new password. \nIf less than 0 it is the minimum number of other characters in the new password. \ne.g. ocredit = -1 requires at least one special character  \n• lcredit  - The maximum credit for having lowercase characters in the new \npassword. If less than 0 it is the minimum number of lowercase characters in the \nnew password. e.g. lcredit = -1 requires at least one lowercase character",
        "Rationale": "Strong passwords protect systems from being hacked through brute force methods.",
        "Remediation": "Create or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following \nline to set:  \n• minclass = 4  \n--AND/OR -- \n• dcredit = -_N_ \n• ucredit = -_N_ \n• ocredit = -_N_ \n• lcredit = -_N_ \nExample:  \n# sed -ri 's/^\\s*minclass \\s*=/# &/' /etc/security/pwquality.conf  \n# printf ' \\n%s' \"minclass = 4\" >> /etc/security/pwquality.conf.d/50 -\npwcomplexity.conf  \n--AND/OR -- \n# sed -ri 's/^\\s*[dulo]credit \\s*=/# &/' /etc/security/pwquality.conf  \n# printf '%s \\n' \"dcredit = -1\" \"ucredit = -1\" \"ocredit = -1\" \"lcredit = -1\" > \n/etc/security/pwquality.conf.d/50 -pwcomplexity.conf  \nRun the following script to remove setting minclass , dcredit , ucredit , lcredit , and \nocredit  on the pam_pwquality.so  module in the PAM files  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.2.4": {
        "Title": "Ensure password same consecutive characters is \nconfigured",
        "Description": "The pwquality  maxrepeat  option sets the maximum number of allowed same \nconsecutive characters in a new password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute -force attacks.  \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.",
        "Remediation": "Create or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following \nline to set maxrepeat  to 3 or less and not 0. Ensure setting conforms to local site policy:  \nExample:  \n# sed -ri 's/^\\s*maxrepeat \\s*=/# &/' /etc/security/pwquality.conf  \n# printf ' \\n%s' \"maxrepeat = 3\" >> /etc/security/pwquality.conf.d/50 -\npwrepeat.conf  \nRun the following script to remove setting maxrepeat  on the pam_pwquality.so  \nmodule in the PAM files:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.2.5": {
        "Title": "Ensure password maximum sequential characters is \nconfigured",
        "Description": "The pwquality  maxsequence  option sets the maximum length of monotonic character \nsequences in the new password. Examples of such sequence are 12345  or fedcb . The \ncheck is disabled if the value is 0. \nNote:  Most such passwords will not pass the simplicity check unless the sequence is \nonly a minor part of the password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute -force attacks.  \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.",
        "Remediation": "Create or modify a file ending in .conf  in the /etc/security/pwquality.conf.d/  \ndirectory or the file /etc/security/pwquality.conf  and add or modify the following \nline to set maxsequence  to 3 or less and not 0. Ensure setting conforms to local site \npolicy:  \nExample:  \n# sed -ri 's/^\\s*maxsequence \\s*=/# &/' /etc/security/pwquality.conf  \n# printf ' \\n%s' \"maxsequence = 3\" >> /etc/security/pwquality.conf.d/50 -\npwmaxsequence.conf  \nRun the following script to remove setting maxsequence  on the pam_pwquality.so  \nmodule in the PAM files:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.2.6": {
        "Title": "Ensure password dictionary check is enabled",
        "Description": "The pwquality  dictcheck  option sets whether to check for the words from the \ncracklib  dictionary.",
        "Rationale": "If the operating system allows the user to select passwords based on dictionary words, \nthis increases the chances of password compromise by increasing the opportunity for \nsuccessful guesses, and brute -force attacks.",
        "Remediation": "Edit any file ending in .conf  in the /etc/security/pwquality.conf.d/  directory \nand/or the file /etc/security/pwquality.conf  and comment out or remove any \ninstance of dictcheck = 0 : \nExample:  \n# sed -ri 's/^\\s*dictcheck \\s*=/# &/' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf  \nRun the following script to remove setting dictcheck  on the pam_pwquality.so  \nmodule in the PAM files:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.2.7": {
        "Title": "Ensure password quality is enforced for the root user",
        "Description": "If the pwquality  enforce_for_root  option is enabled, the module will return error on \nfailed check even if the user changing the password is root.  \nThis option is off by default which means that just the message about the failed check is \nprinted but root can change the password anyway.  \nNote:  The root is not asked for an old password so the checks that compare the old and \nnew password are not performed.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute -force attacks.  \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.",
        "Remediation": "Edit or add the following line in a *.conf  file in /etc/security/pwquality.conf.d  or \nin /etc/security/pwquality.conf : \nExample:  \nprintf ' \\n%s\\n' \"enforce_for_root\" >> /etc/security/pwquality.conf.d/50 -\npwroot.conf  \nDefault Value:  \ndisabled#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.3.1": {
        "Title": "Ensure password history remember is configured",
        "Description": "The /etc/security/opasswd  file stores the users' old passwords and can be checked \nto ensure that users are not recycling recent passwords. The number of passwords \nremembered is set via the remember argument value in set for the pam_pwhistory  \nmodule.  \n• remember=<N> - <N> is the number of old passwords to remember",
        "Rationale": "Requiring users not to reuse their passwords make it less likely that an attacker will be \nable to guess the password or use a compromised password.  \nNote:  These change only apply to accounts configured on the local system.",
        "Remediation": "Edit or add the following line in /etc/security/pwhistory.conf : \nremember = 24  \nRun the following script to remove the remember  argument from the pam_pwhistory.so  \nmodule in /etc/pam.d/system -auth  and /etc/pam.d/password -auth : \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.3.2": {
        "Title": "Ensure password history is enforced for the root user",
        "Description": "If the pwhistory  enforce_for_root  option is enabled, the module will enforce \npassword history for the root user as well",
        "Rationale": "Requiring users not to reuse their passwords make it less likely that an attacker will be \nable to guess the password or use a compromised password  \nNote:  These change only apply to accounts configured on the local system.",
        "Remediation": "Edit or add the following line in /etc/security/pwhistory.conf : \nenforce_for_root  \nDefault Value:  \ndisabled#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.3.3": {
        "Title": "Ensure pam_pwhistory includes use_authtok",
        "Description": "use_authtok  - When password changing enforce the module to set the new password \nto the one provided by a previously stacked password module",
        "Rationale": "use_authtok  allows multiple pam modules to confirm a new password before it is \naccepted.",
        "Remediation": "Run the following script to verify the active authselect profile includes use_authtok  on \nthe password stack's pam_pwhistory.so  module lines:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.4.1": {
        "Title": "Ensure pam_unix does not include nullok",
        "Description": "The nullok  argument overrides the default action of pam_unix.so  to not permit the \nuser access to a service if their official password is blank.",
        "Rationale": "Using a strong password is essential to helping protect personal and sensitive \ninformation from unauthorized access",
        "Remediation": "Run the following script to verify that the active authselect profile's system-auth  and \npassword -auth  files include {if not \"without -nullok\":nullok}  - OR - don't \ninclude the nullok  option on the pam_unix.so  module:  \n{ \n   l_module_name=\"unix\"  \n   l_profile_name=\"$(head -1 /etc/authselect/authselect.conf)\"  \n   if [[ ! \"$l_profile_name\" =~ ^custom \\/ ]]; then  \n      echo \" - Follow Recommendation \\\"Ensure custom authselect profile is \nused\\\" and then return to this Recommendation\"  \n   else \n      grep -P -- \"\\bpam_$l_module_name \\.so\\b\" \n/etc/authselect/$l_profile_name/{password,system} -auth \n   fi \n} \nExample output with a custom profile named \"custom -profile\":  \n/etc/authselect/custom/custom -profile/password -auth:auth   sufficient   \npam_unix.so {if not \"without -nullok\":nullok}  \n/etc/authselect/custom/custom -profile/password -auth:account   required   \npam_unix.so  \n/etc/authselect/custom/custom -profile/password -auth:password   sufficient   \npam_unix.so sha512 shadow {if not \"without -nullok\":nullok} use_authtok  \n/etc/authselect/custom/custom -profile/password -auth:session   required   \npam_unix.so  \n \n/etc/authselect/custom/custom -profile/system -auth:auth   sufficient   \npam_unix.so {if not \"without -nullok\":nullok}  \n/etc/authselect/custom/custom -profile/system -auth:account   required   \npam_unix.so  \n/etc/authselect/custom/custom -profile/system -auth:password   sufficient   \npam_unix.so sha512 shadow {if not \"without -nullok\":nullok} us e_authtok  \n/etc/authselect/custom/custom -profile/system -auth:session   required   \npam_unix.so  \n- IF - any line is returned with nullok  that doesn't also include {if not \"without -\nnullok\":nullok} , run the following script:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.4.2": {
        "Title": "Ensure pam_unix does not include remember",
        "Description": "The remember=n  argument saves the last n passwords for each user in \n/etc/security/opasswd  in order to force password change history and keep the user \nfrom alternating between the same password too frequently. The MD5 password hash \nalgorithm is used for storing the old passwords. Instead of this option the \npam_pwhistory  module should be used. The pam_pwhistory  module saves the last n \npasswords for each user in /etc/security/opasswd  using the password hash \nalgorithm set on the pam_unix  module. This allows for the sha512  hash algorithm to be \nused.",
        "Rationale": "The remember=n  argument should be removed to ensure a strong password hashing \nalgorithm is being used. A stronger hash provides additional protection to the system by \nincreasing the level of effort needed for an attacker to successfully determine local \nuser's old passwo rds stored in /etc/security/opasswd .",
        "Remediation": "Run the following script to verify the active authselect profile doesn't include the \nremember  argument on the pam_unix.so  module lines:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.4.3": {
        "Title": "Ensure pam_unix includes a strong password hashing \nalgorithm",
        "Description": "A cryptographic hash function converts an arbitrary -length input into a fixed length \noutput. Password hashing performs a one -way transformation of a password, turning \nthe password into another string, called the hashed password.",
        "Rationale": "The SHA-512 and yescrypt  algorithms provide a stronger hash than other algorithms \nused by Linux for password hash generation. A stronger hash provides additional \nprotection to the system by increasing the level of effort needed for an attacker to \nsuccessfully determine local user  passwords.  \nNote:  These changes only apply to the local system.",
        "Remediation": "Note:  \n• It is highly recommended that the chosen hashing algorithm is consistent across \n/etc/libuser.conf , /etc/login.defs , /etc/pam.d/password -auth , and \n/etc/pam.d/system -auth . \n• This only effects local users and passwords created after updating the files to \nuse sha512  or yescrypt . If it is determined that the password algorithm being \nused is not sha512  or yescrypt , once it is changed, it is recommended that all \nuser ID's be immediately expired and forced to change their passwords on next \nlogin.  \nRun the following script to verify the active authselect profile includes a strong password \nhashing algorithm on the password stack's pam_unix.so module lines:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.3.3.4.4": {
        "Title": "Ensure pam_unix includes use_authtok",
        "Description": "use_authtok  - When password changing enforce the module to set the new password \nto the one provided by a previously stacked password module",
        "Rationale": "use_authtok  allows multiple pam modules to confirm a new password before it is \naccepted.",
        "Remediation": "Run the following script to verify the active authselect profile includes use_authtok  on \nthe password stack's pam_unix.so  module lines:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.1.1": {
        "Title": "Ensure password expiration is configured",
        "Description": "The PASS_MAX_DAYS  parameter in /etc/login.defs  allows an administrator to force \npasswords to expire once they reach a defined age.  \nPASS_MAX_DAYS  <N> - The maximum number of days a password may be used. If the \npassword is older than this, a password change will be forced. If not specified, -1 will be \nassumed (which disables the restriction).",
        "Rationale": "The window of opportunity for an attacker to leverage compromised credentials or \nsuccessfully compromise credentials via an online brute force attack is limited by the \nage of the password. Therefore, reducing the maximum age of a password also reduces \nan attacker's window of opportunity.  \nWe recommend a yearly password change. This is primarily because for all their good \nintentions users will share credentials across accounts. Therefore, even if a breach is \npublicly identified, the user may not see this notification, or forget they have an account \non that site. This could leave a shared credential vulnerable indefinitely. Having an \norganizational policy of a 1 -year (annual) password expiration is a reasonable \ncompromise to mitigate this with minimal user burden.  \n   Impact:  \nThe password expiration must be greater than the minimum days between password \nchanges or users will be unable to change their password.  \nExcessive password expiration requirements do more harm than good, because these \nrequirements make users select predictable passwords, composed of sequential words \nand numbers that are closely related to each other. In these cases, the next password \ncan be  predicted based on the previous one (incrementing a number used in the \npassword for example). Also, password expiration requirements offer no containment \nbenefits because attackers will often use credentials as soon as they compromise them. \nInstead, immed iate password changes should be based on key events including, but not \nlimited to:  \n• Indication of compromise  \n• Change of user roles  \n• When a user leaves the organization.  \nNot only does changing passwords every few weeks or months frustrate the user, but \nit’s also been suggested that it does more harm than good, because it could lead to bad \npractices by the user such as adding a character to the end of their existing passwor d.",
        "Remediation": "Set the PASS_MAX_DAYS  parameter to conform to site policy in /etc/login.defs  : \nPASS_MAX_DAYS 365  \nModify user parameters for all users with a password set to match:  \n# chage --maxdays 365 <user>  \nEdit /etc/login.defs  and set PASS_MAX_DAYS  to a value greater than 0 that follows \nlocal site policy:  \nExample:  \nPASS_MAX_DAYS 365  \nRun the following command to modify user parameters for all users with a password set \nto a maximum age no greater than 365 or less than 1 that follows local site policy:  \n# chage --maxdays <N> <user>  \nExample:  \n# awk -F: '($2~/^ \\$.+\\$/) {if($5 > 365 || $5 < 1)system (\"chage --maxdays 365 \n\" $1)}' /etc/shadow  \nWarning:  If a password has been set at system install or kickstart, the last change \ndate  field is not set, In this case, setting PASS_MAX_DAYS  will immediately expire the \npassword. One possible solution is to populate the last change date  field through a \ncommand like: chage -d \"$(date +%Y -%m-%d)\" root  \nDefault Value:  \nPASS_MAX_DAYS 99999#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.1.2": {
        "Title": "Ensure minimum password days is configured (Manual)",
        "Description": "PASS_MIN_DAYS  <N> - The minimum number of days allowed between password \nchanges. Any password changes attempted sooner than this will be rejected. If not \nspecified, 0 will be assumed (which disables the restriction).",
        "Rationale": "Users may have favorite passwords that they like to use because they are easy to \nremember and they believe that their password choice is secure from compromise. \nUnfortunately, passwords are compromised and if an attacker is targeting a specific \nindividual user account, with foreknowledge of data about that user, reuse of old, \npotentially compromised passwords, may cause a security breach.  \nBy restricting the frequency of password changes, an administrator can prevent users \nfrom repeatedly changing their password in an attempt to circumvent password reuse \ncontrols  \nImpact:  \nIf a users password is set by other personnel as a procedure in dealing with a lost or \nexpired password, the user should be forced to update this \"set\" password with their \nown password. e.g. force \"change at next logon\".  \nIf it is not possible to have a user set their own password immediately, and this \nrecommendation or local site procedure may cause a user to continue using a third \nparty generated password, PASS_MIN_DAYS  for the effected user should be temporally \nchanged to 0, to allow a user to change their password immediately.  \nFor applications where the user is not using the password at console, the ability to \n\"change at next logon\" may be limited. This may cause a user to continue to use a \npassword created by other personnel.",
        "Remediation": "Edit /etc/login.defs  and set PASS_MIN_DAYS  to a value greater than 0 that follows \nlocal site policy:  \nExample:  \nPASS_MIN_DAYS 1  \nRun the following command to modify user parameters for all users with a password set \nto a minimum days greater than zero that follows local site policy:  \n# chage --mindays <N> <user>  \nExample:  \n# awk -F: '($2~/^ \\$.+\\$/) {if($4 < 1)system (\"chage --mindays 1 \" $1)}' \n/etc/shadow  \nDefault Value:  \nPASS_MIN_DAYS 0#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "5.4.1.3": {
        "Title": "Ensure password expiration warning days is configured",
        "Description": "The PASS_WARN_AGE  parameter in /etc/login.defs  allows an administrator to notify \nusers that their password will expire in a defined number of days.  \nPASS_WARN_AGE  <N> - The number of days warning given before a password expires. A \nzero means warning is given only upon the day of expiration, a negative value means \nno warning is given. If not specified, no warning will be provided.",
        "Rationale": "Providing an advance warning that a password will be expiring gives users time to think \nof a secure password. Users caught unaware may choose a simple password or write it \ndown where it may be discovered.",
        "Remediation": "Edit /etc/login.defs  and set PASS_WARN_AGE  to a value of 7 or more that follows \nlocal site policy:  \nExample:  \nPASS_WARN_AGE 7  \nRun the following command to modify user parameters for all users with a password set \nto a minimum warning to 7 or more days that follows local site policy:  \n# chage --warndays <N> <user>  \nExample:  \n# awk -F: '($2~/^ \\$.+\\$/) {if($6 < 7)system (\"chage --warndays 7 \" $1)}' \n/etc/shadow  \nDefault Value:  \nPASS_WARN_AGE 7  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 4.1 Establish and Maintain a Secure Configuration Process  \n Establish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non -computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annuall y, or when significant enterprise changes occur that could \nimpact this Safeguard.  ● ● ● \nv7 4.4 Use Unique Passwords  \n Where multi -factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1078  TA0006  M1027#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.1.4": {
        "Title": "Ensure strong password hashing algorithm is configured",
        "Description": "A cryptographic hash function converts an arbitrary -length input into a fixed length \noutput. Password hashing performs a one -way transformation of a password, turning \nthe password into another string, called the hashed password.  \nENCRYPT_METHOD  (string) - This defines the system default encryption algorithm for \nencrypting passwords (if no algorithm are specified on the command line). It can take \none of these values:  \n• MD5 - MD5 -based algorithm will be used for encrypting password  \n• SHA256  - SHA256 -based algorithm will be used for encrypting password  \n• SHA512  - SHA512 -based algorithm will be used for encrypting password  \n• BCRYPT  - BCRYPT -based algorithm will be used for encrypting password  \n• YESCRYPT  - YESCRYPT -based algorithm will be used for encrypting password  \n• DES - DES-based algorithm will be used for encrypting password (default)  \nNote:  \n• This parameter overrides the deprecated MD5_CRYPT_ENAB  variable.  \n• This parameter will only affect the generation of group passwords.  \n• The generation of user passwords is done by PAM and subject to the PAM \nconfiguration.  \n• It is recommended to set this variable consistently with the PAM configuration.",
        "Rationale": "The SHA-512 and yescrypt  algorithms provide a stronger hash than other algorithms \nused by Linux for password hash generation. A stronger hash provides additional \nprotection to the system by increasing the level of effort needed for an attacker to \nsuccessfully determine local grou p passwords.",
        "Remediation": "Edit /etc/login.defs  and set the ENCRYPT_METHOD  to SHA512  or YESCRYPT : \nENCRYPT_METHOD <HASHING_ALGORITHM>  \nExample:  \nENCRYPT_METHOD YESCRYPT  \nNote:  \n• This only effects local groups' passwords created after updating the file to use \nsha512  or yescrypt . \n• If it is determined that the password algorithm being used is not sha512  or \nyescrypt , once it is changed, it is recommended that all group passwords be \nupdated to use the stronger hashing algorithm.  \n• It is recommended that the chosen hashing algorithm is consistent across \n/etc/login.defs  and the PAM configuration  \nDefault Value:  \nENCRYPT_METHOD SHA512#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.1.5": {
        "Title": "Ensure inactive password lock is configured",
        "Description": "User accounts that have been inactive for over a given period of time can be \nautomatically disabled.  \nINACTIVE  - Defines the number of days after the password exceeded its maximum age \nwhere the user is expected to replace this password.  \nThe value is stored in the shadow password file. An input of 0 will disable an expired \npassword with no delay. An input of -1 will blank the respective field in the shadow \npassword file.",
        "Rationale": "Inactive accounts pose a threat to system security since the users are not logging in to \nnotice failed login attempts or other anomalies.",
        "Remediation": "Run the following command to set the default password inactivity period to 45 days or \nless that meets local site policy:  \n# useradd -D -f <N> \nExample:  \n# useradd -D -f 45 \nRun the following command to modify user parameters for all users with a password set \nto a inactive age of 45 days or less that follows local site policy:  \n# chage --inactive <N> <user>  \nExample:  \n# awk -F: '($2~/^ \\$.+\\$/) {if($7 > 45 || $7 < 0)system (\"chage --inactive 45 \n\" $1)}' /etc/shadow  \nDefault Value:  \nINACTIVE= -1#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.1.6": {
        "Title": "Ensure all users last password change date is in the past",
        "Description": "All users should have a password change date in the past.",
        "Rationale": "If a user's recorded password change date is in the future, then they could bypass any \nset password expiration.",
        "Remediation": "Investigate any users with a password change date in the future and correct them. \nLocking the account, expiring the password, or resetting the password manually may be \nappropriate.  \n   CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 5.2 Use Unique Passwords  \n Use unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8 -character password for accounts using MFA and a \n14-character password for accounts not using MFA.  ● ● ● \nv7 4.4 Use Unique Passwords  \n Where multi -factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1078, T1078.001, \nT1078.002, T1078.003, \nT1078.004, T1110, \nT1110.001, T1110.002, \nT1110.003, T1110.004#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.2.1": {
        "Title": "Ensure root is the only UID 0 account",
        "Description": "Any account with UID 0 has superuser privileges on the system.",
        "Rationale": "This access must be limited to only the default root  account and only from the system \nconsole. Administrative access must be through an unprivileged account using an \napproved mechanism as noted in the Recommendation \"Ensure access to the su \ncommand is restricted\".",
        "Remediation": "Run the following command to change the root  account UID to 0: \n# usermod -u 0 root  \nModify any users other than root  with UID 0 and assign them a new UID.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.2.2": {
        "Title": "Ensure root is the only GID 0 account",
        "Description": "The usermod  command can be used to specify which group the root  account belongs \nto. This affects permissions of files that are created by the root  account.",
        "Rationale": "Using GID 0 for the root  account helps prevent root  -owned files from accidentally \nbecoming accessible to non -privileged users.",
        "Remediation": "Run the following command to set the root  user's GID to 0: \n# usermod -g 0 root  \nRun the following command to set the root  group's GID to 0: \n# groupmod -g 0 root  \nRemove any users other than the root  user with GID 0 or assign them a new GID if \nappropriate.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.2.3": {
        "Title": "Ensure group root is the only GID 0 group",
        "Description": "The groupmod  command can be used to specify which group the root  group belongs \nto. This affects permissions of files that are group owned by the root  group.",
        "Rationale": "Using GID 0 for the root  group helps prevent root  group owned files from accidentally \nbecoming accessible to non -privileged users.",
        "Remediation": "Run the following command to set the root  group's GID to 0: \n# groupmod -g 0 root  \nRemove any groups other than the root  group with GID 0 or assign them a new GID if \nappropriate.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.2.4": {
        "Title": "Ensure root account access is controlled",
        "Description": "There are a number of methods to access the root account directly. Without a password \nset any user would be able to gain access and thus control over the entire system.",
        "Rationale": "Access to root  should be secured at all times.  \nImpact:  \nIf there are any automated processes that relies on access to the root account without \nauthentication, they will fail after remediation.",
        "Remediation": "Run the following command to set a password for the root  user:  \n# passwd root  \n- OR - \nRun the following command to lock the root  user account:  \n# usermod -L root \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 3.3 Configure Data Access Control Lists  \n Configure data access control lists based on a user’s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications.  ● ● ● \nv7 14.6 Protect Information through Access Control Lists  \n Protect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation base d on their need to access the information as a part of their \nresponsibilities.  ● ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1078  TA0005  M1026#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.2.5": {
        "Title": "Ensure root path integrity",
        "Description": "The root  user can execute any command on the system and could be fooled into \nexecuting programs unintentionally if the PATH  is not set correctly.",
        "Rationale": "Including the current working directory (.) or other writable directory in root 's \nexecutable path makes it likely that an attacker can gain superuser access by forcing an \nadministrator operating as root  to execute a Trojan horse program.",
        "Remediation": "Correct or justify any:  \n• Locations that are not directories  \n• Empty directories ( ::) \n• Trailing (:) \n• Current working directory ( .) \n• Non root  owned directories  \n• Directories that less restrictive than mode 0755#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.2.6": {
        "Title": "Ensure root user umask is configured",
        "Description": "The user file -creation mode mask ( umask ) is used to determine the file permission for \nnewly created directories and files. In Linux, the default permissions for any newly \ncreated directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-\nrw-). The umask  modifies the default Linux permissions by restricting (masking) these \npermissions. The umask  is not simply subtracted, but is processed bitwise. Bits set in \nthe umask  are cleared in the resulting file mode.  \numask  can be set with either Octal  or Symbolic  values:  \n• Octal  (Numeric) Value - Represented by either three or four digits. ie umask \n0027  or umask 027 . If a four digit umask is used, the first digit is ignored. The \nremaining three digits effect the resulting permissions for user, group, and \nworld/other respectively.  \n• Symbolic  Value - Represented by a comma separated list for User u, group g, \nand world/other o. The permissions listed are not masked by umask . ie a umask  \nset by umask u=rwx,g=rx,o=  is the Symbolic  equivalent of the Octal  umask \n027. This umask  would set a newly created directory with file mode drwxr-x--- \nand a newly created file with file mode rw-r----- . \nroot user Shell Configuration Files:  \n• /root/.bash_profile  - Is executed to configure the root users' shell before the \ninitial command prompt. Is only read by login shells.   \n• /root/.bashrc  - Is executed for interactive shells. only read by a shell that's \nboth interactive and non -login   \numask  is set by order of precedence. If umask  is set in multiple locations, this order of \nprecedence will determine the system's default umask . \nOrder of precedence:  \n1. /root/.bash_profile   \n2. /root/.bashrc   \n3. The system default umask",
        "Rationale": "Setting a secure value for umask  ensures that users make a conscious choice about \ntheir file permissions. A permissive umask  value could result in directories or files with \nexcessive permissions that can be read and/or written to by unauthorized users.",
        "Remediation": "Edit /root/.bash_profile  and /root/.bashrc  and remove, comment out, or update \nany line with umask  to be 0027  or more restrictive.  \nDefault Value:  \nSystem default umask#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.2.7": {
        "Title": "Ensure system accounts do not have a valid login shell",
        "Description": "There are a number of accounts provided with most distributions that are used to \nmanage applications and are not intended to provide an interactive shell. Furthermore, \na user may add special accounts that are not intended to provide an interactive shell.",
        "Rationale": "It is important to make sure that accounts that are not being used by regular users are \nprevented from being used to provide an interactive shell. By default, most distributions \nset the password field for these accounts to an invalid string, but it is also  recommended \nthat the shell field in the password file be set to the nologin  shell. This prevents the \naccount from potentially being used to run any commands.",
        "Remediation": "Run the following command to set the shell for any service accounts returned by the \naudit to nologin : \n# usermod -s $(command -v nologin) <user>  \nExample script:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.2.8": {
        "Title": "Ensure accounts without a valid login shell are locked",
        "Description": "There are a number of accounts provided with most distributions that are used to \nmanage applications and are not intended to provide an interactive shell. Furthermore, \na user may add special accounts that are not intended to provide an interactive shell.",
        "Rationale": "It is important to make sure that accounts that are not being used by regular users are \nprevented from being used to provide an interactive shell. By default, most distributions \nset the password field for these accounts to an invalid string, but it is also  recommended \nthat the shell field in the password file be set to the nologin  shell. This prevents the \naccount from potentially being used to run any commands.",
        "Remediation": "Run the following command to lock any non -root accounts without a valid login shell \nreturned by the audit:  \n# usermod -L <user>  \nExample script: : \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.3.1": {
        "Title": "Ensure nologin is not listed in /etc/shells",
        "Description": "/etc/shells  is a text file which contains the full pathnames of valid login shells. This \nfile is consulted by chsh  and available to be queried by other programs.  \nBe aware that there are programs which consult this file to find out if a user is a normal \nuser; for example, FTP daemons traditionally disallow access to users with shells not \nincluded in this file.",
        "Rationale": "A user can use chsh  to change their configured shell.  \nIf a user has a shell configured that isn't in in /etc/shells , then the system assumes \nthat they're somehow restricted. In the case of chsh  it means that the user cannot \nchange that value.  \nOther programs might query that list and apply similar restrictions.  \nBy putting nologin  in /etc/shells , any user that has nologin  as its shell is \nconsidered a full, unrestricted user. This is not the expected behavior for nologin .",
        "Remediation": "Edit /etc/shells  and remove any lines that include nologin#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "5.4.3.2": {
        "Title": "Ensure default user shell timeout is configured",
        "Description": "TMOUT  is an environmental setting that determines the timeout of a shell in seconds.  \n• TMOUT= n - Sets the shell timeout to n seconds. A setting of TMOUT=0  disables \ntimeout.  \n• readonly TMOUT - Sets the TMOUT environmental variable as readonly, \npreventing unwanted modification during run -time.  \n• export TMOUT - exports the TMOUT variable  \nSystem Wide Shell Configuration Files:  \n• /etc/profile  - used to set system wide environmental variables on users \nshells. The variables are sometimes the same ones that are in the \n.bash_profile , however this file is used to set an initial PATH or PS1 for all \nshell users of the system. is only executed for interactive login  shells, or \nshells executed with the --login parameter.   \n• /etc/profile.d  - /etc/profile  will execute the scripts within \n/etc/profile.d/*.sh . It is recommended to place your configuration in a shell \nscript within /etc/profile.d  to set your own system wide environmental \nvariables.  \n• /etc/bashrc  - System wide version of .bashrc . In Fedora derived distributions, \n/etc/bashrc  also invokes /etc/profile.d/*.sh if non-login  shell, but redirects \noutput to /dev/null  if non-interactive.  Is only executed for interactive  shells \nor if BASH_ENV  is set to /etc/bashrc .",
        "Rationale": "Setting a timeout value reduces the window of opportunity for unauthorized user access \nto another user's shell session that has been left unattended. It also ends the inactive \nsession and releases the resources associated with that session.",
        "Remediation": "Review /etc/bashrc , /etc/profile , and all files ending in *.sh  in the \n/etc/profile.d/  directory and remove or edit all TMOUT=_n_  entries to follow local site \npolicy. TMOUT  should not exceed 900 or be equal to 0. \nConfigure TMOUT  in one of the following files:  \n• A file in the /etc/profile.d/  directory ending in .sh \n• /etc/profile  \n• /etc/bashrc  \nExample command to set TMOUT to 900 seconds in a file in /etc/profile.d/ : \n# printf '%s \\n' \"# Set TMOUT to 900 seconds\" \"typeset -xr TMOUT=900\" > \n/etc/profile.d/50 -tmout.sh  \nTMOUT  configuration examples:  \ntypeset -xr TMOUT=900  \nDeprecated methods:  \n• As multiple lines:  \nTMOUT=900  \nreadonly TMOUT  \nexport TMOUT  \n• As a single line:  \nreadonly TMOUT=900 ; export TMOUT  \nAdditional Information:  \nThe audit and remediation in this recommendation apply to bash and shell. If other \nshells are supported on the system, it is recommended that their configuration files also \nare checked. Other methods of setting a timeout exist for other shells not covered here.  \nEnsure that the timeout conforms to your local policy.  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 4.3 Configure Automatic Session Locking on Enterprise \nAssets  \n Configure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end -user devices, the period must not exceed 2 minutes.  ● ● ● \nv7 16.11 Lock Workstation Sessions After Inactivity  \n Automatically lock workstation sessions after a standard period of inactivity.  ● ● ● \n  MITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1078  TA0005  M1026#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "5.4.3.3": {
        "Title": "Ensure default user umask is configured",
        "Description": "The user file -creation mode mask ( umask ) is used to determine the file permission for \nnewly created directories and files. In Linux, the default permissions for any newly \ncreated directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-\nrw-). The umask  modifies the default Linux permissions by restricting (masking) these \npermissions. The umask  is not simply subtracted, but is processed bitwise. Bits set in \nthe umask  are cleared in the resulting file mode.  \numask  can be set with either Octal  or Symbolic  values:  \n• Octal  (Numeric) Value - Represented by either three or four digits. ie umask \n0027  or umask 027 . If a four digit umask is used, the first digit is ignored. The \nremaining three digits effect the resulting permissions for user, group, and \nworld/other respectively.  \n• Symbolic  Value - Represented by a comma separated list for User u, group g, \nand world/other o. The permissions listed are not masked by umask . ie a umask  \nset by umask u=rwx,g=rx,o=  is the Symbolic  equivalent of the Octal  umask \n027. This umask  would set a newly created directory with file mode drwxr-x--- \nand a newly created file with file mode rw-r----- . \nThe default umask  can be set to use the pam_umask  module or in a System Wide \nShell Configuration File . The user creating the directories or files has the \ndiscretion of changing the permissions via the chmod command, or choosing a different \ndefault umask  by adding the umask  command into a User Shell Configuration \nFile , ( .bash_profile  or .bashrc ), in their home directory.  \n   Setting the default umask:  \n• pam_umask module:  \no will set the umask according to the system default in /etc/login.defs  \nand user settings, solving the problem of different umask  settings with \ndifferent shells, display managers, remote sessions etc.  \no umask=<mask>  value in the /etc/login.defs  file is interpreted as Octal  \no Setting USERGROUPS_ENAB  to yes in /etc/login.defs  (default):  \n▪ will enable setting of the umask  group bits to be the same as owner \nbits. (examples: 022 -> 002, 077 -> 007) for non -root users, if the \nuid is the same as gid, and username  is the same as the \n<primary group name>   \n▪ userdel will remove the user's group if it contains no more \nmembers, and useradd will create by default a group with the name \nof the user  \n• System Wide Shell Configuration File :  \no /etc/profile  - used to set system wide environmental variables on \nusers shells. The variables are sometimes the same ones that are in the \n.bash_profile , however this file is used to set an initial PATH or PS1 for \nall shell users of the system. is only executed for interactive login  \nshells, or shells executed with the --login parameter.   \no /etc/profile.d  - /etc/profile  will execute the scripts within \n/etc/profile.d/*.sh . It is recommended to place your configuration in \na shell script within /etc/profile.d  to set your own system wide \nenvironmental variables.  \no /etc/bashrc  - System wide version of .bashrc . In Fedora derived \ndistributions, etc/bashrc  also invokes /etc/profile.d/*.sh if non-login  shell, \nbut redirects output to /dev/null  if non-interactive.  Is only executed for \ninteractive  shells or if BASH_ENV  is set to /etc/bashrc .  \nUser Shell Configuration Files:  \n• ~/.bash_profile  - Is executed to configure your shell before the initial \ncommand prompt. Is only read by login shells.   \n• ~/.bashrc  - Is executed for interactive shells. only read by a shell that's both \ninteractive and non -login   \numask  is set by order of precedence. If umask  is set in multiple locations, this order of \nprecedence will determine the system's default umask . \n   Order of precedence:  \n1. A file in /etc/profile.d/  ending in .sh - This will override any other system -\nwide umask  setting  \n2. In the file /etc/profile   \n3. On the pam_umask.so  module in /etc/pam.d/postlogin   \n4. In the file /etc/login.defs   \n5. In the file /etc/default/login",
        "Rationale": "Setting a secure default value for umask  ensures that users make a conscious choice \nabout their file permissions. A permissive umask  value could result in directories or files \nwith excessive permissions that can be read and/or written to by unauthorized users.",
        "Remediation": "Run the following script and perform the instructions in the output to set the default \numask to 027 or more restrictive:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.1.1": {
        "Title": "Ensure AIDE is installed",
        "Description": "Advanced Intrusion Detection Environment (AIDE) is a intrusion detection tool that uses \npredefined rules to check the integrity of files and directories in the Linux operating \nsystem. AIDE has its own database to check the integrity of files and directorie s. \naide  takes a snapshot of files and directories including modification times, permissions, \nand file hashes which can then be used to compare against the current state of the \nfilesystem to detect modifications to the system.",
        "Rationale": "By monitoring the filesystem state compromised files can be detected to prevent or limit \nthe exposure of accidental or malicious misconfigurations or modified binaries.",
        "Remediation": "Run the following command to install aide : \n# dnf install aide  \nConfigure aide  as appropriate for your environment. Consult the aide  documentation \nfor options.  \nInitialize aide : \nRun the following commands:  \n# aide --init \n# mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.1.2": {
        "Title": "Ensure filesystem integrity is regularly checked",
        "Description": "Periodic checking of the filesystem integrity is needed to detect changes to the \nfilesystem.",
        "Rationale": "Periodic file checking allows the system administrator to determine on a regular basis if \ncritical files have been changed in an unauthorized fashion.",
        "Remediation": "- IF - cron  will be used to schedule and run aide check  \nRun the following command:  \n# crontab -u root -e \nAdd the following line to the crontab:  \n0 5 * * * /usr/sbin/aide --check \n- OR - \n- IF - aidecheck.service  and aidecheck.timer  will be used to schedule and run aide \ncheck:  \nCreate or edit the file /etc/systemd/system/aidecheck.service  and add the \nfollowing lines:  \n[Unit] \nDescription=Aide Check  \n \n[Service]  \nType=simple  \nExecStart=/usr/sbin/aide --check \n \n[Install]  \nWantedBy=multi -user.target  \nCreate or edit the file /etc/systemd/system/aidecheck.timer  and add the following \nlines:  \n[Unit] \nDescription=Aide check every day at 5AM  \n \n[Timer] \nOnCalendar=* -*-* 05:00:00  \nUnit=aidecheck.service  \n \n[Install]  \nWantedBy=multi -user.target  \nRun the following commands:  \n# chown root:root /etc/systemd/system/aidecheck.*  \n# chmod 0644 /etc/systemd/system/aidecheck.*  \n \n# systemctl daemon -reload \n \n# systemctl enable aidecheck.service  \n# systemctl --now enable aidecheck.timer#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.1.3": {
        "Title": "Ensure cryptographic mechanisms are used to protect the \nintegrity of audit tools",
        "Description": "Audit tools include, but are not limited to, vendor -provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting the integrity of the tools used for auditing purposes is a critical step toward \nensuring the integrity of audit information. Audit information includes all information \n(e.g., audit records, audit settings, and audit reports) needed to successful ly audit \ninformation system activity.  \nAttackers may replace the audit tools or inject code into the existing tools with the \npurpose of providing the capability to hide or erase system activity from the audit logs.  \nAudit tools should be cryptographically signed in order to provide the capability to \nidentify when the audit tools have been modified, manipulated, or replaced. An example \nis a checksum hash of the file or files.",
        "Remediation": "Run the following command to determine the absolute path to the non -symlinked \nversion on the audit tools:  \n# readlink -f /sbin \nThe output will be either /usr/sbin  - OR - /sbin . Ensure the correct path is used.  \nEdit /etc/aide.conf  and add or update the following selection lines replacing <PATH>  \nwith the correct path returned in the command above:  \n# Audit Tools  \n<PATH>/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/auditd p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/aureport p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/autrace p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512  \nExample  \n# printf ' \\n%s' \"# Audit Tools\" \"$(readlink -f /sbin/auditctl) \np+i+n+u+g+s+b+acl+xattrs+sha512\" \\ \n\"$(readlink -f /sbin/auditd) p+i+n+u+g+s+b+acl+xattrs+sha512\" \\ \n\"$(readlink -f /sbin/ausearch) p+i+n+u+g+s+b+acl+xattrs+sha512\" \\ \n\"$(readlink -f /sbin/aurepor t) p+i+n+u+g+s+b+acl+xattrs+sha512\" \\ \n\"$(readlink -f /sbin/autrace) p+i+n+u+g+s+b+acl+xattrs+sha512\" \\ \n\"$(readlink -f /sbin/augenrules) p+i+n+u+g+s+b+acl+xattrs+sha512\" >> \n/etc/aide.conf  \nNote: - IF - /etc/aide.conf  includes a @@x_include  statement:  \nExample:  \n@@x_include /etc/aide.conf.d ^[a -zA-Z0-9_-]+$ \n• @@x_include  FILE  \n• @@x_include  DIRECTORY REGEX  \no @x_include  is identical to @@include , except that if a config file is \nexecutable it is run and the output is used as config.  \no If the executable file exits with status greater than zero or writes to stderr \naide stops with an error.  \no For security reasons DIRECTORY and each executable config file must \nbe owned by the current user and must not be group or world -writable.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.1.1": {
        "Title": "Ensure journald service is enabled and active",
        "Description": "Ensure that the systemd-journald  service is enabled to allow capturing of logging \nevents.",
        "Rationale": "If the systemd-journald  service is not enabled to start on boot, the system will not \ncapture logging events.",
        "Remediation": "Run the following commands to unmask and start systemd-journald.service  \n# systemctl unmask systemd -journald.service  \n# systemctl start systemd -journald.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.1.2": {
        "Title": "Ensure journald log file access is configured (Manual)",
        "Description": "Journald will create logfiles that do not already exist on the system. This setting controls \nwhat permissions will be applied to these newly created files.",
        "Rationale": "It is important to ensure that log files have the correct permissions to ensure that \nsensitive data is archived and protected.",
        "Remediation": "If the default configuration is not appropriate for the site specific requirements, copy \n/usr/lib/tmpfiles.d/systemd.conf  to /etc/tmpfiles.d/systemd.conf  and \nmodify as required. Requirements is either 0640  or site policy if that is less restrictive.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.1.3": {
        "Title": "Ensure journald log file rotation is configured (Manual)",
        "Description": "Journald includes the capability of rotating log files regularly to avoid filling up the \nsystem with logs or making the logs unmanageably large. The file \n/etc/systemd/journald.conf  is the configuration file used to specify how logs \ngenerated by Journald should be rotated.",
        "Rationale": "By keeping the log files smaller and more manageable, a system administrator can \neasily archive these files to another system and spend less time looking through \ninordinately large log files.",
        "Remediation": "Edit /etc/systemd/journald.conf  or a file ending in .conf  the \n/etc/systemd/journald.conf.d/  directory. Set the following parameters in the \n[Journal]  section to ensure logs are rotated according to site policy. The settings \nshould be carefully understood as there are specific edge cases and prioritization of \nparameters.  \nExample Configuration  \n[Journal]  \nSystemMaxUse=1G  \nSystemKeepFree=500M  \nRuntimeMaxUse=200M  \nRuntimeKeepFree=50M  \nMaxFileSec=1month  \nNote:  If these settings appear in a canonically later file, or later in the same file, the \nsetting will be overwritten#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.1.4": {
        "Title": "Ensure only one logging system is in use",
        "Description": "Best practices recommend that a single centralized logging system be used for log \nmanagement, choose a single service either rsyslog  - OR - journald  to be used as a \nsingle centralized logging system.",
        "Rationale": "Configuring only one logging service either rsyslog  - OR - journald  avoids \nredundancy, optimizes resources, simplifies configuration and management, and \nensures consistency.  \nImpact:  \nTransitioning from one logging service to another can be complex and time consuming, \nit involves reconfiguration and may result in data loss if not managed and reconfigured \ncorrectly.",
        "Remediation": "1. Determine whether to use journald  - OR - rsyslog  depending on site needs  \n2. Configure systemd-jounald.service  \n3. Configure only ONE  either journald  - OR - rsyslog  and complete the \nrecommendations in that subsection  \n4. Return to this recommendation to ensure only one logging system is in use#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.2.1.2": {
        "Title": "Ensure systemd -journal -upload authentication is \nconfigured (Manual)",
        "Description": "Journald systemd-journal-upload  supports the ability to send log events it gathers to \na remote log host.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system.  \nNote:  This recommendation only applies if journald  is the chosen method for \nclient side logging . Do not apply this recommendation if rsyslog  is used.",
        "Remediation": "Edit the /etc/systemd/journal -upload.conf  file or a file in \n/etc/systemd/journal -upload.conf.d  ending in .conf  and ensure the following \nlines are set in the [Upload]  section per your environment:  \n[Upload]  \nURL=192.168.50.42  \nServerKeyFile=/etc/ssl/private/journal -upload.pem  \nServerCertificateFile=/etc/ssl/certs/journal -upload.pem  \nTrustedCertificateFile=/etc/ssl/ca/trusted.pem  \nRestart the service:  \n# systemctl restart systemd -journal-upload#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.2.1.3": {
        "Title": "Ensure systemd -journal -upload is enabled and active",
        "Description": "Journald systemd-journal-upload  supports the ability to send log events it gathers to \na remote log host.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system.  \nNote:  This recommendation only applies if journald  is the chosen method for \nclient side logging . Do not apply this recommendation if rsyslog  is used.",
        "Remediation": "Run the following commands to unmask, enable and start systemd-journal-upload : \n# systemctl unmask systemd -journal-upload.service  \n# systemctl --now enable systemd -journal-upload.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.2.1.4": {
        "Title": "Ensure systemd -journal -remote service is not in use",
        "Description": "Journald systemd-journal-remote  supports the ability to receive messages from \nremote hosts, thus acting as a log server. Clients should not receive data from other \nhosts.  \nNote:  \n• The same package, systemd-journal-remote , is used for both sending logs to \nremote hosts and receiving incoming logs.  \n• With regards to receiving logs, there are two services; systemd-journal-\nremote.socket  and systemd-journal-remote.service .",
        "Rationale": "If a client is configured to also receive data, thus turning it into a server, the client \nsystem is acting outside it's operational boundary.  \nNote:  This recommendation only applies if journald  is the chosen method for \nclient side logging . Do not apply this recommendation if rsyslog  is used.",
        "Remediation": "Run the following commands to stop and mask systemd-journal-remote.socket  and \nsystemd -journal -remote.service:  \n# systemctl stop systemd -journal-remote.socket systemd -journal-remote.service  \n# systemctl mask systemd -journal-remote.socket systemd -journal-remote.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.2.2": {
        "Title": "Ensure journald ForwardToSyslog is disabled",
        "Description": "Data from journald  should be kept in the confines of the service and not forwarded to \nother services.",
        "Rationale": "- IF - journald  is the method for capturing logs, all logs of the system should be \nhandled by journald  and not forwarded to other logging mechanisms.  \nNote:  This recommendation only applies if journald  is the chosen method for \nclient side logging . Do not apply this recommendation if rsyslog  is used.",
        "Remediation": "- IF - rsyslog  is the preferred method for capturing logs, this section and \nRecommendation should be skipped and the \"Configure rsyslog\" section followed.  \n- IF - journald  is the preferred method for capturing logs:  \nSet the following parameter in the [Journal]  section in \n/etc/systemd/journald.conf  or a file in /etc/systemd/journald.conf.d/ ending in \n.conf : \nForwardToSyslog=no  \nExample:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.2.3": {
        "Title": "Ensure journald Compress is configured",
        "Description": "The journald system includes the capability of compressing overly large files to avoid \nfilling up the system with logs or making the logs unmanageably large.",
        "Rationale": "Uncompressed large files may unexpectedly fill a filesystem leading to resource \nunavailability. Compressing logs prior to write can prevent sudden, unexpected \nfilesystem impacts.  \nNote:  This recommendation only applies if journald  is the chosen method for \nclient side logging . Do not apply this recommendation if rsyslog  is used.",
        "Remediation": "Set the following parameter in the [Journal]  section in \n/etc/systemd/journald.conf  or a file in /etc/systemd/journald.conf.d/  ending \nin .conf : \nCompress=yes  \nExample:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.2.4": {
        "Title": "Ensure journald Storage is configured",
        "Description": "Data from journald may be stored in volatile memory or persisted locally on the server. \nLogs in memory will be lost upon a system reboot. By persisting logs to local disk on the \nserver they are protected from loss due to a reboot.",
        "Rationale": "Writing log data to disk will provide the ability to forensically reconstruct events which \nmay have impacted the operations or security of a system even after a system crash or \nreboot.  \nNote:  This recommendation only applies if journald  is the chosen method for \nclient side logging . Do not apply this recommendation if rsyslog  is used.",
        "Remediation": "Set the following parameter in the [Journal]  section in \n/etc/systemd/journald.conf  or a file in /etc/systemd/journald.conf.d/  ending \nin .conf : \nStorage=persistent  \nExample:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.3.1": {
        "Title": "Ensure rsyslog is installed",
        "Description": "The rsyslog  software is recommended in environments where journald  does not \nmeet operation requirements.",
        "Rationale": "The security enhancements of rsyslog  such as connection -oriented (i.e. TCP) \ntransmission of logs, the option to log to database formats, and the encryption of log \ndata en route to a central logging server) justify installing and configuring the package.  \nNote:  This recommendation only applies if rsyslog  is the chosen method for client side \nlogging. Do not apply this recommendation if journald  is used.",
        "Remediation": "Run the following command to install rsyslog : \n# dnf install rsyslog  \nDefault Value:  \nInstalled#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.3.2": {
        "Title": "Ensure rsyslog service is enabled and active",
        "Description": "Once the rsyslog  package is installed, ensure that the service is enabled.",
        "Rationale": "If the rsyslog  service is not enabled to start on boot, the system will not capture \nlogging events.  \nNote:  This recommendation only applies if rsyslog  is the chosen method for client side \nlogging. Do not apply this recommendation if journald  is used.",
        "Remediation": "- IF - rsyslog  is being used for logging on the system:  \nRun the following commands to unmask, enable, and start rsyslog.service : \n# systemctl unmask rsyslog.service  \n# systemctl enable rsyslog.service  \n# systemctl start rsyslog.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.3.3": {
        "Title": "Ensure journald is configured to send logs to rsyslog",
        "Description": "Data from systemd-journald  may be stored in volatile memory or persisted locally on \nthe server. Utilities exist to accept remote export of systemd-journald  logs, however, \nuse of the rsyslog  service provides a consistent means of log collection and export.",
        "Rationale": "- IF - rsyslog  is the preferred method for capturing logs, all logs of the system should \nbe sent to it for further processing.  \nImpact:  \n- IF - Journald  is the preferred method for capturing logs, this section and \nRecommendation should be skipped and the \"Configure Journald\" section followed.",
        "Remediation": "- IF - rsyslog  is the preferred method for capturing logs:  \nSet the following parameter in the [Journal]  section in \n/etc/systemd/journald.conf  or a file in /etc/systemd/journald.conf.d/  ending \nin .conf : \nForwardToSyslog=yes  \nExample:  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.3.4": {
        "Title": "Ensure rsyslog log file creation mode is configured",
        "Description": "rsyslog  will create logfiles that do not already exist on the system.  \nThe $FileCreateMode  parameter allows you to specify the creation mode with which \nrsyslog  creates new files. If not specified, the value 0644 is used (which retains \nbackward -compatibility with earlier releases). The value given must always be a 4 -digit \noctal number, with the initial digit being zero.  \nPlease note that the actual permission depend on rsyslogd’s process umask.  \n$FileCreateMode  may be specified multiple times. If so, it specifies the creation mode \nfor all selector lines that follow until the next $FileCreateMode parameter. Order of lines \nis vitally important.",
        "Rationale": "It is important to ensure that log files have the correct permissions to ensure that \nsensitive data is archived and protected.  \nNote:  This recommendation only applies if rsyslog  is the chosen method for client side \nlogging. Do not apply this recommendation if systemd-journald  is used.",
        "Remediation": "Edit either /etc/rsyslog.conf  or a dedicated .conf  file in /etc/rsyslog.d/  and set \n$FileCreateMode  to 0640  or more restrictive:  \n$FileCreateMode 0640  \nRestart the service:  \n# systemctl restart rsyslog#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.3.5": {
        "Title": "Ensure rsyslog logging is configured (Manual)",
        "Description": "The /etc/rsyslog.conf  and /etc/rsyslog.d/*.conf  files specifies rules for logging \nand which files are to be used to log certain classes of messages.",
        "Rationale": "A great deal of important security -related information is sent via rsyslog  (e.g., \nsuccessful and failed su attempts, failed login attempts, root login attempts, etc.).  \nNote:  This recommendation only applies if rsyslog  is the chosen method for client side \nlogging. Do not apply this recommendation if journald  is used.",
        "Remediation": "Edit the following lines in the /etc/rsyslog.conf  and /etc/rsyslog.d/*.conf  files \nas appropriate for your environment.  \nNote:  The below configuration is shown for example purposes only. Due care should be \ngiven to how the organization wishes to store log data.  \n*.emerg                                  :omusrmsg:*  \nauth,authpriv.*                          /var/log/secure  \nmail.*                                  -/var/log/mail  \nmail.info                               -/var/log/mail.info  \nmail.warning                            -/var/log/mail.warn  \nmail.err                                 /var/log/mail.err  \ncron.*                                   /var/log/cron  \n*.=warning;*.=err                       -/var/log/warn  \n*.crit                                   /var/log/warn  \n*.*;mail.none;news.none                 -/var/log/messages  \nlocal0,local1.*                         -/var/log/localmessages  \nlocal2,local3.*                         -/var/log/localmessages  \nlocal4,local5.*                         -/var/log/localmessages  \nlocal6,l ocal7.*                         -/var/log/localmessages  \nRun the following command to reload the rsyslogd  configuration:  \n# systemctl restart rsyslog#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.3.6": {
        "Title": "Ensure rsyslog is configured to send logs to a remote log \nhost (Manual)",
        "Description": "rsyslog  supports the ability to send log events it gathers to a remote log host or to \nreceive messages from remote hosts, thus enabling centralized log management.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system.  \nNote:  This recommendation only applies if rsyslog  is the chosen method for client side \nlogging. Do not apply this recommendation if systemd-journald  is used.",
        "Remediation": "Edit the /etc/rsyslog.conf  and /etc/rsyslog.d/*.conf  files and add the following \nline (where loghost.example.com  is the name of your central log host). The target  \ndirective may either be a fully qualified domain name or an IP address.  \nExample:  \n*.* action(type=\"omfwd\" target=\"loghost.example.com\" port=\"514\" \nprotocol=\"tcp\"  \n           action.resumeRetryCount=\"100\"  \n           queue.type=\"LinkedList\" queue.size=\"1000\")  \nRun the following command to reload rsyslog.service : \n# systemctl reload -or-restart rsyslog.service#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.3.7": {
        "Title": "Ensure rsyslog is not configured to receive logs from a \nremote client",
        "Description": "rsyslog  supports the ability to receive messages from remote hosts, thus acting as a \nlog server. Clients should not receive data from other hosts.",
        "Rationale": "If a client is configured to also receive data, thus turning it into a server, the client \nsystem is acting outside its operational boundary.  \nNote:  This recommendation only applies if rsyslog  is the chosen method for client side \nlogging. Do not apply this recommendation if systemd-journald  is used.",
        "Remediation": "Should there be any active log server configuration found in the auditing section, modify \nthose files and remove the specific lines highlighted by the audit. Verify none of the \nfollowing entries are present in any of /etc/rsyslog.conf  or \n/etc/rsyslog.d/*.conf . \nadvanced format  \nmodule(load=\"imtcp\")  \ninput(type=\"imtcp\" port=\"514\")  \ndeprecated legacy format  \n$ModLoad imtcp  \n$InputTCPServerRun  \nRestart the service:  \n# systemctl restart rsyslog#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.3.8": {
        "Title": "Ensure rsyslog logrotate is configured (Manual)",
        "Description": "The system includes the capability of rotating log files regularly to avoid filling up the \nsystem with logs or making the logs unmanageably large. The file \n/etc/logrotate.d/rsyslog  is the configuration file used to rotate log files created by \nrsyslog .",
        "Rationale": "By keeping the log files smaller and more manageable, a system administrator can \neasily archive these files to another system and spend less time looking through \ninordinately large log files.  \nNote:  This recommendation only applies if rsyslog  is the chosen method for client side \nlogging. Do not apply this recommendation if systemd-journald  is used.",
        "Remediation": "Edit /etc/logrotate.conf  and /etc/logrotate.d/*  to ensure logs are rotated \naccording to site policy.  \nExample logrotate configuration that specifies log files be rotated weekly, keep 4 \nbacklogs, compress old log files, ignores missing and empty log files, postrotate to \nreload rsyslog service after logs are rotated  \n/var/log/rsyslog/*.log {  \n    weekly \n    rotate 4  \n    compress  \n    missingok  \n    notifempty  \n    postrotate  \n            /usr/bin/systemctl reload rsyslog.service >/dev/null || true  \n    endscript   \n}#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.2.4.1": {
        "Title": "Ensure access to all logfiles has been configured",
        "Description": "Log files contain information from many services on the the local system, or in the event \nof a centralized log server, others systems logs as well.  \nIn general log files are found in /var/log/ , although application can be configured to \nstore logs elsewhere. Should your application store logs in another, ensure to run the \nsame test on that location.",
        "Rationale": "It is important that log files have the correct permissions to ensure that sensitive data is \nprotected and that only the appropriate users / groups have access to them.",
        "Remediation": "Run the following script to update permissions and ownership on files in /var/log . \nAlthough the script is not destructive, ensure that the output is captured in the event that \nthe remediation causes issues.   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "6.3.1.1": {
        "Title": "Ensure auditd packages are installed",
        "Description": "auditd  is the userspace component to the Linux Auditing System. It's responsible for \nwriting audit records to the disk.",
        "Rationale": "The capturing of system events provides system administrators with information to allow \nthem to determine if unauthorized access to their system is occurring.",
        "Remediation": "Run the following command to install audit  and audit-libs : \n# dnf install audit audit -libs#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.1.2": {
        "Title": "Ensure auditing for processes that start prior to auditd is \nenabled",
        "Description": "Configure grub2  so that processes that are capable of being audited can be audited \neven if they start up prior to auditd  startup.",
        "Rationale": "Audit events need to be captured on processes that start up prior to auditd  , so that \npotential malicious activity cannot go undetected.",
        "Remediation": "Run the following command to update the grub2  configuration with audit=1 : \n# grubby --update-kernel ALL --args 'audit=1'  \nEdit /etc/default/grub  and add audit=1  to the GRUB_CMDLINE_LINUX=  line between \nthe opening and closing double quotes:  \nExample:  \nGRUB_CMDLINE_LINUX=\"quiet audit=1\"  \nNote:  Other parameters may also be listed  \nAdditional Information:  \nThis recommendation is designed around the grub 2 bootloader, if another bootloader is \nin use in your environment enact equivalent settings.  \ngrubby  is a command line tool used to configure bootloader menu entries across \nmultiple architectures. It is used for updating and displaying information about the \nconfiguration files for various architecture specific bootloaders.  \nIt is primarily designed to be used from scripts which install new kernels and need to \nfind information about the current boot environment.  \nThe grubby executable has full support for the grub2 bootloader on x86_64 systems \nusing legacy BIOS or modern UEFI firmware and ppc64 and ppc64le hardware using \nOPAL or SLOF as firmware.  \nLegacy s390 and the current s390x architectures and their zipl bootloader are fully \nsupported.  \nSupport for yaboot has been deprecated as all ppc architecture hardware since the \nPower8 uses grub2 or petitboot which both use the grub2 configuration file format.  \nLegacy bootloaders LILO, SILO, and ELILO are deprecated and no longer receiving \nactive support in favor of previously mentioned bootloaders.  \nThe default bootloader target is primarily determined by the architecture for which \ngrubby has been built. Each architecture has a preferred bootloader, and each \nbootloader has its own configuration file. If no bootloader is selected on the command \nline, g rubby will use these default settings to search for an existing configuration. If no \nbootloader configuration file is found, grubby will use the default value for that \narchitecture.   CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 8.2 Collect Audit Logs  \n Collect audit logs. Ensure that logging, per the enterprise’s audit log \nmanagement process, has been enabled across enterprise assets.  ● ● ● \nv7 6.2 Activate audit logging  \n Ensure that local logging has been enabled on all systems and networking \ndevices.  ● ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1562, T1562.001  TA0005#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.1.3": {
        "Title": "Ensure audit_backlog_limit is sufficient",
        "Description": "The audit_backlog_limit  parameter determines how auditd records can be held in \nthe auditd backlog. The default setting of 64 may be insufficient to store all audit events \nduring boot.",
        "Rationale": "During boot if audit=1 , then the backlog will hold 64 records. If more than 64 records \nare created during boot, auditd records will be lost and potential malicious activity could \ngo undetected.",
        "Remediation": "Run the following command to add audit_backlog_limit=<BACKLOG SIZE>  to \nGRUB_CMDLINE_LINUX:  \n# grubby --update-kernel ALL --args 'audit_backlog_limit=<BACKLOG SIZE>'  \nExample:  \n# grubby --update-kernel ALL --args 'audit_backlog_limit=8192'  \nEdit /etc/default/grub  and add audit_backlog_limit=<BACKLOG SIZE>  to the \nGRUB_CMDLINE_LINUX=  line between the opening and closing double quotes:  \nExample:  \nGRUB_CMDLINE_LINUX=\"quiet audit_backlog_limit=8192\"  \nNote:  Other parameters may also be listed#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.1.4": {
        "Title": "Ensure auditd service is enabled and active",
        "Description": "Turn on the auditd  daemon to record system events.",
        "Rationale": "The capturing of system events provides system administrators with information to allow \nthem to determine if unauthorized access to their system is occurring.",
        "Remediation": "Run the following commands to unmask, enable and start auditd : \n# systemctl unmask auditd  \n# systemctl enable auditd  \n# systemctl start auditd#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.2.1": {
        "Title": "Ensure audit log storage size is configured",
        "Description": "Configure the maximum size of the audit log file. Once the log reaches the maximum \nsize, it will be rotated and a new log file will be started.",
        "Rationale": "It is important that an appropriate size is determined for log files so that they do not \nimpact the system and audit data is not lost.",
        "Remediation": "Set the following parameter in /etc/audit/auditd.conf  in accordance with site \npolicy:  \nmax_log_file = <MB>  \nDefault Value:  \nmax_log_file = 8#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.2.2": {
        "Title": "Ensure audit logs are not automatically deleted",
        "Description": "The max_log_file_action  setting determines how to handle the audit log file reaching \nthe max file size. A value of keep_logs  will rotate the logs but never delete old logs.",
        "Rationale": "In high security contexts, the benefits of maintaining a long audit history exceed the cost \nof storing the audit history.",
        "Remediation": "Set the following parameter in /etc/audit/auditd.conf:  \nmax_log_file_action = keep_logs  \nDefault Value:  \nmax_log_file_action = ROTATE#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.2.3": {
        "Title": "Ensure system is disabled when audit logs are full",
        "Description": "The auditd  daemon can be configured to halt the system or put the system in single \nuser mode, if no free space is available or an error is detected on the partition that holds \nthe audit log files.  \nThe disk_full_action  parameter tells the system what action to take when no free \nspace is available on the partition that holds the audit log files. Valid values are ignore , \nsyslog , rotate , exec , suspend , single , and halt . \n• ignore , the audit daemon will issue a syslog message but no other action is \ntaken  \n• syslog , the audit daemon will issue a warning to syslog  \n• rotate , the audit daemon will rotate logs, losing the oldest to free up space  \n• exec , /path -to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action  \n• suspend , the audit daemon will stop writing records to the disk  \n• single , the audit daemon will put the computer system in single user mode  \n• halt , the audit daemon will shut down the system  \nThe disk_error_action  parameter tells the system what action to take when an error \nis detected on the partition that holds the audit log files. Valid values are ignore , \nsyslog , exec , suspend , single , and halt . \n• ignore , the audit daemon will not take any action  \n• syslog , the audit daemon will issue no more than 5 consecutive warnings to \nsyslog  \n• exec , /path -to-script will execute the script. You cannot pass parameters to the \nscript  \n• suspend , the audit daemon will stop writing records to the disk  \n• single , the audit daemon will put the computer system in single user mode  \n• halt , the audit daemon will shut down the system",
        "Rationale": "In high security contexts, the risk of detecting unauthorized access or nonrepudiation \nexceeds the benefit of the system's availability.   Impact:  \ndisk_full_action  parameter:  \n• Set to halt  - the auditd  daemon will shutdown the system when the disk \npartition containing the audit logs becomes full.  \n• Set to single  - the auditd  daemon will put the computer system in single user \nmode when the disk partition containing the audit logs becomes full.  \ndisk_error_action  parameter:  \n• Set to halt  - the auditd  daemon will shutdown the system when an error is \ndetected on the partition that holds the audit log files.  \n• Set to single  - the auditd  daemon will put the computer system in single user \nmode when an error is detected on the partition that holds the audit log files.  \n• Set to syslog  - the auditd  daemon will issue no more than 5 consecutive \nwarnings to syslog when an error is detected on the partition that holds the audit \nlog files.",
        "Remediation": "Set one of the following parameters in /etc/audit/auditd.conf  depending on your \nlocal security policies.  \ndisk_full_action = <halt|single>  \ndisk_error_action = <syslog|single|halt>  \nExample:  \ndisk_full_action = halt  \ndisk_error_action = halt#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.2.4": {
        "Title": "Ensure system warns when audit logs are low on space",
        "Description": "The auditd  daemon can be configured to halt the system, put the system in single user \nmode or send a warning message, if the partition that holds the audit log files is low on \nspace.  \nThe space_left_action  parameter tells the system what action to take when the \nsystem has detected that it is starting to get low on disk space. Valid values are ignore , \nsyslog , rotate , email , exec , suspend , single , and halt . \n• ignore , the audit daemon does nothing  \n• syslog , the audit daemon will issue a warning to syslog  \n• rotate , the audit daemon will rotate logs, losing the oldest to free up space  \n• email , the audit daemon will send a warning to the email account specified in \naction_mail_acct  as well as sending the message to syslog  \n• exec , /path -to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action  \n• suspend , the audit daemon will stop writing records to the disk  \n• single , the audit daemon will put the computer system in single user mode  \n• halt , the audit daemon will shut down the system  \nThe admin_space_left_action  parameter tells the system what action to take when \nthe system has detected that it is low on disk space. Valid values are ignore , syslog , \nrotate , email , exec , suspend , single , and halt . \n• ignore , the audit daemon does nothing  \n• syslog , the audit daemon will issue a warning to syslog  \n• rotate , the audit daemon will rotate logs, losing the oldest to free up space  \n• email , the audit daemon will send a warning to the email account specified in \naction_mail_acct  as well as sending the message to syslog  \n• exec , /path -to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action  \n• suspend , the audit daemon will stop writing records to the disk  \n• single , the audit daemon will put the computer system in single user mode  \n• halt , the audit daemon will shut down the system",
        "Rationale": "In high security contexts, the risk of detecting unauthorized access or nonrepudiation \nexceeds the benefit of the system's availability.  \nImpact:  \nIf the admin_space_left_action  is set to single  the audit daemon will put the \ncomputer system in single user mode.",
        "Remediation": "Set the space_left_action  parameter in /etc/audit/auditd.conf  to email , exec , \nsingle , or halt : \nExample:  \nspace_left_action = email  \nSet the admin_space_left_action  parameter in /etc/audit/auditd.conf  to \nsingle  or halt : \nExample:  \nadmin_space_left_action = single  \nNote:  A Mail Transfer Agent (MTA) must be installed and configured properly to set \nspace_left_action = email   Default Value:  \nspace_left_action = SYSLOG  \nadmin_space_left_action = SUSPEND#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.1": {
        "Title": "Ensure changes to system administration scope (sudoers) \nis collected",
        "Description": "Monitor scope changes for system administrators. If the system has been properly \nconfigured to force system administrators to log in as themselves first and then use the \nsudo  command to execute privileged commands, it is possible to monitor changes in \nscope. The file /etc/sudoers , or files in /etc/sudoers.d , will be written to when the \nfile(s) or related attributes have changed. The audit records will be tagged with the \nidentifier \"scope\".",
        "Rationale": "Changes in the /etc/sudoers  and /etc/sudoers.d  files can indicate that an \nunauthorized change has been made to the scope of system administrator activity.",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor scope changes for system administrators.  \nExample:  \n# printf '%s \\n' \"-w /etc/sudoers -p wa -k scope\" \" -w /etc/sudoers.d -p wa -k \nscope\" >> /etc/audit/rules.d/50 -scope.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.10": {
        "Title": "Ensure successful file system mounts are collected",
        "Description": "Monitor the use of the mount  system call. The mount  (and umount  ) system call controls \nthe mounting and unmounting of file systems. The parameters below configure the \nsystem to create an audit record when the mount system call is used by a non -\nprivileged user",
        "Rationale": "It is highly unusual for a non privileged user to mount  file systems to the system. While \ntracking mount  commands gives the system administrator evidence that external media \nmay have been mounted (based on a review of the source of the mount and confirming \nit's an external media type), it does not conclusively indicate that data was exported to \nthe media. Sys tem administrators who wish to determine if data were exported, would \nalso have to track successful open , creat  and truncate  system calls requiring write \naccess to a file under the mount point of the external media file system. This could give \na fair indic ation that a write occurred. The only way to truly prove it, would be to track \nsuccessful writes to the external media. Tracking write system calls could quickly fill up \nthe audit log and is not recommended. Recommendations on configuration options to \ntrack data export to media is beyond the scope of this document.",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful file system mounts.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k \nmounts \n-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k \nmounts \n\" >> /etc/audit/rules.d/50 -mounts.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.11": {
        "Title": "Ensure session initiation information is collected",
        "Description": "Monitor session initiation events. The parameters in this section track changes to the \nfiles associated with session events.  \n• /var/run/utmp  - tracks all currently logged in users.  \n• /var/log/wtmp  - file tracks logins, logouts, shutdown, and reboot events.  \n• /var/log/btmp  - keeps track of failed login attempts and can be read by \nentering the command /usr/bin/last -f /var/log/btmp . \nAll audit records will be tagged with the identifier \"session.\"",
        "Rationale": "Monitoring these files for changes could alert a system administrator to logins occurring \nat unusual hours, which could indicate intruder activity (i.e. a user logging in at a time \nwhen they do not normally log in).",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor session initiation information.  \nExample:  \n# printf \"  \n-w /var/run/utmp -p wa -k session  \n-w /var/log/wtmp -p wa -k session  \n-w /var/log/btmp -p wa -k session  \n\" >> /etc/audit/rules.d/50 -session.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.12": {
        "Title": "Ensure login and logout events are collected",
        "Description": "Monitor login and logout events. The parameters below track changes to files \nassociated with login/logout events.  \n• /var/log/lastlog  - maintain records of the last time a user successfully logged \nin. \n• /var/run/faillock  - directory maintains records of login failures via the \npam_faillock  module.",
        "Rationale": "Monitoring login/logout events could provide a system administrator with information \nassociated with brute force attacks against user logins.",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor login and logout events.  \nExample:  \n# printf \"  \n-w /var/log/lastlog -p wa -k logins  \n-w /var/run/faillock -p wa -k logins  \n\" >> /etc/audit/rules.d/50 -login.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.13": {
        "Title": "Ensure file deletion events by users are collected",
        "Description": "Monitor the use of system calls associated with the deletion or renaming of files and file \nattributes. This configuration statement sets up monitoring for:  \n• unlink  - remove a file  \n• unlinkat  - remove a file attribute  \n• rename  - rename a file  \n• renameat  rename a file attribute system calls and tags them with the identifier \n\"delete\".",
        "Rationale": "Monitoring these calls from non -privileged users could provide a system administrator \nwith evidence that inappropriate removal of files and file attributes associated with \nprotected files is occurring. While this audit option will look at all events, syste m \nadministrators will want to look for specific privileged files that are being deleted or \naltered.",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor file deletion events by users.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F \nauid>=${UID_MIN} -F auid!=unset -F key=delete  \n-a always,exit -F arch=b32 -S rename,unlink,unlinkat ,renameat -F \nauid>=${UID_MIN} -F auid!=unset -F key=delete  \n\" >> /etc/audit/rules.d/50 -delete.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.14": {
        "Title": "Ensure events that modify the system's Mandatory \nAccess Controls are collected",
        "Description": "Monitor SELinux, an implementation of mandatory access controls. The parameters \nbelow monitor any write access (potential additional, deletion or modification of files in \nthe directory) or attribute changes to the /etc/selinux/  and /usr/share/selinux/  \ndirectories.  \nNote:  If a different Mandatory Access Control method is used, changes to the \ncorresponding directories should be audited.",
        "Rationale": "Changes to files in the /etc/selinux/  and /usr/share/selinux/  directories could \nindicate that an unauthorized user is attempting to modify access controls and change \nsecurity contexts, leading to a compromise of the system.",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify the system's Mandatory Access \nControls.  \nExample:  \n# printf \"  \n-w /etc/selinux -p wa -k MAC-policy \n-w /usr/share/selinux -p wa -k MAC-policy \n\" >> /etc/audit/rules.d/50 -MAC-policy.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.15": {
        "Title": "Ensure successful and unsuccessful attempts to use the \nchcon command are collected",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe chcon  command.",
        "Rationale": "The chcon  command is used to change file security context. Without generating audit \nrecords that are specific to the security and mission needs of the organization, it would \nbe difficult to establish, correlate, and investigate the events relating to an incident or  \nidentify those responsible for one.  \nAudit records can be generated from various components within the information system \n(e.g., module or policy filter).",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nchcon  command.  \nExample:  \n# { \n UID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n [ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng  \n\" >> /etc/audit/rules.d/50 -perm_chng.rules || printf \"ERROR: Variable \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.16": {
        "Title": "Ensure successful and unsuccessful attempts to use the \nsetfacl command are collected",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe setfacl  command",
        "Rationale": "This utility sets Access Control Lists (ACLs) of files and directories. Without generating \naudit records that are specific to the security and mission needs of the organization, it \nwould be difficult to establish, correlate, and investigate the events rela ting to an \nincident or identify those responsible for one.  \nAudit records can be generated from various components within the information system \n(e.g., module or policy filter).",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nsetfacl  command.  \nExample:  \n# { \n UID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n [ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng  \n\" >> /etc/audit/rules.d/50 -perm_chng.rules || printf \"ERROR: Va riable \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.17": {
        "Title": "Ensure successful and unsuccessful attempts to use the \nchacl command are collected",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe chacl  command.  \nchacl  is an IRIX -compatibility command, and is maintained for those users who are \nfamiliar with its use from either XFS or IRIX.",
        "Rationale": "chacl  changes the ACL(s) for a file or directory. Without generating audit records that \nare specific to the security and mission needs of the organization, it would be difficult to \nestablish, correlate, and investigate the events relating to an incident or iden tify those \nresponsible for one.  \nAudit records can be generated from various components within the information system \n(e.g., module or policy filter).",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nchacl  command.  \nExample:  \n# { \n UID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n [ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng  \n\" >> /etc/audit/rules.d/50 -perm_chng.rules || printf \"ERROR: Vari able \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.18": {
        "Title": "Ensure successful and unsuccessful attempts to use the \nusermod command are collected",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe usermod  command.",
        "Rationale": "The usermod  command modifies the system account files to reflect the changes that are \nspecified on the command line. Without generating audit records that are specific to the \nsecurity and mission needs of the organization, it would be difficult to establish, \ncorrelat e, and investigate the events relating to an incident or identify those responsible \nfor one.  \nAudit records can be generated from various components within the information system \n(e.g., module or policy filter).",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nusermod  command.  \nExample:  \n# { \n UID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n [ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k usermod  \n\" >> /etc/audit/rules.d/50 -usermod.rules || printf \"ERROR: Varia ble 'UID_MIN' \nis unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.19": {
        "Title": "Ensure kernel module loading unloading and \nmodification is collected",
        "Description": "Monitor the loading and unloading of kernel modules. All the loading / listing / \ndependency checking of modules is done by kmod  via symbolic links.  \nThe following system calls control loading and unloading of modules:  \n• init_module  - load a module  \n• finit_module  - load a module (used when the overhead of using \ncryptographically signed modules to determine the authenticity of a module can \nbe avoided)  \n• delete_module  - delete a module  \n• create_module  - create a loadable module entry  \n• query_module  - query the kernel for various bits pertaining to modules  \nAny execution of the loading and unloading module programs and system calls will \ntrigger an audit record with an identifier of modules .",
        "Rationale": "Monitoring the use of all the various ways to manipulate kernel modules could provide \nsystem administrators with evidence that an unauthorized change was made to a kernel \nmodule, possibly compromising the security of the system.",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor kernel module modification.  \nExample:  \n#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.2": {
        "Title": "Ensure actions as another user are always logged",
        "Description": "sudo  provides users with temporary elevated privileges to perform operations, either as \nthe superuser or another user.",
        "Rationale": "Creating an audit log of users with temporary elevated privileges and the operation(s) \nthey performed is essential to reporting. Administrators will want to correlate the events \nwritten to the audit trail with the records written to sudo 's logfile to verify if unauthorized \ncommands have been executed.",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor elevated privileges.  \nExample:  \n# printf \"  \n-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k \nuser_emulation  \n-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k \nuser_emulation  \n\" >> /etc/audit/rules.d/50 -user_emulation.rules  \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.20": {
        "Title": "Ensure the audit configuration is immutable",
        "Description": "Set system audit so that audit rules cannot be modified with auditctl  . Setting the flag \n\"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on \nsystem reboot.  \nNote:  This setting will require the system to be rebooted to update the active auditd  \nconfiguration settings.",
        "Rationale": "In immutable mode, unauthorized users cannot execute changes to the audit system to \npotentially hide malicious activity and then put the audit rules back. Users would most \nlikely notice a system reboot and that could alert administrators of an attempt to m ake \nunauthorized audit changes.",
        "Remediation": "Edit or create the file /etc/audit/rules.d/99 -finalize.rules  and add the line -e \n2 at the end of the file:  \nExample:  \n# printf ' \\n%s' \"-e 2\" >> /etc/audit/rules.d/99 -finalize.rules  \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.21": {
        "Title": "Ensure the running and on disk configuration is the same \n(Manual)",
        "Description": "The Audit system have both on disk and running configuration. It is possible for these \nconfiguration settings to differ.  \nNote:  Due to the limitations of augenrules  and auditctl , it is not absolutely \nguaranteed that loading the rule sets via augenrules --load  will result in all rules \nbeing loaded or even that the user will be informed if there was a problem loading the \nrules.",
        "Rationale": "Configuration differences between what is currently running and what is on disk could \ncause unexpected problems or may give a false impression of compliance \nrequirements.",
        "Remediation": "If the rules are not aligned across all three () areas, run the following command to \nmerge and load all rules:  \n# augenrules --load \nCheck if reboot is required.  \nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then echo \"Reboot required \nto load rules\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.3": {
        "Title": "Ensure events that modify the sudo log file are collected",
        "Description": "Monitor the sudo  log file. If the system has been properly configured to disable the use \nof the su command and force all administrators to have to log in first and then use sudo  \nto execute privileged commands, then all administrator commands will be logged to \n/var/log/sudo.log  . Any time a command is executed, an audit event will be \ntriggered as the /var/log/sudo.log  file will be opened for write and the executed \nadministration command will be written to the log.",
        "Rationale": "Changes in /var/log/sudo.log  indicate that an administrator has executed a \ncommand or the log file itself has been tampered with. Administrators will want to \ncorrelate the events written to the audit trail with the records written to \n/var/log/sudo.log  to verify if unauthorized commands have been executed.",
        "Remediation": "Note:  This recommendation requires that the sudo logfile is configured. See guidance \nprovided in the recommendation \"Ensure sudo log file exists\"  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify the sudo log file.  \nExample:  \n# { \nSUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? \n.*//' -e 's/\"//g')  \n[ -n \"${SUDO_LOG_FILE}\" ] && printf \"  \n-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file  \n\" >> /etc/audit/rules.d/50 -sudo.rules || printf \"ERROR: Variable \n'SUDO_LOG_F ILE' is unset. \\n\" \n} \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi \nAdditional Information:  \nPotential reboot required  \nIf the auditing configuration is locked ( -e 2), then augenrules  will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration.  \nSystem call structure  \nFor performance ( man 7 audit.rules ) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.  \n   CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 8.5 Collect Detailed Audit Logs  \n Configure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation.   ● ● \nv7 4.9 Log and Alert on Unsuccessful Administrative Account \nLogin  \n Configure systems to issue a log entry and alert on unsuccessful logins to an \nadministrative account.   ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1562, T1562.006  TA0004#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.4": {
        "Title": "Ensure events that modify date and time information are \ncollected",
        "Description": "Capture events where the system date and/or time has been modified. The parameters \nin this section are set to determine if the;  \n• adjtimex  - tune kernel clock  \n• settimeofday  - set time using timeval  and timezone  structures  \n• stime  - using seconds since 1/1/1970  \n• clock_settime  - allows for the setting of several internal clocks and timers  \nsystem calls have been executed. Further, ensure to write an audit record to the \nconfigured audit log file upon exit, tagging the records with a unique identifier such as \n\"time -change\".",
        "Rationale": "Unexpected changes in system date and/or time could be a sign of malicious activity on \nthe system.",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify date and time information.  \nExample:  \n# printf \"  \n-a always,exit -F arch=b64 -S adjtimex,settimeofday -k time-change \n-a always,exit -F arch=b32 -S adjtimex,settimeofday -k time-change \n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -k time-change \n-a always,exit -F arch=b32 -S clock_settim e -F a0=0x0 -k time-change \n-w /etc/localtime -p wa -k time-change \n\" >> /etc/audit/rules.d/50 -time-change.rules  \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.5": {
        "Title": "Ensure events that modify the system's network \nenvironment are collected",
        "Description": "Record changes to network environment files or system calls. The below parameters \nmonitors the following system calls, and write an audit event on system call exit:  \n• sethostname  - set the systems host name  \n• setdomainname  - set the systems domain name  \nThe files being monitored are:  \n• /etc/issue  and /etc/issue.net  - messages displayed pre -login  \n• /etc/hosts  - file containing host names and associated IP addresses  \n• /etc/hostname  - file contains the system's host name  \n• /etc/sysconfig/network  - additional information that is valid to all network \ninterfaces  \n• /etc/sysconfig/network -scripts/  - directory containing network interface \nscripts and configurations files  \n• /etc/NetworkManager/  - directory contains configuration files and settings used \nby the NetworkManager",
        "Rationale": "Monitoring sethostname  and setdomainname  will identify potential unauthorized \nchanges to host and domain name of a system. The changing of these names could \npotentially break security parameters that are set based on those names. The \n/etc/hosts  file is monitored for changes that can indicate an unauthorized intruder is \ntrying to change machine associations with IP addresses and trick users and processes \ninto connecting to unintended machines. Monitoring /etc/issue  and /etc/issue.net  \nis important, as intrude rs could put disinformation into those files and trick users into \nproviding information to the intruder. Monitoring /etc/sysconfig/network  is important \nas it can show if network interfaces or scripts are being modified in a way that can lead \nto the machine becoming unavailable or compromised. All audit records should have a \nrelevant tag associated with them.",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify the system's network environment.  \nExample:  \n# printf \"  \n-a always,exit -F arch=b64 -S sethostname,setdomainname -k system -locale \n-a always,exit -F arch=b32 -S sethostname,setdomainname -k system -locale \n-w /etc/issue -p wa -k system -locale \n-w /etc/issue.net -p wa -k system -locale \n-w /etc/hosts -p wa -k system -locale \n-w /etc/hostname -p wa -k system -locale \n-w /etc/sysconfig/network -p wa -k system -locale \n-w /etc/sysconfig/network -scripts/ -p wa -k system -locale \n-w /etc/NetworkManager -p wa -k system -locale \n\" >> /etc/audit/rules.d/50 -system_locale.rules  \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.   # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.6": {
        "Title": "Ensure use of privileged commands are collected",
        "Description": "Monitor privileged programs, those that have the setuid  and/or setgid  bit set on \nexecution, to determine if unprivileged users are running these commands.",
        "Rationale": "Execution of privileged commands by non -privileged users could be an indication of \nsomeone trying to gain unauthorized access to the system.  \nImpact:  \nBoth the audit and remediation section of this recommendation will traverse all mounted \nfile systems that is not mounted with either noexec  or nosuid  mount options. If there \nare large file systems without these mount options, such traversal will be significantly \ndetrimental to the performance of the system.  \nBefore running either the audit or remediation section, inspect the output of the following \ncommand to determine exactly which file systems will be traversed:  \n# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste \n-sd,) | grep -Pv \"noexec|nosuid\"  \nTo exclude a particular file system due to adverse performance impacts, update the \naudit and remediation sections by adding a sufficiently unique string to the grep  \nstatement. The above command can be used to test the modified exclusions.",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor the use of privileged commands.  \nExample script:  \n#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.7": {
        "Title": "Ensure unsuccessful file access attempts are collected",
        "Description": "Monitor for unsuccessful attempts to access files. The following parameters are \nassociated with system calls that control files:  \n• creation - creat   \n• opening - open  , openat   \n• truncation - truncate  , ftruncate   \nAn audit log record will only be written if all of the following criteria is met for the user \nwhen trying to access a file:  \n• a non -privileged user (auid>=UID_MIN)  \n• is not a Daemon event (auid=4294967295/unset/ -1) \n• if the system call returned EACCES (permission denied) or EPERM (some other \npermanent error associated with the specific system call)",
        "Rationale": "Failed attempts to open, create or truncate files could be an indication that an individual \nor process is trying to gain unauthorized access to the system.",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor unsuccessful file access attempts.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-\nEACCES -F auid>=${UID_MIN} -F auid!=unset -k access  \n-a always,exit -F arch=b64 -S creat,ope n,openat,truncate,ftruncate -F exit=-\nEPERM -F auid>=${UID_MIN} -F auid!=unset -k access  \n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-\nEACCES -F auid>=${UID_MIN} -F auid!=unset -k access  \n-a always,exit -F arch=b32 -S creat,open ,openat,truncate,ftruncate -F exit=-\nEPERM -F auid>=${UID_MIN} -F auid!=unset -k access  \n\" >> /etc/audit/rules.d/50 -access.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.8": {
        "Title": "Ensure events that modify user/group information are \ncollected",
        "Description": "Record events affecting the modification of user or group information, including that of \npasswords and old passwords if in use.  \n• /etc/group  - system groups  \n• /etc/passwd  - system users  \n• /etc/gshadow  - encrypted password for each group  \n• /etc/shadow  - system user passwords  \n• /etc/security/opasswd  - storage of old passwords if the relevant PAM module \nis in use  \n• /etc/nsswitch.conf  - file configures how the system uses various databases \nand name resolution mechanisms  \n• /etc/pam.conf  - file determines the authentication services to be used, and the \norder in which the services are used.  \n• /etc/pam.d  - directory contains the PAM configuration files for each PAM -aware \napplication.  \nThe parameters in this section will watch the files to see if they have been opened for \nwrite or have had attribute changes (e.g. permissions) and tag them with the identifier \n\"identity\" in the audit log file.",
        "Rationale": "Unexpected changes to these files could be an indication that the system has been \ncompromised and that an unauthorized user is attempting to hide their activities or \ncompromise additional accounts.",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor events that modify user/group information.  \nExample:  \n# printf \"  \n-w /etc/group -p wa -k identity  \n-w /etc/passwd -p wa -k identity  \n-w /etc/gshadow -p wa -k identity  \n-w /etc/shadow -p wa -k identity  \n-w /etc/security/opasswd -p wa -k identity  \n-w /etc/nsswitch.conf -p wa -k identity  \n-w /etc/pam.conf -p wa -k identity \n-w /etc/pam.d -p wa -k identity  \n\" >> /etc/audit/rules.d/50 -identity.rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.3.9": {
        "Title": "Ensure discretionary access control permission \nmodification events are collected",
        "Description": "Monitor changes to file permissions, attributes, ownership and group. The parameters in \nthis section track changes for system calls that affect file permissions and attributes. \nThe following commands and system calls effect the permissions, ownership and \nvarious attributes of files.  \n• chmod   \n• fchmod   \n• fchmodat   \n• chown   \n• fchown   \n• fchownat   \n• lchown   \n• setxattr   \n• lsetxattr   \n• fsetxattr   \n• removexattr   \n• lremovexattr   \n• fremovexattr   \nIn all cases, an audit record will only be written for non -system user ids and will ignore \nDaemon events. All audit records will be tagged with the identifier \"perm_mod.\"",
        "Rationale": "Monitoring for changes in file attributes could alert a system administrator to activity that \ncould indicate intruder activity or policy violation.",
        "Remediation": "Create audit rules  \nEdit or create a file in the /etc/audit/rules.d/  directory, ending in .rules  extension, \nwith the relevant rules to monitor discretionary access control permission modification \nevents.  \nExample:  \n# { \nUID_MIN=$(awk '/^ \\s*UID_MIN/{print $2}' /etc/login.defs)  \n[ -n \"${UID_MIN}\" ] && printf \"  \n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F \nauid!=unset -F key=perm_mod  \n-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod  \n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F \nauid!=unset -F key=perm_mod  \n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F \nauid>=${UID_MIN} -F auid!=unset -F key=pe rm_mod \n-a always,exit -F arch=b64 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod  \n-a always,exit -F arch=b32 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod  \n\" >> /etc/audit/rules.d/50 -perm_mod.rules || printf \"ERROR: Variable \n'UID_MIN' is unset. \\n\" \n} \nLoad audit rules  \nMerge and load the rules into active configuration:  \n# augenrules --load \nCheck if reboot is required.  \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules \\n\"; fi#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.1": {
        "Title": "Ensure the audit log file directory mode is configured",
        "Description": "The audit log directory contains audit log files.",
        "Rationale": "Audit information includes all information including: audit records, audit settings and \naudit reports. This information is needed to successfully audit system activity. This \ninformation must be protected from unauthorized modification or deletion. If this \ninformation were to be compromised, forensic analysis and discovery of the true source \nof potentially malicious system activity is impossible to achieve.",
        "Remediation": "Run the following command to configure the audit log directory to have a mode of \n\"0750\" or less permissive:  \n# chmod g -w,o-rwx \"$(dirname \"$(awk -F= '/^\\s*log_file \\s*/{print $2}' \n/etc/audit/auditd.conf | xargs)\")\"  \nDefault Value:  \n750#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.10": {
        "Title": "Ensure audit tools group owner is configured",
        "Description": "Audit tools include, but are not limited to, vendor -provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information.",
        "Remediation": "Run the following command to change group ownership to the groop root : \n# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.2": {
        "Title": "Ensure audit log files mode is configured",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.",
        "Remediation": "Run the following command to remove more permissive mode than 0640  from audit log \nfiles: \n# [ -f /etc/audit/auditd.conf ] && find \"$(dirname $(awk -F \"=\" \n'/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))\" -type f -perm \n/0137 -exec chmod u -x,g-wx,o-rwx {} +  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 3.3 Configure Data Access Control Lists  \n Configure data access control lists based on a user’s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications.  ● ● ● \nv7 14.6 Protect Information through Access Control Lists  \n Protect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation base d on their need to access the information as a part of their \nresponsibilities.  ● ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1070, T1070.002, T1083, \nT1083.000  TA0007#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.3": {
        "Title": "Ensure audit log files owner is configured",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.",
        "Remediation": "Run the following command to configure the audit log files to be owned by the root  \nuser:  \n# [ -f /etc/audit/auditd.conf ] && find \"$(dirname $(awk -F \"=\" \n'/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))\" -type f ! -user \nroot -exec chown root {} +#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.4": {
        "Title": "Ensure audit log files group owner is configured",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.",
        "Remediation": "Run the following command to configure the audit log files to be owned by adm group:  \n# find $(dirname $(awk -F\"=\" '/^ \\s*log_file \\s*=\\s*/ {print $2}' \n/etc/audit/auditd.conf | xargs)) -type f \\( ! -group adm -a ! -group root \\) \n-exec chgrp adm {} +  \nRun the following command to configure the audit log files to be owned by the adm \ngroup:  \n# chgrp adm /var/log/audit/  \nRun the following command to set the log_group  parameter in the audit configuration \nfile to log_group = adm : \n# sed -ri 's/^\\s*#?\\s*log_group \\s*=\\s*\\S+(\\s*#.*)?.*$/log_group = adm \\1/' \n/etc/audit/auditd.conf  \nRun the following command to restart the audit daemon to reload the configuration file:  \n# systemctl restart auditd  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 3.3 Configure Data Access Control Lists  \n Configure data access control lists based on a user’s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications.  ● ● ● \nv7 14.6 Protect Information through Access Control Lists  \n Protect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation base d on their need to access the information as a part of their \nresponsibilities.  ● ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1070, T1070.002, T1083, \nT1083.000  TA0007#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.5": {
        "Title": "Ensure audit configuration files mode is configured",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events.  \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investi gate \nevents relating to an incident.",
        "Remediation": "Run the following command to remove more permissive mode than 0640 from the audit \nconfiguration files:  \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) -exec \nchmod u-x,g-wx,o-rwx {} +  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 3.3 Configure Data Access Control Lists  \n Configure data access control lists based on a user’s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications.  ● ● ● \nv7 14.6 Protect Information through Access Control Lists  \n Protect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation base d on their need to access the information as a part of their \nresponsibilities.  ● ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1070, T1070.002, T1083, \nT1083.000  TA0007#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.6": {
        "Title": "Ensure audit configuration files owner is configured",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events.  \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investi gate \nevents relating to an incident.",
        "Remediation": "Run the following command to change ownership to root  user:  \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -user \nroot -exec chown root {} +  \n   CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 3.3 Configure Data Access Control Lists  \n Configure data access control lists based on a user’s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications.  ● ● ● \nv7 14.6 Protect Information through Access Control Lists  \n Protect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation base d on their need to access the information as a part of their \nresponsibilities.  ● ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1070, T1070.002, T1083, \nT1083.000  TA0007#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.7": {
        "Title": "Ensure audit configuration files group owner is configured",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events.  \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investi gate \nevents relating to an incident.",
        "Remediation": "Run the following command to change group to root : \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -group \nroot -exec chgrp root {} +  \n   CIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 3.3 Configure Data Access Control Lists  \n Configure data access control lists based on a user’s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications.  ● ● ● \nv7 14.6 Protect Information through Access Control Lists  \n Protect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation base d on their need to access the information as a part of their \nresponsibilities.  ● ● ● \n \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1070, T1070.002, T1083, \nT1083.000  TA0007#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.8": {
        "Title": "Ensure audit tools mode is configured",
        "Description": "Audit tools include, but are not limited to, vendor -provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information.",
        "Remediation": "Run the following command to remove more permissive mode from the audit tools:  \n# chmod go -w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "6.3.4.9": {
        "Title": "Ensure audit tools owner is configured",
        "Description": "Audit tools include, but are not limited to, vendor -provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information.",
        "Remediation": "Run the following command to change the owner of the audit tools to the root  user:  \n# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules  \nCIS Controls:  \nControls \nVersion  Control  IG 1 IG 2 IG 3 \nv8 3.3 Configure Data Access Control Lists  \n Configure data access control lists based on a user’s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications.  ● ● ● \nv7 14.6 Protect Information through Access Control Lists  \n Protect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation base d on their need to access the information as a part of their \nresponsibilities.  ● ● ●   \nMITRE ATT&CK Mappings:  \nTechniques / Sub -\ntechniques  Tactics  Mitigations  \nT1070, T1070.002, T1083, \nT1083.000  TA0007#!/usr/bin/env bash",
        "L1": "False",
        "L2": "True",
        "BL": "False",
        "SL1": "True",
        "SL2": "True"
    },
    "7.1.1": {
        "Title": "Ensure permissions on /etc/passwd are configured",
        "Description": "The /etc/passwd  file contains user account information that is used by many system \nutilities and therefore must be readable for these utilities to operate.",
        "Rationale": "It is critical to ensure that the /etc/passwd  file is protected from unauthorized write \naccess. Although it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/passwd : \n# chmod u -x,go-wx /etc/passwd  \n# chown root:root /etc/passwd  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.10": {
        "Title": "Ensure permissions on /etc/security/opasswd are \nconfigured",
        "Description": "/etc/security/opasswd  and it's backup /etc/security/opasswd.old  hold user's \nprevious passwords if pam_unix  or pam_pwhistory  is in use on the system",
        "Rationale": "It is critical to ensure that /etc/security/opasswd  is protected from unauthorized \naccess. Although it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/security/opasswd  and /etc/security/opasswd.old  is they exist:  \n# [ -e \"/etc/security/opasswd\" ] && chmod u -x,go-rwx /etc/security/opasswd  \n# [ -e \"/etc/security/opasswd\" ] && chown root:root /etc/security/opasswd  \n# [ -e \"/etc/security/opasswd.old\" ] && chmod u -x,go-rwx \n/etc/security/opasswd.old  \n# [ -e \"/etc/security/op asswd.old\" ] && chown root:root \n/etc/security/opasswd.old  \nDefault Value:  \n/etc/security/opasswd Access: (0600/ -rw------- ) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.11": {
        "Title": "Ensure world writable files and directories are secured",
        "Description": "World writable files are the least secure. Data in world -writable files can be modified and \ncompromised by any user on the system. World writable files may also indicate an \nincorrectly written script or program that could potentially be the cause of a larg er \ncompromise to the system's integrity. See the chmod(2)  man page for more \ninformation.  \nSetting the sticky bit on world writable directories prevents users from deleting or \nrenaming files in that directory that are not owned by them.",
        "Rationale": "Data in world -writable files can be modified and compromised by any user on the \nsystem. World writable files may also indicate an incorrectly written script or program \nthat could potentially be the cause of a larger compromise to the system's integrity.  \nThis feature prevents the ability to delete or rename files in world writable directories \n(such as /tmp  ) that are owned by another user.",
        "Remediation": "• World Writable Files:  \no It is recommended that write access is removed from other  with the \ncommand ( chmod o-w <filename>  ), but always consult relevant vendor \ndocumentation to avoid breaking any application dependencies on a given \nfile. \n• World Writable Directories:  \no Set the sticky bit on all world writable directories with the command ( \nchmod a+t <directory_name>  ) \nRun the following script to:  \n• Remove other write permission from any world writable files  \n• Add the sticky bit to all world writable directories  \n#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.12": {
        "Title": "Ensure no files or directories without an owner and a group \nexist",
        "Description": "Administrators may delete users or groups from the system and neglect to remove all \nfiles and/or directories owned by those users or groups.",
        "Rationale": "A new user or group who is assigned a deleted user's user ID or group ID may then end \nup \"owning\" a deleted user or group's files, and thus have more access on the system \nthan was intended.",
        "Remediation": "Remove or set ownership and group ownership of these files and/or directories to an \nactive user on the system as appropriate.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.13": {
        "Title": "Ensure SUID and SGID files are reviewed (Manual)",
        "Description": "The owner of a file can set the file's permissions to run with the owner's or group's \npermissions, even if the user running the program is not the owner or a member of the \ngroup. The most common reason for a SUID or SGID program is to enable users to \nperfo rm functions (such as changing their password) that require root privileges.",
        "Rationale": "There are valid reasons for SUID and SGID programs, but it is important to identify and \nreview such programs to ensure they are legitimate. Review the files returned by the \naction in the audit section and check to see if system binaries have a different \nchecksum than what from the package. This is an indication that the binary may have \nbeen replaced.",
        "Remediation": "Ensure that no rogue SUID or SGID programs have been introduced into the system. \nReview the files returned by the action in the Audit section and confirm the integrity of \nthese binaries.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.2": {
        "Title": "Ensure permissions on /etc/passwd - are configured",
        "Description": "The /etc/passwd - file contains backup user account information.",
        "Rationale": "It is critical to ensure that the /etc/passwd - file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/passwd -: \n# chmod u -x,go-wx /etc/passwd - \n# chown root:root /etc/passwd - \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: { 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.3": {
        "Title": "Ensure permissions on /etc/group are configured",
        "Description": "The /etc/group  file contains a list of all the valid groups defined in the system. The \ncommand below allows read/write access for root and read access for everyone else.",
        "Rationale": "The /etc/group  file needs to be protected from unauthorized changes by non -\nprivileged users, but needs to be readable as this information is used with many non -\nprivileged programs.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/group : \n# chmod u -x,go-wx /etc/group  \n# chown root:root /etc/group  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.4": {
        "Title": "Ensure permissions on /etc/group - are configured",
        "Description": "The /etc/group - file contains a backup list of all the valid groups defined in the \nsystem.",
        "Rationale": "It is critical to ensure that the /etc/group - file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/group -: \n# chmod u -x,go-wx /etc/group - \n# chown root:root /etc/group - \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.5": {
        "Title": "Ensure permissions on /etc/shadow are configured",
        "Description": "The /etc/shadow  file is used to store the information about user accounts that is critical \nto the security of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "If attackers can gain read access to the /etc/shadow  file, they can easily run a \npassword cracking program against the hashed password to break it. Other security \ninformation that is stored in the /etc/shadow  file (such as expiration) could also be \nuseful to subvert the user accounts.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/shadow : \n# chown root:root /etc/shadow  \n# chmod 0000 /etc/shadow  \nDefault Value:  \nAccess: (0/ ---------- ) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.6": {
        "Title": "Ensure permissions on /etc/shadow - are configured",
        "Description": "The /etc/shadow - file is used to store backup information about user accounts that is \ncritical to the security of those accounts, such as the hashed password and other \nsecurity information.",
        "Rationale": "It is critical to ensure that the /etc/shadow - file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/shadow -: \n# chown root:root /etc/shadow - \n# chmod 0000 /etc/shadow - \nDefault Value:  \nAccess: (0/ ---------- ) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.7": {
        "Title": "Ensure permissions on /etc/gshadow are configured",
        "Description": "The /etc/gshadow  file is used to store the information about groups that is critical to \nthe security of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "If attackers can gain read access to the /etc/gshadow  file, they can easily run a \npassword cracking program against the hashed password to break it. Other security \ninformation that is stored in the /etc/gshadow  file (such as group administrators) could \nalso be useful to subvert the group.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/gshadow : \n# chown root:root /etc/gshadow  \n# chmod 0000 /etc/gshadow  \nDefault Value:  \nAccess: (0/ ---------- ) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.8": {
        "Title": "Ensure permissions on /etc/gshadow - are configured",
        "Description": "The /etc/gshadow - file is used to store backup information about groups that is critical \nto the security of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "It is critical to ensure that the /etc/gshadow - file is protected from unauthorized \naccess. Although it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/gshadow -: \n# chown root:root /etc/gshadow - \n# chmod 0000 /etc/gshadow - \nDefault Value:  \nAccess: (0/ ---------- ) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.1.9": {
        "Title": "Ensure permissions on /etc/shells are configured",
        "Description": "/etc/shells  is a text file which contains the full pathnames of valid login shells. This \nfile is consulted by chsh  and available to be queried by other programs.",
        "Rationale": "It is critical to ensure that the /etc/shells  file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/shells : \n# chmod u -x,go-wx /etc/shells  \n# chown root:root /etc/shells  \nDefault Value:  \nAccess: (0644/ -rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.1": {
        "Title": "Ensure accounts in /etc/passwd use shadowed passwords",
        "Description": "Local accounts can uses shadowed passwords. With shadowed passwords, The \npasswords are saved in shadow password file, /etc/shadow , encrypted by a salted \none-way hash. Accounts with a shadowed password have an x in the second field in \n/etc/passwd .",
        "Rationale": "The /etc/passwd  file also contains information like user ID's and group ID's that are \nused by many system programs. Therefore, the /etc/passwd  file must remain world \nreadable. In spite of encoding the password with a randomly -generated one -way hash \nfunction, an attacker could still break the system if they got access to the /etc/passwd  \nfile. This can be mitigated by using shadowed passwords, thus moving the passwords in \nthe /etc/passwd  file to /etc/shadow . The /etc/shadow  file is set so only root will be \nable to read and write. This helps mitigate the risk of an attacker gaining access to the \nencoded passwords with which to perform a dictionary attack.  \nNote:  \n• All accounts must have passwords or be locked to prevent the account from \nbeing used by an unauthorized user.  \n• A user account with an empty second field in /etc/passwd  allows the account to \nbe logged into by providing only the username.",
        "Remediation": "Run the following command to set accounts to use shadowed passwords and migrate \npasswords in /etc/passwd  to /etc/shadow : \n# pwconv  \nInvestigate to determine if the account is logged in and what it is being used for, to \ndetermine if it needs to be forced off.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.2": {
        "Title": "Ensure /etc/shadow password fields are not empty",
        "Description": "An account with an empty password field means that anybody may log in as that user \nwithout providing a password.",
        "Rationale": "All accounts must have passwords or be locked to prevent the account from being used \nby an unauthorized user.",
        "Remediation": "If any accounts in the /etc/shadow  file do not have a password, run the following \ncommand to lock the account until it can be determined why it does not have a \npassword:  \n# passwd -l <username>  \nAlso, check to see if the account is logged in and investigate what it is being used for to \ndetermine if it needs to be forced off.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.3": {
        "Title": "Ensure all groups in /etc/passwd exist in /etc/group",
        "Description": "Over time, system administration errors and changes can lead to groups being defined \nin /etc/passwd  but not in /etc/group  .",
        "Rationale": "Groups defined in the /etc/passwd  file but not in the /etc/group  file pose a threat to \nsystem security since group permissions are not properly managed.",
        "Remediation": "Analyze the output of the Audit step above and perform the appropriate action to correct \nany discrepancies found.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.4": {
        "Title": "Ensure no duplicate UIDs exist",
        "Description": "Although the useradd  program will not let you create a duplicate User ID (UID), it is \npossible for an administrator to manually edit the /etc/passwd  file and change the UID \nfield.",
        "Rationale": "Users must be assigned unique UIDs for accountability and to ensure appropriate \naccess protections.",
        "Remediation": "Based on the results of the audit script, establish unique UIDs and review all files owned \nby the shared UIDs to determine which UID they are supposed to belong to.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.5": {
        "Title": "Ensure no duplicate GIDs exist",
        "Description": "Although the groupadd  program will not let you create a duplicate Group ID (GID), it is \npossible for an administrator to manually edit the /etc/group  file and change the GID \nfield.",
        "Rationale": "User groups must be assigned unique GIDs for accountability and to ensure appropriate \naccess protections.",
        "Remediation": "Based on the results of the audit script, establish unique GIDs and review all files \nowned by the shared GID to determine which group they are supposed to belong to.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.6": {
        "Title": "Ensure no duplicate user names exist",
        "Description": "Although the useradd  program will not let you create a duplicate user name, it is \npossible for an administrator to manually edit the /etc/passwd  file and change the user \nname.",
        "Rationale": "If a user is assigned a duplicate user name, it will create and have access to files with \nthe first UID for that username in /etc/passwd  . For example, if \"test4\" has a UID of \n1000 and a subsequent \"test4\" entry has a UID of 2000, logging in as \"test4\" will use \nUID 1000. Effectively, the UID is shared, which is a security problem.",
        "Remediation": "Based on the results of the audit script, establish unique user names for the users. File \nownerships will automatically reflect the change as long as the users have unique UIDs.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.7": {
        "Title": "Ensure no duplicate group names exist",
        "Description": "Although the groupadd  program will not let you create a duplicate group name, it is \npossible for an administrator to manually edit the /etc/group  file and change the group \nname.",
        "Rationale": "If a group is assigned a duplicate group name, it will create and have access to files \nwith the first GID for that group in /etc/group  . Effectively, the GID is shared, which is \na security problem.",
        "Remediation": "Based on the results of the audit script, establish unique names for the user groups. File \ngroup ownerships will automatically reflect the change as long as the groups have \nunique GIDs.#!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.8": {
        "Title": "Ensure local interactive user home directories are \nconfigured",
        "Description": "The user home directory is space defined for the particular user to set local environment \nvariables and to store personal files. While the system administrator can establish \nsecure permissions for users' home directories, the users can easily override thes e. \nUsers can be defined in /etc/passwd  without a home directory or with a home directory \nthat does not actually exist.",
        "Rationale": "Since the user is accountable for files stored in the user home directory, the user must \nbe the owner of the directory. Group or world -writable user home directories may enable \nmalicious users to steal or modify other users' data or to gain another user's system \nprivileges. If the user's home directory does not exist or is unassigned, the user will be \nplaced in \"/\" and will not be able to write any files or have local environment variables \nset.",
        "Remediation": "If a local interactive users' home directory is undefined and/or doesn't exist, follow local \nsite policy and perform one of the following:  \n• Lock the user account  \n• Remove the user from the system  \n• create a directory for the user. If undefined, edit /etc/passwd  and add the \nabsolute path to the directory to the last field of the user.  \nRun the following script to:  \n• Remove excessive permissions from local interactive users home directories  \n• Update the home directory's owner   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    },
    "7.2.9": {
        "Title": "Ensure local interactive user dot files access is configured",
        "Description": "While the system administrator can establish secure permissions for users' \"dot\" files, \nthe users can easily override these.  \n• .forward  file specifies an email address to forward the user's mail to.  \n• .rhost  file provides the \"remote authentication\" database for the rcp, rlogin, and \nrsh commands and the rcmd() function. These files bypass the standard \npassword -based user authentication mechanism. They specify remote hosts and \nusers that are considered trusted  (i.e. are allowed to access the local system \nwithout supplying a password)  \n• .netrc  file contains data for logging into a remote host or passing authentication \nto an API.  \n• .bash_history  file keeps track of the user’s commands.",
        "Rationale": "User configuration files with excessive or incorrect access may enable malicious users \nto steal or modify other users' data or to gain another user's system privileges.",
        "Remediation": "Making global modifications to users' files without alerting the user community can result \nin unexpected outages and unhappy users. Therefore, it is recommended that a \nmonitoring policy be established to report user dot file permissions and determine the \naction to be taken in accordance with site policy.  \nThe following script will:  \n• remove excessive permissions on dot files within interactive users' home \ndirectories  \n• change ownership of dot files within interactive users' home directories to the \nuser \n• change group ownership of dot files within interactive users' home directories to \nthe user's primary group  \n• list .forward  and .rhost  files to be investigated and manually deleted   #!/usr/bin/env bash",
        "L1": "True",
        "L2": "False",
        "BL": "False",
        "SL1": "True",
        "SL2": "False"
    }
}